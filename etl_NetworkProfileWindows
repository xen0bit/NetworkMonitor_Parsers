//#  (c) 2009 CodePlex Foundation
//#
//#  Title:                  Microsoft-Windows-NetworkProfile
//#
//#  Details:                
//#
//#  Public References:      NetworkProfile.man
//#
//#  Comments:               
//#
//#  Revision Class and Date:Minor, 4/1/2009
//#
//####
[RegisterBefore(NetEvent.UserData, MicrosoftWindowsNetworkProfile, "{FBCFAC3F-8459-419F-8E48-1F0B49CDB85E}")]
Protocol NetworkProfile_MicrosoftWindowsNetworkProfile = property.ETLSummary
{
	[BuildConversationWithParent, conversation.ConversationDescription = ""]
	switch(property.EventID)
	{
		case 4001: [property.ETLSummary = this.ToString] NetworkProfile_StartWaitForIdentification StartWaitForIdentification;
		case 4002: [property.ETLSummary = this.ToString] NetworkProfile_StopWaitForIdentification StopWaitForIdentification;
		case 4003: [property.ETLSummary = this.ToString] NetworkProfile_StopWaitForIdentification_Unidentified StopWaitForIdentification_Unidentified;
		case 10000: [property.ETLSummary = this.ToString] NetworkProfile_NetworkConnected NetworkConnected;
		case 10001: [property.ETLSummary = this.ToString] NetworkProfile_NetworkDisconnected NetworkDisconnected;
		case 10002: [property.ETLSummary = this.ToString] NetworkProfile_NetworkCategoryChange NetworkCategoryChange;
		case 10003: [property.ETLSummary = this.ToString] NetworkProfile_StartNotifyNetworkConnectedEvent StartNotifyNetworkConnectedEvent;
		case 10004: [property.ETLSummary = this.ToString] NetworkProfile_StopNotifyNetworkConnectedEvent StopNotifyNetworkConnectedEvent;
		case 10005: [property.ETLSummary = this.ToString] NetworkProfile_StartNotifyNetworkProfileEvent StartNotifyNetworkProfileEvent;
		case 10006: [property.ETLSummary = this.ToString] NetworkProfile_StopNotifyNetworkProfileEvent StopNotifyNetworkProfileEvent;
		case 10007: [property.ETLSummary = this.ToString] NetworkProfile_StartNotifyNetworkDisconnectedEvent StartNotifyNetworkDisconnectedEvent;
		case 10008: [property.ETLSummary = this.ToString] NetworkProfile_StopNotifyNetworkDisconnectedEvent StopNotifyNetworkDisconnectedEvent;
		default: [property.ETLSummary = "Not exist EventID"]struct{};
	}
}
Table NetworkProfile_StateMap(value)
{
	switch(value)
	{
		case 0: "Identifying Network";
		case 1: "Identified Network";
		case 2: "Unidentified Network";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table NetworkProfile_NetworkProfileEventStateMap(value)
{
	switch(value)
	{
		case 0: "Network Added Event Notifying";
		case 1: "Network Deleted Event Notifying";
		case 2: "Network Connected Event Notifying";
		case 3: "Network Disconnected Event Notifying";
		case 4: "Network Property Event Notifying";
		case 5: "Network Added Event Notified";
		case 6: "Network Deleted Event Notified";
		case 7: "Network Connected Event Notified";
		case 8: "Network Disconnected Event Notified";
		case 9: "Network Property Event Notified";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table NetworkProfile_NetworkCategoryMap(value)
{
	switch(value)
	{
		case 0: "Public";
		case 1: "Private";
		case 2: "Domain Authenticated";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table NetworkProfile_NetworkTypeMap(value)
{
	switch(value)
	{
		case 0: "Unmanaged";
		case 1: "Managed";
		default:
			FormatString("Unknown value: %d", value);
	}
}
struct NetworkProfile_NetworkStateMap = Local.BitMapSummary
{
	UINT32 BitfieldConnected:1 = FormatString("   (%s) %s", this.ToBitString, this? "Connected":"");
	UINT32 BitfieldDisconnected:1 = FormatString("(%s) %s", this.ToBitString, this? "Disconnected":"");
	UINT32 BitfieldIPV4Local:1 = FormatString("   (%s) %s", this.ToBitString, this? "IPV4Local":"");
	UINT32 BitfieldIPV4Internet:1 = FormatString("(%s) %s", this.ToBitString, this? "IPV4Internet":"");
	UINT32 BitfieldIPV6Local:1 = FormatString("   (%s) %s", this.ToBitString, this? "IPV6Local":"");
	UINT32 BitfieldIPV6Internet:1 = FormatString("(%s) %s", this.ToBitString, this? "IPV6Internet":"");
	UINT32 Reserved1:26 = FormatString("           (%s)", this.ToBitString);
	[Local.BitMapSummary =
		(BitfieldConnected? "Connected" + " " : "") +
		(BitfieldDisconnected? "Disconnected" + " " : "") +
		(BitfieldIPV4Local? "IPV4Local" + " " : "") +
		(BitfieldIPV4Internet? "IPV4Internet" + " " : "") +
		(BitfieldIPV6Local? "IPV6Local" + " " : "") +
		(BitfieldIPV6Internet? "IPV6Internet" + " " : "") +
		""]
	struct{}
}
Struct NetworkProfile_StartWaitForIdentification = FormatString("Entered State: %s Interface Guid: %s", CurrentOrNextState.ToString, InterfaceGuid.ToString)
{
	GUID(true) InterfaceGuid;
	UINT8 CurrentOrNextState = NetworkProfile_StateMap(this);
}
Struct NetworkProfile_StopWaitForIdentification = FormatString("Transitioning to State: %s Interface Guid: %s", CurrentOrNextState.ToString, InterfaceGuid.ToString)
{
	GUID(true) InterfaceGuid;
	UINT8 CurrentOrNextState = NetworkProfile_StateMap(this);
}
Struct NetworkProfile_StopWaitForIdentification_Unidentified = FormatString("Transitioning to State: %s Interface Guid: %s", CurrentOrNextState.ToString, InterfaceGuid.ToString)
{
	GUID(true) InterfaceGuid;
	UINT8 CurrentOrNextState = NetworkProfile_StateMap(this);
}
Struct NetworkProfile_NetworkConnected = FormatString("Network Connected  Name: %s  Desc: %s  Type: %s  State: %s  Category: %s ", Name.ToString, Description.ToString, Type.ToString, State.ToString, Category.ToString)
{
	UnicodeString Name;
	UnicodeString Description;
	GUID(true) Guid;
	UINT32 Type = NetworkProfile_NetworkTypeMap(this);
	NetworkProfile_NetworkStateMap State;
	UINT32 Category = NetworkProfile_NetworkCategoryMap(this);
}
Struct NetworkProfile_NetworkDisconnected = FormatString("Network Disconnected  Name: %s  Desc: %s  Type: %s  State: %s  Category: %s ", Name.ToString, Description.ToString, Type.ToString, State.ToString, Category.ToString)
{
	UnicodeString Name;
	UnicodeString Description;
	GUID(true) Guid;
	UINT32 Type = NetworkProfile_NetworkTypeMap(this);
	NetworkProfile_NetworkStateMap State;
	UINT32 Category = NetworkProfile_NetworkCategoryMap(this);
}
Struct NetworkProfile_NetworkCategoryChange = FormatString("Network Category Changed  Name: %s  Desc: %s  Type: %s  State: %s  Category: %s ", Name.ToString, Description.ToString, Type.ToString, State.ToString, Category.ToString)
{
	UnicodeString Name;
	UnicodeString Description;
	GUID(true) Guid;
	UINT32 Type = NetworkProfile_NetworkTypeMap(this);
	NetworkProfile_NetworkStateMap State;
	UINT32 Category = NetworkProfile_NetworkCategoryMap(this);
}
Struct NetworkProfile_StartNotifyNetworkConnectedEvent = FormatString("Posting Network Connected Event Type: %s  ProfileID: %s ", NetworkProfileEventState.ToString, Guid.ToString)
{
	UINT32 NetworkProfileEventState = NetworkProfile_NetworkProfileEventStateMap(this);
	GUID(true) Guid;
}
Struct NetworkProfile_StopNotifyNetworkConnectedEvent = FormatString("Posted Network Connected Event Type: %s  ProfileID: %s ", NetworkProfileEventState.ToString, Guid.ToString)
{
	UINT32 NetworkProfileEventState = NetworkProfile_NetworkProfileEventStateMap(this);
	GUID(true) Guid;
}
Struct NetworkProfile_StartNotifyNetworkProfileEvent = FormatString("Posting Network Profile Event Type: %s  ProfileID: %s ", NetworkProfileEventState.ToString, Guid.ToString)
{
	UINT32 NetworkProfileEventState = NetworkProfile_NetworkProfileEventStateMap(this);
	GUID(true) Guid;
}
Struct NetworkProfile_StopNotifyNetworkProfileEvent = FormatString("Posted Network Profile Event Type: %s  ProfileID: %s ", NetworkProfileEventState.ToString, Guid.ToString)
{
	UINT32 NetworkProfileEventState = NetworkProfile_NetworkProfileEventStateMap(this);
	GUID(true) Guid;
}
Struct NetworkProfile_StartNotifyNetworkDisconnectedEvent = FormatString("Posting Network Disconnected Event Type: %s  ProfileID: %s ", NetworkProfileEventState.ToString, Guid.ToString)
{
	UINT32 NetworkProfileEventState = NetworkProfile_NetworkProfileEventStateMap(this);
	GUID(true) Guid;
}
Struct NetworkProfile_StopNotifyNetworkDisconnectedEvent = FormatString("Posted Network Disconnected Event Type: %s  ProfileID: %s ", NetworkProfileEventState.ToString, Guid.ToString)
{
	UINT32 NetworkProfileEventState = NetworkProfile_NetworkProfileEventStateMap(this);
	GUID(true) Guid;
}
[RegisterBefore(EventDescriptor.DefaultKeyword, MicrosoftWindowsNetworkProfile_Keyword, "{FBCFAC3F-8459-419F-8E48-1F0B49CDB85E}")]
struct NetworkProfile_MicrosoftWindowsNetworkProfile_Keyword
{
	UINT64 Reserved1:32 = FormatString("        (%s)", this.ToBitString);
	UINT64 utSendPath:1 = FormatString("       (%s) %s", this.ToBitString, this? "KW_SEND": "");
	UINT64 utReceivePath:1 = FormatString("    (%s) %s", this.ToBitString, this? "KW_RECEIVE":"");
	UINT64 utL3ConnectPath:1 = FormatString("  (%s) %s", this.ToBitString, this? "KW_L3_CONNECT":"");
	UINT64 utL2ConnectPath:1 = FormatString("  (%s) %s", this.ToBitString, this? "KW_L2_CONNECT":"");
	UINT64 utClosePath:1 = FormatString("      (%s) %s", this.ToBitString, this? "KW_CLOSE":"");
	UINT64 utAuthentication:1 = FormatString(" (%s) %s", this.ToBitString, this? "KW_AUTHENTICATION":"");
	UINT64 utConfiguration:1 = FormatString("  (%s) %s", this.ToBitString, this? "KW_CONFIGURATION":"");
	UINT64 utGlobal:1 = FormatString("         (%s) %s", this.ToBitString, this? "KW_GLOBAL":"");
	UINT64 utDropped:1 = FormatString("        (%s) %s", this.ToBitString, this? "KW_DROPPED":"");
	UINT64 utPiiPresent:1 = FormatString("     (%s) %s", this.ToBitString, this? "KW_PII_PRESENT":"");
	UINT64 utPacket:1 = FormatString("         (%s) %s", this.ToBitString, this? "KW_PACKET":"");
	UINT64 utAddress:1 = FormatString("        (%s) %s", this.ToBitString, this? "KW_ADDRESS":"");
	UINT64 utStdTemplateHint:1 = FormatString("(%s) %s", this.ToBitString, this? "KW_STD_TEMPLATE_HINT":"");
	UINT64 utStateTransition:1 = FormatString("(%s) %s", this.ToBitString, this? "KW_STATE_TRANSITION":"");
	UINT64 Reserved2:18 = FormatString("        (%s)", this.ToBitString);
}

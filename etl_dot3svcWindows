//#  (c) 2009 CodePlex Foundation
//#
//#  Title:                  Microsoft-Windows-Dot3svc
//#
//#  Details:                
//#
//#  Public References:      dot3svc.man
//#
//#  Comments:               
//#
//#  Revision Class and Date:Minor, 4/1/2009
//#
//####
[RegisterBefore(NetEvent.UserData, MicrosoftWindowsWiredAutoConfig, "{b92cf7fd-dc10-4c6b-a72d-1613bf25e597}")]
Protocol Dot3svc_MicrosoftWindowsWiredAutoConfig = property.ETLSummary
{
	[BuildConversationWithParent, conversation.ConversationDescription = ""]
	switch(property.EventID)
	{
		case 15500: [property.ETLSummary = this.ToString] Dot3svc_MediaStateChangeUnplugEventDesc MediaStateChangeUnplugEventDesc;
		case 15501: [property.ETLSummary = this.ToString] Dot3svc_MediaStateChangeConnectEventDesc MediaStateChangeConnectEventDesc;
		case 15502: [property.ETLSummary = this.ToString] Dot3svc_ProfileChangeEventDesc ProfileChangeEventDesc;
		case 15503: [property.ETLSummary = this.ToString] Dot3svc_Auth802_1XEventDesc Auth802_1XEventDesc;
		case 15504: [property.ETLSummary = this.ToString] Dot3svc_ReStart802_1XEventDesc ReStart802_1XEventDesc;
		case 15505: [property.ETLSummary = this.ToString] Dot3svc_Result802_1XEventSuccessDesc Result802_1XEventSuccessDesc;
		case 15514: [property.ETLSummary = this.ToString] Dot3svc_Result802_1XEventFailureDesc Result802_1XEventFailureDesc;
		case 15506: [property.ETLSummary = this.ToString] Dot3svc_BlockedStateEnterEventDesc BlockedStateEnterEventDesc;
		case 15507: [property.ETLSummary = this.ToString] Dot3svc_BlockedStateExitEventDesc BlockedStateExitEventDesc;
		case 15508: [property.ETLSummary = this.ToString] Dot3svc_NdisPortEventDesc NdisPortEventDesc;
		case 15509: [property.ETLSummary = this.ToString] Dot3svc_AdapterStateEventDesc AdapterStateEventDesc;
		case 15510: [property.ETLSummary = this.ToString] Dot3svc_AdapterAddEventDesc AdapterAddEventDesc;
		case 15511: [property.ETLSummary = this.ToString] Dot3svc_Dot3svcStartEventDesc Dot3svcStartEventDesc;
		case 15512: [property.ETLSummary = this.ToString] Dot3svc_Dot3svcStopEventDesc Dot3svcStopEventDesc;
		case 15513: [property.ETLSummary = this.ToString] Dot3svc_AdapterRemoveEventDesc AdapterRemoveEventDesc;
		case 13022: [property.ETLSummary = this.ToString] Dot3svc_Dot3svcPrelogonBegin Dot3svcPrelogonBegin;
		case 13021: [property.ETLSummary = this.ToString] Dot3svc_Dot3svcPrelogonSkip Dot3svcPrelogonSkip;
		case 13032: [property.ETLSummary = this.ToString] Dot3svc_Dot3svcPostlogonBegin Dot3svcPostlogonBegin;
		case 13033: [property.ETLSummary = this.ToString] Dot3svc_Dot3svcPostlogonConnection Dot3svcPostlogonConnection;
		case 13031: [property.ETLSummary = this.ToString] Dot3svc_Dot3svcPostlogonSkip Dot3svcPostlogonSkip;
		case 20001: [property.ETLSummary = this.ToString] Dot3svc_NoInteractiveConsole NoInteractiveConsole;
		case 20002: [property.ETLSummary = this.ToString] Dot3svc_IntfCompleteTimelyFailed IntfCompleteTimelyFailed;
		case 20003: [property.ETLSummary = this.ToString] Dot3svc_NoAvailableNetworks NoAvailableNetworks;
		case 20004: [property.ETLSummary = this.ToString] Dot3svc_IntfInitFailed IntfInitFailed;
		case 20005: [property.ETLSummary = this.ToString] Dot3svc_LoadProfileFailed LoadProfileFailed;
		case 20006: [property.ETLSummary = this.ToString] Dot3svc_NoProfileFound NoProfileFound;
		case 20007: [property.ETLSummary = this.ToString] Dot3svc_SendUIRequestFailed SendUIRequestFailed;
		case 20008: [property.ETLSummary = this.ToString] Dot3svc_CompletePLAPFailed CompletePLAPFailed;
		case 20009: [property.ETLSummary = this.ToString] Dot3svc_NoIntfAvailableNetworks NoIntfAvailableNetworks;
		case 20010: [property.ETLSummary = this.ToString] Dot3svc_InvalidAdapterState InvalidAdapterState;
		case 20011: [property.ETLSummary = this.ToString] Dot3svc_MediaDisconnected MediaDisconnected;
		case 20012: [property.ETLSummary = this.ToString] Dot3svc_CreatePlapRuntimeStateFailed CreatePlapRuntimeStateFailed;
		case 20013: [property.ETLSummary = this.ToString] Dot3svc_CreateTimelyRuntimeStateFailed CreateTimelyRuntimeStateFailed;
		case 20014: [property.ETLSummary = this.ToString] Dot3svc_NoIntfProfileFound NoIntfProfileFound;
		case 20015: [property.ETLSummary = this.ToString] Dot3svc_SetEapUserDataFailed SetEapUserDataFailed;
		case 20016: [property.ETLSummary = this.ToString] Dot3svc_QueryUserDataPropertiesFailed QueryUserDataPropertiesFailed;
		case 20017: [property.ETLSummary = this.ToString] Dot3svc_QueryUserDataByGuidFailed QueryUserDataByGuidFailed;
		case 20018: [property.ETLSummary = this.ToString] Dot3svc_LNI_GetPrimaryDomainInfoFailed LNI_GetPrimaryDomainInfoFailed;
		case 20019: [property.ETLSummary = this.ToString] Dot3svc_LNL_AdapterConnectedSuccess LNL_AdapterConnectedSuccess;
		case 20020: [property.ETLSummary = this.ToString] Dot3svc_LNL_DCConnectTimeout LNL_DCConnectTimeout;
		case 20021: [property.ETLSummary = this.ToString] Dot3svc_LNL_DCConnectWaiting LNL_DCConnectWaiting;
		case 20022: [property.ETLSummary = this.ToString] Dot3svc_LNL_IPChangeSuccess LNL_IPChangeSuccess;
		case 20024: [property.ETLSummary = this.ToString] Dot3svc_LNL_IPChangeTimeout LNL_IPChangeTimeout;
		case 20025: [property.ETLSummary = this.ToString] Dot3svc_LNL_IPChangeWaitFailed LNL_IPChangeWaitFailed;
		case 20026: [property.ETLSummary = this.ToString] Dot3svc_LNL_IPChangeWaiting LNL_IPChangeWaiting;
		case 20028: [property.ETLSummary = this.ToString] Dot3svc_LNL_OneXSuccess LNL_OneXSuccess;
		case 20029: [property.ETLSummary = this.ToString] Dot3svc_LNL_AdapterConnectedTimeout LNL_AdapterConnectedTimeout;
		case 20030: [property.ETLSummary = this.ToString] Dot3svc_LNL_OneXFailed LNL_OneXFailed;
		case 20031: [property.ETLSummary = this.ToString] Dot3svc_LNL_OneXWaitFailed LNL_OneXWaitFailed;
		case 20032: [property.ETLSummary = this.ToString] Dot3svc_LNL_OneXTimeout LNL_OneXTimeout;
		case 20033: [property.ETLSummary = this.ToString] Dot3svc_LNL_TimelyTimeout LNL_TimelyTimeout;
		case 20034: [property.ETLSummary = this.ToString] Dot3svc_LNL_TimelySuccess LNL_TimelySuccess;
		case 20035: [property.ETLSummary = this.ToString] Dot3svc_LNL_TimelyFailed LNL_TimelyFailed;
		case 20036: [property.ETLSummary = this.ToString] Dot3svc_LNL_NoTimelyProfilesFound LNL_NoTimelyProfilesFound;
		case 20037: [property.ETLSummary = this.ToString] Dot3svc_LNL_TimelyInfo LNL_TimelyInfo;
		case 20038: [property.ETLSummary = this.ToString] Dot3svc_LNL_FindTimelyProfileFailed LNL_FindTimelyProfileFailed;
		case 2101: [property.ETLSummary = this.ToString] Dot3svc_DeviceLayerOpenHandleFailed DeviceLayerOpenHandleFailed;
		case 2102: [property.ETLSummary = this.ToString] Dot3svc_QueryOIDFailed QueryOIDFailed;
		case 2103: [property.ETLSummary = this.ToString] Dot3svc_SetOIDFailed SetOIDFailed;
		case 2104: [property.ETLSummary = this.ToString] Dot3svc_SendPacketFailed SendPacketFailed;
		case 2105: [property.ETLSummary = this.ToString] Dot3svc_ReceivePacketFailed ReceivePacketFailed;
		case 2106: [property.ETLSummary = this.ToString] Dot3svc_ShortPacketSkipped ShortPacketSkipped;
		case 2107: [property.ETLSummary = this.ToString] Dot3svc_InvalidPacketTypeSkipped InvalidPacketTypeSkipped;
		case 2108: [property.ETLSummary = this.ToString] Dot3svc_ReceiveCancelled ReceiveCancelled;
		case 2109: [property.ETLSummary = this.ToString] Dot3svc_ReceiveDataFailed ReceiveDataFailed;
		case 21010: [property.ETLSummary = this.ToString] Dot3svc_ReceivePacketSkipped ReceivePacketSkipped;
		case 21011: [property.ETLSummary = this.ToString] Dot3svc_SendDataFailed SendDataFailed;
		case 21012: [property.ETLSummary = this.ToString] Dot3svc_AcmConnectionProgressFailed AcmConnectionProgressFailed;
		case 21013: [property.ETLSummary = this.ToString] Dot3svc_AcmQueryUserDataFailed AcmQueryUserDataFailed;
		case 21014: [property.ETLSummary = this.ToString] Dot3svc_AcmSetMsmProfileFailed AcmSetMsmProfileFailed;
		case 21015: [property.ETLSummary = this.ToString] Dot3svc_AcmSetUserDataFailed AcmSetUserDataFailed;
		case 21016: [property.ETLSummary = this.ToString] Dot3svc_AcmMsmNotifyFailed AcmMsmNotifyFailed;
		case 21017: [property.ETLSummary = this.ToString] Dot3svc_AcmMediaChangeFailed AcmMediaChangeFailed;
		case 21018: [property.ETLSummary = this.ToString] Dot3svc_AcmUIRequestFailed AcmUIRequestFailed;
		case 21019: [property.ETLSummary = this.ToString] Dot3svc_AcmConnectionCompletionRoutineFailed AcmConnectionCompletionRoutineFailed;
		case 21020: [property.ETLSummary = this.ToString] Dot3svc_CSMStateChange CSMStateChange;
		case 21021: [property.ETLSummary = this.ToString] Dot3svc_ResultOneXAuthNotStarted ResultOneXAuthNotStarted;
		case 21022: [property.ETLSummary = this.ToString] Dot3svc_ResultOneXAuthInvalid ResultOneXAuthInvalid;
		case 21023: [property.ETLSummary = this.ToString] Dot3svc_CSMStartLocalEvent CSMStartLocalEvent;
		case 21024: [property.ETLSummary = this.ToString] Dot3svc_CSMCompleteLocalEvent CSMCompleteLocalEvent;
		case 21025: [property.ETLSummary = this.ToString] Dot3svc_StartOneXAuthFailed StartOneXAuthFailed;
		case 21026: [property.ETLSummary = this.ToString] Dot3svc_SendOneXPacketFailed SendOneXPacketFailed;
		case 21027: [property.ETLSummary = this.ToString] Dot3svc_OneXTimedOut OneXTimedOut;
		case 21028: [property.ETLSummary = this.ToString] Dot3svc_OneXNotTimedOut OneXNotTimedOut;
		case 21029: [property.ETLSummary = this.ToString] Dot3svc_GetCurrentMediaStateFailed GetCurrentMediaStateFailed;
		case 21030: [property.ETLSummary = this.ToString] Dot3svc_PacketNoPort PacketNoPort;
		case 21031: [property.ETLSummary = this.ToString] Dot3svc_SwitchAddrSet SwitchAddrSet;
		case 21032: [property.ETLSummary = this.ToString] Dot3svc_OpenDeviceHandleFailed OpenDeviceHandleFailed;
		case 21033: [property.ETLSummary = this.ToString] Dot3svc_CSMStartGlobalEvent CSMStartGlobalEvent;
		case 21034: [property.ETLSummary = this.ToString] Dot3svc_CSMGlobalEventFailed CSMGlobalEventFailed;
		case 21035: [property.ETLSummary = this.ToString] Dot3svc_CSMCompleteGlobalEvent CSMCompleteGlobalEvent;
		case 21036: [property.ETLSummary = this.ToString] Dot3svc_NewInterface NewInterface;
		case 21037: [property.ETLSummary = this.ToString] Dot3svc_MsmInitFailed MsmInitFailed;
		case 21038: [property.ETLSummary = this.ToString] Dot3svc_MsmInitAdapterFailed MsmInitAdapterFailed;
		case 21039: [property.ETLSummary = this.ToString] Dot3svc_ParseRequestFailed ParseRequestFailed;
		case 21040: [property.ETLSummary = this.ToString] Dot3svc_ParseResponseFailed ParseResponseFailed;
		case 21041: [property.ETLSummary = this.ToString] Dot3svc_OneXUIResponseFailed OneXUIResponseFailed;
		case 21042: [property.ETLSummary = this.ToString] Dot3svc_QueryPendingUIRequestFailed QueryPendingUIRequestFailed;
		case 21043: [property.ETLSummary = this.ToString] Dot3svc_ValidateProfileFailed ValidateProfileFailed;
	}
}
Table Dot3svc_mapCSMState(value)
{
	switch(value)
	{
		case 1: "Disconnected";
		case 2: "Connecting";
		case 3: "Connected";
		case 4: "ConnectionFailure";
		case 5: "Authenticating";
		case 6: "Authenticated";
		case 7: "AuthenticationFailed";
		case 8: "AuthenticaorNotFound";
		case 9: "OneXDisabled";
		case 10: "Failure";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table Dot3svc_mapCSMLocalEvent(value)
{
	switch(value)
	{
		case 1: "Local:UCT";
		case 2: "Local:Connect";
		case 3: "Local:Disconnect";
		case 4: "Local:MediaConnect";
		case 5: "Local:MediaDisconnect";
		case 6: "Local:ConnectTimeout";
		case 7: "Local:AuthInProgress";
		case 8: "Local:AuthRestarted";
		case 9: "Local:AuthSuccess";
		case 10: "Local:AuthFailure";
		case 11: "Local:PeerNotFoundOneXEnforced";
		case 12: "Local:PeerNotFoundOneXNotEnforced";
		case 13: "Local:OneXDisabledNotEnforced";
		case 14: "Local:OneXDisabledEnforced";
		case 15: "Local:OneXEnabled";
		case 16: "Local:OneXOuterTimerExpired";
		case 17: "Local:OneXReAuthenticate";
		case 18: "Local:SetRuntimeState";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table Dot3svc_mapCSMGlobalEvent(value)
{
	switch(value)
	{
		case 0: "Global:Connect";
		case 1: "Global:Disconnect";
		case 2: "Global:MediaConnect";
		case 3: "Global:MediaDisconnect";
		case 4: "Global:OneXResult";
		case 5: "Global:Timeout";
		case 6: "Global:ReAuthenticate";
		case 7: "Global:SetRuntimeState";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table Dot3svc_ProfileType(value)
{
	switch(value)
	{
		case 0: "Interface";
		case 1: "Group Policy";
		case 5: "Default";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table Dot3svc_NdisPortControlState(value)
{
	switch(value)
	{
		case 0: "Controlled";
		case 1: "UnControlled";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table Dot3svc_NdisPortAuthState(value)
{
	switch(value)
	{
		case 0: "Authorized";
		case 1: "UnAuthorized";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table Dot3svc_AdapterState(value)
{
	switch(value)
	{
		case 0: "Disabled";
		case 1: "Enabled";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table Dot3svc_tid_Dot3svcPrelogonResult(value)
{
	switch(value)
	{
		case 0: "The operational criteria were not met.";
		case 1: "The operational criteria were met.";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table Dot3svc_tid_Dot3svcPrelogonSkipReason(value)
{
	switch(value)
	{
		case 1: "The machine was not joined to a domain.";
		case 2: "The Ethernet cable is not plugged in.";
		case 3: "The configured EAP Method does not support  single sign on operations.";
		case 4: "The configured EAP method has identified the profile as incapable of pre-logon.";
		case 5: "An unspecified EAP error has occurred.";
		case 6: "Smart card Reader not present";
		case 7: "No Smard card present";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table Dot3svc_tid_Dot3svcPostlogonResult(value)
{
	switch(value)
	{
		case 0: "Success";
		case 1: "Failure";
		case 2: "The operational criteria were not met.";
		case 3: "The operational criteria were met.";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table Dot3svc_tid_Dot3svcPostlogonReason(value)
{
	switch(value)
	{
		case 0: "Success.";
		case 1: "Failed to establish a network connection within the allotted time.";
		case 2: "Failed to establish a network connection.";
		case 3: "Failed to contact a domain controller within the allotted time.";
		case 4: "Failed to contact a domain controller and obtain a TCP/IP address within the allotted time.";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table Dot3svc_tid_Dot3svcPostlogonSkipReason(value)
{
	switch(value)
	{
		case 1: "The machine was not joined to a domain.";
		case 2: "There are no post-logon network profiles.";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Struct Dot3svc_MediaStateChangeUnplugEventDesc = FormatString("The network adapter has been unplugged.  %tNetwork Adapter: %s %tInterface GUID: %s", InterfaceDescription.ToString, InterfaceGuid.ToString)
{
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_MediaStateChangeConnectEventDesc = FormatString("The network adapter has been connected.  %tNetwork Adapter: %s %tInterface GUID: %s", InterfaceDescription.ToString, InterfaceGuid.ToString)
{
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_ProfileChangeEventDesc = FormatString("The profile was applied on the network adapter.  %tNetwork Adapter: %s %tInterface GUID: %s %tProfile Type: %s %tProfile Content: %s", InterfaceDescription.ToString, InterfaceGuid.ToString, ProfileType.ToString, ProfileContent.ToString)
{
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
	UINT32 ProfileType = Dot3svc_ProfileType(this);
	UnicodeString ProfileContent;
}
Struct Dot3svc_Auth802_1XEventDesc = FormatString("Wired 802.1X Authentication was started.  %tNetwork Adapter: %s %tInterface GUID: %s %tConnection ID: %s", InterfaceDescription.ToString, InterfaceGuid.ToString, ConnectionID.ToString)
{
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
	EtlPtr ConnectionID;
}
Struct Dot3svc_ReStart802_1XEventDesc = FormatString("Wired 802.1X Authentication was restarted.  %tNetwork Adapter: %s %tInterface GUID: %s %tConnection ID: %s %tRestart Reason: %s", InterfaceDescription.ToString, InterfaceGuid.ToString, ConnectionID.ToString, RestartReason.ToString)
{
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
	EtlPtr ConnectionID;
	UnicodeString RestartReason;
}
Struct Dot3svc_Result802_1XEventSuccessDesc = FormatString("Wired 802.1X Authentication succeeded.  %tNetwork Adapter: %s %tInterface GUID: %s %tPeer Address: %s %tLocal Address: %s %tConnection ID: %s %tIdentity: %s %tUser: %s %tDomain: %s %tReason: %s %tReason Text: %s %tError Code: %s", InterfaceDescription.ToString, InterfaceGuid.ToString, SwitchMAC.ToString, LocalMAC.ToString, ConnectionID.ToString, Identity.ToString, User.ToString, Domain.ToString, ReasonCode.ToString, ReasonText.ToString, ErrorCode.ToString)
{
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
	UnicodeString SwitchMAC;
	UnicodeString LocalMAC;
	EtlPtr ConnectionID;
	UnicodeString Identity;
	UnicodeString User;
	UnicodeString Domain;
	UINT32 ReasonCode;
	UnicodeString ReasonText;
	UINT32 ErrorCode;
}
Struct Dot3svc_Result802_1XEventFailureDesc = FormatString("Wired 802.1X Authentication failed.  %tNetwork Adapter: %s %tInterface GUID: %s %tPeer Address: %s %tLocal Address: %s %tConnection ID: %s %tIdentity: %s %tUser: %s %tDomain: %s %tReason: %s %tReason Text: %s %tError Code: %s", InterfaceDescription.ToString, InterfaceGuid.ToString, SwitchMAC.ToString, LocalMAC.ToString, ConnectionID.ToString, Identity.ToString, User.ToString, Domain.ToString, ReasonCode.ToString, ReasonText.ToString, ErrorCode.ToString)
{
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
	UnicodeString SwitchMAC;
	UnicodeString LocalMAC;
	EtlPtr ConnectionID;
	UnicodeString Identity;
	UnicodeString User;
	UnicodeString Domain;
	UINT32 ReasonCode;
	UnicodeString ReasonText;
	UINT32 ErrorCode;
}
Struct Dot3svc_BlockedStateEnterEventDesc = FormatString("Network authentication attempts have been temporarily suspended on this network adapter.  %tNetwork Adapter: %s %tInterface GUID: %s %tReason Code: %s %tLength of block timer (seconds): %s", InterfaceDescription.ToString, InterfaceGuid.ToString, ReasonCode.ToString, BlockingTime.ToString)
{
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
	UnicodeString ReasonCode;
	UINT32 BlockingTime;
}
Struct Dot3svc_BlockedStateExitEventDesc = FormatString("Network authentication attempts have been resumed on this network adapter.  %tNetwork Adapter: %s %tInterface GUID: %s", InterfaceDescription.ToString, InterfaceGuid.ToString)
{
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_NdisPortEventDesc = FormatString("There has been an NDIS Port state change on this network adapter.  %tNetwork Adapter: %s %tInterface GUID: %s %tNDIS Control State: %s %tNDIS Auth State: %s", InterfaceDescription.ToString, InterfaceGuid.ToString, NdisPortControlState.ToString, NdisPortAuthState.ToString)
{
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
	UINT32 NdisPortControlState = Dot3svc_NdisPortControlState(this);
	UINT32 NdisPortAuthState = Dot3svc_NdisPortAuthState(this);
}
Struct Dot3svc_AdapterStateEventDesc = FormatString("The operational state on the network adapter was identified.  %tNetwork Adapter: %s %tInterface GUID: %s %tService State: %s", InterfaceDescription.ToString, InterfaceGuid.ToString, AdapterState.ToString)
{
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
	UINT32 AdapterState = Dot3svc_AdapterState(this);
}
Struct Dot3svc_AdapterAddEventDesc = FormatString("A network adapter was added to the system.  %tNetwork Adapter: %s %tInterface GUID: %s", InterfaceDescription.ToString, InterfaceGuid.ToString)
{
	UnicodeString InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_Dot3svcStartEventDesc = FormatString("The Wired AutoConfig service entered the running state.")
{
	_struct Empty{};
}
Struct Dot3svc_Dot3svcStopEventDesc = FormatString("The Wired AutoConfig service entered the stopped state.")
{
	_struct Empty{};
}
Struct Dot3svc_AdapterRemoveEventDesc = FormatString("A network adapter was removed from the system.  %tNetwork Adapter: %s %tInterface GUID: %s", InterfaceDescription.ToString, InterfaceGuid.ToString)
{
	UnicodeString InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_Dot3svcPrelogonBegin = FormatString("A pre-logon connection was attempted.  Result: %s Interface GUID: %s Requested Fields: %s ", Result.ToString, InterfaceGuid.ToString, RequestedFields.ToString)
{
	UINT32 Result = Dot3svc_tid_Dot3svcPrelogonResult(this);
	GUID(true) InterfaceGuid;
	UnicodeString RequestedFields;
}
Struct Dot3svc_Dot3svcPrelogonSkip = FormatString("A pre-logon connection was not attempted.  Result: %s Reason: %s ", Result.ToString, Reason.ToString)
{
	UINT32 Result = Dot3svc_tid_Dot3svcPrelogonResult(this);
	UINT32 Reason = Dot3svc_tid_Dot3svcPrelogonSkipReason(this);
}
Struct Dot3svc_Dot3svcPostlogonBegin = FormatString("A post-logon connection was attempted.  Result: %s Interface GUID: %s ", Result.ToString, InterfaceGuid.ToString)
{
	UINT32 Result = Dot3svc_tid_Dot3svcPostlogonResult(this);
	GUID(true) InterfaceGuid;
}
Struct Dot3svc_Dot3svcPostlogonConnection = FormatString("The post-logon connection attempt is complete.  Network connection attempt result: %s Reason: %s Interface GUID: %s ", Result.ToString, Reason.ToString, InterfaceGuid.ToString)
{
	UINT32 Result = Dot3svc_tid_Dot3svcPostlogonResult(this);
	UINT32 Reason = Dot3svc_tid_Dot3svcPostlogonReason(this);
	GUID(true) InterfaceGuid;
}
Struct Dot3svc_Dot3svcPostlogonSkip = FormatString("A post-logon connection was not attempted.  Result: %s Reason: %s ", Result.ToString, Reason.ToString)
{
	UINT32 Result = Dot3svc_tid_Dot3svcPostlogonResult(this);
	UINT32 Reason = Dot3svc_tid_Dot3svcPostlogonSkipReason(this);
}
Struct Dot3svc_NoInteractiveConsole = FormatString("No interactive console session to send UI request")
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_IntfCompleteTimelyFailed = FormatString("ACM: IntfCompleteTimely failed, error %s", ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_NoAvailableNetworks = FormatString("There are no available connections")
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
}
Struct Dot3svc_IntfInitFailed = FormatString("MSM failed to initialize the interface, error %s.", ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_LoadProfileFailed = FormatString("Failed to load profile, error %s.", ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_NoProfileFound = FormatString("No profile found in db, error %s", ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_SendUIRequestFailed = FormatString("ACM: UI request could not be sent.")
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_CompletePLAPFailed = FormatString("IntfCompletePlap failed, error %s.", ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_NoIntfAvailableNetworks = FormatString("Interface does not have any available networks")
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_InvalidAdapterState = FormatString("Invalid state of the adapter %s.", ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_MediaDisconnected = FormatString("Media is disconnected, SSO can't be done")
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_CreatePlapRuntimeStateFailed = FormatString("Failed to make the PLAP runtime state , error %s", ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_CreateTimelyRuntimeStateFailed = FormatString("Failed to make the timely runtime state , error %s.", ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_NoIntfProfileFound = FormatString("Interface does not have a profile")
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_SetEapUserDataFailed = FormatString("OneXSetEapUserData failed, error %s.", ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
}
Struct Dot3svc_QueryUserDataPropertiesFailed = FormatString("AcmQueryUserDataProperties failed, error %s.", ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
}
Struct Dot3svc_QueryUserDataByGuidFailed = FormatString("Dot3AcmQueryUserDataByGuid failed, error %s.", ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
}
Struct Dot3svc_LNI_GetPrimaryDomainInfoFailed = FormatString("DsRoleGetPrimaryDomainInformation failed, error %s", ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
}
Struct Dot3svc_LNL_AdapterConnectedSuccess = FormatString("Adapter is connected , we have a valid IP")
{
	GUID(true) InterfaceGuid;
	UnicodeString ProfileName;
	UINT32 Location;
	UINT32 Context;
}
Struct Dot3svc_LNL_DCConnectTimeout = FormatString("Don't have time to wait for DC connectivity. Returning now")
{
	GUID(true) InterfaceGuid;
	UnicodeString ProfileName;
	UINT32 Location;
	UINT32 Context;
}
Struct Dot3svc_LNL_DCConnectWaiting = FormatString("Waiting for DC connectivity")
{
	GUID(true) InterfaceGuid;
	UnicodeString ProfileName;
	UINT32 Location;
	UINT32 Context;
}
Struct Dot3svc_LNL_IPChangeSuccess = FormatString("Wait for ip address change successfully completed")
{
	GUID(true) InterfaceGuid;
	UnicodeString ProfileName;
	UINT32 Location;
	UINT32 Context;
}
Struct Dot3svc_LNL_IPChangeTimeout = FormatString("Wait for ip address change timed out")
{
	GUID(true) InterfaceGuid;
	UnicodeString ProfileName;
	UINT32 Location;
	UINT32 Context;
}
Struct Dot3svc_LNL_IPChangeWaitFailed = FormatString("Wait for ip address change failed with error (%s)", Error.ToString)
{
	WinErrorCode Error;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString ProfileName;
}
Struct Dot3svc_LNL_IPChangeWaiting = FormatString("Waiting for ip address change notification")
{
	GUID(true) InterfaceGuid;
	UnicodeString ProfileName;
	UINT32 Location;
	UINT32 Context;
}
Struct Dot3svc_LNL_OneXSuccess = FormatString("Wait for 1x completion successfully completed")
{
	GUID(true) InterfaceGuid;
	UnicodeString ProfileName;
	UINT32 Location;
	UINT32 Context;
}
Struct Dot3svc_LNL_AdapterConnectedTimeout = FormatString("Adapter not connected. Returning now.")
{
	GUID(true) InterfaceGuid;
	UnicodeString ProfileName;
	UINT32 Location;
	UINT32 Context;
}
Struct Dot3svc_LNL_OneXFailed = FormatString("1x completed with a failure %s", Error.ToString)
{
	WinErrorCode Error;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString ProfileName;
}
Struct Dot3svc_LNL_OneXWaitFailed = FormatString("Wait for 1x completion failed with return code (%s)", Error.ToString)
{
	WinErrorCode Error;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString ProfileName;
}
Struct Dot3svc_LNL_OneXTimeout = FormatString("Wait for 1x completion timed out")
{
	GUID(true) InterfaceGuid;
	UnicodeString ProfileName;
	UINT32 Location;
	UINT32 Context;
}
Struct Dot3svc_LNL_TimelyTimeout = FormatString("IntfDoTimely took longer than our timeout allows. Returning now")
{
	GUID(true) InterfaceGuid;
	UnicodeString ProfileName;
	UINT32 Location;
	UINT32 Context;
}
Struct Dot3svc_LNL_TimelySuccess = FormatString("IntfDoTimely completed successfully")
{
	GUID(true) InterfaceGuid;
	UnicodeString ProfileName;
	UINT32 Location;
	UINT32 Context;
}
Struct Dot3svc_LNL_TimelyFailed = FormatString("IntfDoTimely failed, error %s", Error.ToString)
{
	WinErrorCode Error;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString ProfileName;
}
Struct Dot3svc_LNL_NoTimelyProfilesFound = FormatString("No TIMELY profiles were found. Completing the timely processing")
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
}
Struct Dot3svc_LNL_TimelyInfo = FormatString("Timely1x - Interface %s, profile %s - Start %s, Stop %s", InterfaceGuid.ToString, Start.ToString, Stop.ToString, Duration.ToString)
{
	GUID(true) InterfaceGuid;
	UnicodeString Profile;
	UINT32 Start;
	UINT32 Stop;
	UINT32 Duration;
}
Struct Dot3svc_LNL_FindTimelyProfileFailed = FormatString("FindTimelyIntfAndProfile failed, error %s", ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
}
Struct Dot3svc_DeviceLayerOpenHandleFailed = FormatString("DeviceLayerOpenHandle failed, Error %s", ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	EtlPtr InterfaceContext;
}
Struct Dot3svc_QueryOIDFailed = FormatString("DeviceLayerQueryOID failed %s, OID %s", ErrorCode.ToString, Context.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	EtlPtr InterfaceContext;
}
Struct Dot3svc_SetOIDFailed = FormatString("DeviceLayerSetOID failed %s, OID %s", ErrorCode.ToString, Context.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	EtlPtr InterfaceContext;
}
Struct Dot3svc_SendPacketFailed = FormatString("DeviceLayerSendPacket failed, %s", ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	EtlPtr InterfaceContext;
}
Struct Dot3svc_ReceivePacketFailed = FormatString("DeviceLayerReceivePacket failed, %s", ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	EtlPtr InterfaceContext;
}
Struct Dot3svc_ShortPacketSkipped = FormatString("Packet only %s bytes, skipped", Size.ToString)
{
	WinErrorCode ErrorCode;
	EtlPtr InterfaceContext;
	EtlPtr PacketContext;
	UINT32 Size;
}
Struct Dot3svc_InvalidPacketTypeSkipped = FormatString("Invalid packet type %s, skipped", Type.ToString)
{
	WinErrorCode ErrorCode;
	EtlPtr InterfaceContext;
	EtlPtr PacketContext;
	UINT32 Type;
}
Struct Dot3svc_ReceiveCancelled = FormatString("The read request was cancelled")
{
	WinErrorCode ErrorCode;
	EtlPtr InterfaceContext;
	EtlPtr PacketContext;
}
Struct Dot3svc_ReceiveDataFailed = FormatString("Receiving data error %s", ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	EtlPtr InterfaceContext;
	EtlPtr PacketContext;
}
Struct Dot3svc_ReceivePacketSkipped = FormatString("Packet skipped, error %s", ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	EtlPtr InterfaceContext;
	EtlPtr PacketContext;
}
Struct Dot3svc_SendDataFailed = FormatString("Send data failed, error %s", ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	EtlPtr InterfaceContext;
	EtlPtr PacketContext;
}
Struct Dot3svc_AcmConnectionProgressFailed = FormatString("Interface(%s): pAcmConnectionProgress failed %s", InterfaceGuid.ToString, ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_AcmQueryUserDataFailed = FormatString("Interface(%s): pAcmQueryUserData failed %s", InterfaceGuid.ToString, ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_AcmSetMsmProfileFailed = FormatString("Interface(%s): pAcmSetMsmProfile failed %s", InterfaceGuid.ToString, ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_AcmSetUserDataFailed = FormatString("Interface(%s): pAcmSetUserData failed %s", InterfaceGuid.ToString, ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_AcmMsmNotifyFailed = FormatString("Interface(%s): pAcmMsmNotify failed %s", InterfaceGuid.ToString, ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_AcmMediaChangeFailed = FormatString("Interface(%s): pAcmMediaChange failed, error %s", InterfaceGuid.ToString, ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_AcmUIRequestFailed = FormatString("Interface(%s): pAcmUIRequest failed %s", InterfaceGuid.ToString, ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_AcmConnectionCompletionRoutineFailed = FormatString("Interface(%s): pAcmConnectionCompletionRoutine failed %s", InterfaceGuid.ToString, ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_CSMStateChange = FormatString("Interface(%s): State Transition %s --> %s", InterfaceGuid.ToString, NewState.ToString)
{
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
	UINT32 OldState = Dot3svc_mapCSMState(this);
	UINT32 NewState = Dot3svc_mapCSMState(this);
}
Struct Dot3svc_ResultOneXAuthNotStarted = FormatString("Interface(%s): Received AuthNotStarted result from 1x", InterfaceGuid.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_ResultOneXAuthInvalid = FormatString("Interface(%s): Received AuthInvalid result from 1x", InterfaceGuid.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_CSMStartLocalEvent = FormatString("Interface(%s): Start processing event: (%s)", InterfaceGuid.ToString, EventId.ToString)
{
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
	UINT32 EventId = Dot3svc_mapCSMLocalEvent(this);
	WinErrorCode Status;
}
Struct Dot3svc_CSMCompleteLocalEvent = FormatString("Interface(%s): Completed processing event: (%s)", InterfaceGuid.ToString, EventId.ToString)
{
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
	UINT32 EventId = Dot3svc_mapCSMLocalEvent(this);
	WinErrorCode Status;
}
Struct Dot3svc_StartOneXAuthFailed = FormatString("Interface(%s): StartOneXAuth failed %s", InterfaceGuid.ToString, ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_SendOneXPacketFailed = FormatString("Interface(%s): SendOneXPacket failed %s", InterfaceGuid.ToString, ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_OneXTimedOut = FormatString("Interface(%s): TIMING OUT 802.1x Authentication", InterfaceGuid.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_OneXNotTimedOut = FormatString("Interface(%s): NOT TIMING OUT 802.1x authentication, next timer in %s msec", InterfaceGuid.ToString, Context.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_GetCurrentMediaStateFailed = FormatString("Interface(%s): DeviceLayerGetCurrentMediaState failed %s", InterfaceGuid.ToString, ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_PacketNoPort = FormatString("No 1X port exists. Ignoring the packet received")
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_SwitchAddrSet = FormatString("Interface(%s): Set the SWITCH MAC address to %s", InterfaceGuid.ToString, InterfaceDescription.ToString)
{
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
	BLOB(6) MACAddr;
}
Struct Dot3svc_OpenDeviceHandleFailed = FormatString("Interface(%s): OpenDeviceHandle failed %s", InterfaceGuid.ToString, ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_CSMStartGlobalEvent = FormatString("Interface(%s): Start processing event (%s)", InterfaceGuid.ToString, EventId.ToString)
{
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
	UINT32 EventId = Dot3svc_mapCSMGlobalEvent(this);
	WinErrorCode Status;
}
Struct Dot3svc_CSMGlobalEventFailed = FormatString("Interface(%s): ProcessDot3MsmEvent:  Dot3MsmPerformStateMachineProcessing FAILed (%s), Event=%s", InterfaceGuid.ToString, Status.ToString, EventId.ToString)
{
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
	UINT32 EventId = Dot3svc_mapCSMGlobalEvent(this);
	WinErrorCode Status;
}
Struct Dot3svc_CSMCompleteGlobalEvent = FormatString("Interface(%s): Completed processing event (%s)", InterfaceGuid.ToString, EventId.ToString)
{
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
	UINT32 EventId = Dot3svc_mapCSMGlobalEvent(this);
	WinErrorCode Status;
}
Struct Dot3svc_NewInterface = FormatString("Finished initializing a new interface with id = %s and friendly name = %s", InterfaceGuid.ToString, InterfaceDescription.ToString)
{
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
	UINT32 Location;
	UINT32 Context;
}
Struct Dot3svc_MsmInitFailed = FormatString("Dot3MsmInit failed %s", ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
}
Struct Dot3svc_MsmInitAdapterFailed = FormatString("Dot3MSMInitAdapter failed %s", ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_ParseRequestFailed = FormatString("Failed to parse original request %s", ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
}
Struct Dot3svc_ParseResponseFailed = FormatString("Failed to parse UI Response %s", ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
}
Struct Dot3svc_OneXUIResponseFailed = FormatString("Interface(%s): OneXUIResponse failed %s", InterfaceGuid.ToString, ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_QueryPendingUIRequestFailed = FormatString("Interface(%s): Dot3MsmQueryPendingUIRequest failed %s", InterfaceGuid.ToString, ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceDescription;
}
Struct Dot3svc_ValidateProfileFailed = FormatString("OneXValidateProfile failed %s", ErrorCode.ToString)
{
	WinErrorCode ErrorCode;
	UINT32 Location;
	UINT32 Context;
}
[RegisterBefore(EventDescriptor.DefaultKeyword, MicrosoftWindowsWiredAutoConfig_Keyword, "{b92cf7fd-dc10-4c6b-a72d-1613bf25e597}")]
struct Dot3svc_MicrosoftWindowsWiredAutoConfig_Keyword
{
	UINT64 Reserved1:32 = FormatString("        (%s)", this.ToBitString);
	UINT64 utSendPath:1 = FormatString("       (%s) %s", this.ToBitString, this? "KW_SEND": "");
	UINT64 utReceivePath:1 = FormatString("    (%s) %s", this.ToBitString, this? "KW_RECEIVE":"");
	UINT64 utL3ConnectPath:1 = FormatString("  (%s) %s", this.ToBitString, this? "KW_L3_CONNECT":"");
	UINT64 utL2ConnectPath:1 = FormatString("  (%s) %s", this.ToBitString, this? "KW_L2_CONNECT":"");
	UINT64 utClosePath:1 = FormatString("      (%s) %s", this.ToBitString, this? "KW_CLOSE":"");
	UINT64 utAuthentication:1 = FormatString(" (%s) %s", this.ToBitString, this? "KW_AUTHENTICATION":"");
	UINT64 utConfiguration:1 = FormatString("  (%s) %s", this.ToBitString, this? "KW_CONFIGURATION":"");
	UINT64 utGlobal:1 = FormatString("         (%s) %s", this.ToBitString, this? "KW_GLOBAL":"");
	UINT64 utDropped:1 = FormatString("        (%s) %s", this.ToBitString, this? "KW_DROPPED":"");
	UINT64 utPiiPresent:1 = FormatString("     (%s) %s", this.ToBitString, this? "KW_PII_PRESENT":"");
	UINT64 utPacket:1 = FormatString("         (%s) %s", this.ToBitString, this? "KW_PACKET":"");
	UINT64 utAddress:1 = FormatString("        (%s) %s", this.ToBitString, this? "KW_ADDRESS":"");
	UINT64 utStdTemplateHint:1 = FormatString("(%s) %s", this.ToBitString, this? "KW_STD_TEMPLATE_HINT":"");
	UINT64 utStateTransition:1 = FormatString("(%s) %s", this.ToBitString, this? "KW_STATE_TRANSITION":"");
	UINT64 Reserved2:1 = FormatString("        (%s)", this.ToBitString);
	UINT64 AutoConf:1 = FormatString("         (%s) %s", this.ToBitString, this? "KW_DOT3_AUTOCONF": "");
	UINT64 Reserved3:1 = FormatString("        (%s)", this.ToBitString);
	UINT64 MSM:1 = FormatString("              (%s) %s", this.ToBitString, this? "KW_DOT3_MSM": "");
	UINT64 Reserved4:1 = FormatString("        (%s)", this.ToBitString);
	UINT64 DeviceLayer:1 = FormatString("      (%s) %s", this.ToBitString, this? "KW_DOT3_DEVICELAYER": "");
	UINT64 Reserved5:12 = FormatString("        (%s)", this.ToBitString);
}

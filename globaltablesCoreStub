//#  (c) 2009 CodePlex Foundation
//#
//#  Title:   GlobalTables
//#
//#  Details: [Stub Parser]
//#
//#  Comments:
//#
//####

Table OUITable(oui)
{
    switch(oui)
    {
		default: "UNKNOWN";
    }
}

//http://www.iana.org/assignments/ethernet-numbers
Table ProtocolTable(value)
{
    switch
    {
        //case  value == 0x0000:    "Null Service Access Point (SAP)";
        //case  value == 0x0004:    "SNA: IBM System Network Architecture";
        //case  value == 0x0005:    "SNA: IBM System Network Architecture";
        //case  value == 0x0006:    "IP: Internet Protocol";
        //case  value == 0x0008:    "SNA: IBM System Network Architecture";
        //case  value == 0x000C:    "SNA: IBM System Network Architecture";
        //case  value == 0x0010:    "Netware Service Advertising Protocol";
        //case  value == 0x0042:    "BPDU";
        //case  value == 0x007E:    "X.25";
        //case  value == 0x0080:    "XNS: 3Com's version of Xerox Network System";
        //case  value == 0x00AA:    "SNAP: Internet's SNAP protocol";
        //case  value == 0x00E0:    "Netware IPX";
        //case  value == 0x00F0:    "IBM Netbios";
        //case  value == 0x00F4:    "IBM Network Management";
        //case  value == 0x00F8:    "RPL: IBM Remote Program Load";
        //case  value == 0x00FA:    "Ungerman-Bass";
        //case  value == 0x00FC:    "RPL: IBM Remote Program Load";
        //case  value == 0x00FE:    "Netware SAP,";
        case  value == 0x0200:    "XEROX PUP (see 0A00)}";
        case  value == 0x0201:    "PUP Addr Trans (see 0A01)";
        case  value == 0x0400:    "Nixdorf";
        case  value == 0x0600:    "XEROX NS IDP";
        case  value == 0x0660:    "DLOG";
        case  value == 0x0661:    "DLOG";
        case  value == 0x0800:    "Internet IP (IPv4)";
        case  value == 0x0801:    "X.75 Internet";
        case  value == 0x0802:    "NBS Internet";
        case  value == 0x0803:    "ECMA Internet";
        case  value == 0x0804:    "Chaosnet";
        case  value == 0x0805:    "X.25 Level 3";
        case  value == 0x0806:    "ARP";
        case  value == 0x0807:    "XNS Compatability";
        case  value == 0x0808:    "Frame Relay ARP";
        case  value == 0x081C:    "Symbolics Private";
        case  value == 0x0888:    "Xyplex";
        case  value == 0x0889:    "Xyplex";
        case  value == 0x088A:    "Xyplex";
        case  value == 0x0900:    "Ungermann-Bass net debugr";
        case  value == 0x0A00:    "Xerox IEEE802.3 PUP";
        case  value == 0x0A01:    "PUP Addr Trans";
        case  value == 0x0BAD:    "Banyan VINES";
        case  value == 0x0BAE:    "VINES Loopback";
        case  value == 0x0BAF:    "VINES Echo";
        case  value == 0x1000:    "Berkeley Trailer nego";
        case  value >= 0x1001 &&
              value <= 0x100F:    "Berkeley Trailer encap/IP";
        case  value == 0x1600:    "Valid Systems";
        case  value == 0x1984:    "Trail";
        case  value == 0x4242:    "PCS Basic Block Protocol";
        case  value == 0x5208:    "BBN Simnet";
        case  value == 0x6000:    "DEC Unassigned (Exp.)";
        case  value == 0x6001:    "DEC MOP Dump/Load";
        case  value == 0x6002:    "DEC MOP Remote Console";
        case  value == 0x6003:    "DEC DECNET Phase IV Route";
        case  value == 0x6004:    "DEC LAT";
        case  value == 0x6005:    "DEC Diagnostic Protocol";
        case  value == 0x6006:    "DEC Customer Protocol";
        case  value == 0x6007:    "DEC LAVC SCA";
        case  value == 0x6008:    "DEC Unassigned";
        case  value == 0x6009:    "DEC Unassigned";
        case  value >= 0x6010 &&
              value <= 0x6014:    "3Com Corporation";
        case  value == 0x6558:    "Trans Ether Bridging";
        case  value == 0x6559:    "Raw Frame Relay";
        case  value == 0x7000:    "Ungermann-Bass download";
        case  value == 0x7002:    "Ungermann-Bass dia/loop";
        case  value >= 0x7020 &&
              value <= 0x7029:    "LRT";
        case  value == 0x7030:    "Proteon";
        case  value == 0x7034:    "Cabletron";
        case  value == 0x8003:    "Cronus VLN";
        case  value == 0x8004:    "Cronus Direct";
        case  value == 0x8005:    "HP Probe";
        case  value == 0x8006:    "Nestar";
        case  value == 0x8008:    "AT&T";
        case  value == 0x8010:    "Excelan";
        case  value == 0x8013:    "SGI diagnostics";
        case  value == 0x8014:    "SGI network games}";
        case  value == 0x8015:    "SGI reserved";
        case  value == 0x8016:    "SGI bounce server";
        case  value == 0x8019:    "Apollo Domain";
        case  value == 0x802E:    "Tymshare";
        case  value == 0x802F:    "TiganInc";
        case  value == 0x8035:    "Reverse ARP";
        case  value == 0x8036:    "Aeonic Systems";
        case  value == 0x8038:    "DEC LANBridge";
        case  value >= 0x8039 &&
              value <= 0x803C:    "DEC Unassigned";
        case  value == 0x803D:    "DEC Ethernet Encryption";
        case  value == 0x803E:    "DEC Unassigned";
        case  value == 0x803F:    "DEC LAN Traffic Monitor";
        case  value >= 0x8040 &&
              value <= 0x8042:    "DEC Unassigned";
        case  value == 0x8044:    "Planning Research Corp";
        case  value == 0x8046:    "AT&T";
        case  value == 0x8047:    "AT&T";
        case  value == 0x8049:    "ExperData";
        case  value == 0x805B:    "Stanford V Kernel exp";
        case  value == 0x805C:    "Stanford V Kernel prod";
        case  value == 0x805D:    "Evans & Sutherland";
        case  value == 0x8060:    "Little Machines";
        case  value == 0x8062:    "Counterpoint Computers";
        case  value == 0x8065:    "Univ. of Mass. @ Amherst";
        case  value == 0x8066:    "Univ. of Mass. @ Amherst";
        case  value == 0x8067:    "Veeco Integrated Auto";
        case  value == 0x8068:    "General Dynamics";
        case  value == 0x8069:    "AT&T";
        case  value == 0x806A:    "Autophon";
        case  value == 0x806C:    "ComDesign";
        case  value == 0x806D:    "Computgraphic Corp";
        case  value >= 0x806E &&
              value <= 0x8077:    "Landmark Graphics Corp";
        case  value == 0x807A:    "Matra";
        case  value == 0x807B:    "Dansk Data Elektronik";
        case  value == 0x807C:    "Merit Internodal";
        case  value == 0x807D:    "Vitalink Communications";
        case  value == 0x807E:    "Vitalink Communications";
        case  value == 0x807F:    "Vitalink Communications";
        case  value == 0x8080:    "Vitalink TransLAN III";
        case  value == 0x8081:    "Counterpoint Computers";
        case  value == 0x8082:    "Counterpoint Computers";
        case  value == 0x8083:    "Counterpoint Computers";
        case  value == 0x809B:    "Appletalk";
        case  value == 0x809C:    "Datability";
        case  value == 0x809D:    "Datability";
        case  value == 0x809E:    "Datability";
        case  value == 0x809F:    "Spider Systems Ltd";
        case  value == 0x80A3:    "Nixdorf Computers";
        case  value >= 0x80A4 &&
              value <= 0x80B3:    "Siemens Gammasonics Inc";
        case  value >= 0x80C0 &&
              value <= 0x80C3:    "DCA Data Exchange Cluster";
        case  value == 0x80C4:    "Banyan Systems";
        case  value == 0x80C5:    "Banyan Systems";
        case  value == 0x80C6:    "Pacer Software";
        case  value == 0x80C7:    "Applitek Corporation";
        case  value >= 0x80C8 &&
              value <= 0x80CC:    "Intergraph Corporation";
        case  value == 0x80CD:    "Harris Corporation";
        case  value == 0x80CE:    "Harris Corporation";
        case  value >= 0x80CF &&
              value <= 0x80D2:    "Taylor Instrument";
        case  value == 0x80D3:    "Rosemount Corporation";
        case  value == 0x80D4:    "Rosemount Corporation";
        case  value == 0x80D5:    "IBM SNA Service on Ether";
        case  value == 0x80DD:    "Varian Associates";
        case  value == 0x80DE:    "Integrated Solutions TRFS";
        case  value == 0x80DF:    "Integrated Solutions TRFS";
        case  value >= 0x80E0 &&
              value <= 0x80E3:    "Allen-Bradley";
        case  value >= 0x80E4 &&
              value <= 0x80F0:    "Datability";
        case  value == 0x80F2:    "Retix";
        case  value == 0x80F3:    "AppleTalk AARP (Kinetics)";
        case  value == 0x80F4:    "Kinetics";
        case  value == 0x80F5:    "Kinetics";
        case  value == 0x80F7:    "Apollo Computer";
        case  value == 0x80FF:    "Wellfleet Communications";
        //# ?case  value == 0x8100:    "EAPS";
        case  value == 0x8100:    "802.1q tag";
        case  value >= 0x8101 &&
              value <= 0x8103:    "Wellfleet Communications";
        case  value >= 0x8107 &&
              value <= 0x8109:    "Symbolics Private";
        case  value == 0x8130:    "Hayes Microcomputers";
        case  value == 0x8131:    "VG Laboratory Systems";
        case  value >= 0x8132 &&
              value <= 0x8136:    "Bridge Communications";
        //#? case  value == 0x8137:    "IPX";
        case  value == 0x8137:    "Novell Inc";
        case  value == 0x8138:    "Novell Inc";
        case  value >= 0x8139 &&
              value <= 0x813D:    "KTI";
        case  value == 0x8148:    "Logicraft";
        case  value == 0x8149:    "Network Computing Devices";
        case  value == 0x814A:    "Alpha Micro";
        case  value == 0x814C:    "SNMP";
        case  value == 0x814D:    "BIIN";
        case  value == 0x814E:    "BIIN";
        case  value == 0x814F:    "Technically Elite Concept";
        case  value == 0x8150:    "Rational Corp";
        case  value == 0x8151:    "Qualcomm";
        case  value == 0x8152:    "Qualcomm";
        case  value == 0x8153:    "Qualcomm";
        case  value == 0x815C:    "Computer Protocol Pty Ltd";
        case  value == 0x815D:    "Computer Protocol Pty Ltd";
        case  value == 0x815E:    "Computer Protocol Pty Ltd";
        case  value == 0x8164:    "Charles River Data System";
        case  value == 0x8165:    "Charles River Data System";
        case  value == 0x8166:    "Charles River Data System";
        case  value == 0x817D:    "XTP";
        case  value == 0x817E:    "SGI/Time Warner prop";
        case  value == 0x8180:    "HIPPI-FP encapsulation";
        case  value == 0x8181:    "STP HIPPI-ST";
        case  value == 0x8182:    "Reserved for HIPPI-6400";
        case  value == 0x8183:    "Reserved for HIPPI-6400";
        case  value >= 0x8184 &&
              value <= 0x818C:    "Silicon Graphics prop";
        case  value == 0x818D:    "Motorola Computer";
        case  value >= 0x819A &&
              value <= 0x81A3:    "Qualcomm";
        case  value == 0x81A4:    "ARAI Bunkichi";
        case  value >= 0x81A5 &&
              value <= 0x81AE:    "RAD Network Devices";
        case  value >= 0x81B7 &&
              value <= 0x81B9:    "Xyplex";
        case  value >= 0x81CC &&
              value <= 0x81D5:    "Apricot Computers";
        case  value >= 0x81D6 &&
              value <= 0x81DD:    "Artisoft";
        case  value >= 0x81E6 &&
              value <= 0x81EF:    "Polygon";
        case  value >= 0x81F0 &&
              value <= 0x81F2:    "Comsat Labs";
        case  value >= 0x81F3 &&
              value <= 0x81F5:    "SAIC";
        case  value >= 0x81F6 &&
              value <= 0x81F8:    "VG Analytical";
        case  value >= 0x8203 &&
              value <= 0x8205:    "Quantum Software";
        case  value >= 0x8221 &&
              value <= 0x8222:    "Ascom Banking Systems";
        case  value >= 0x823E &&
              value <= 0x8240:    "Advanced Encryption System";
        case  value >= 0x8263 &&
              value <= 0x826A:    "Charles River Data System";
        case  value >= 0x827F &&
              value <= 0x8282:    "Athena Programming";
        case  value >= 0x829A &&
              value <= 0x829B:    "Inst Ind Info Tech";
        case  value >= 0x829C &&
              value <= 0x82AB:    "Taurus Controls";
        case  value >= 0x82AC &&
              value <= 0x8693:    "Walker Richer & Quinn";
        case  value >= 0x8694 &&
              value <= 0x869D:    "Idea Courier";
        case  value >= 0x869E &&
              value <= 0x86A1:    "Computer Network Tech";
        case  value >= 0x86A3 &&
              value <= 0x86AC:    "Gateway Communications";
        case  value == 0x86DB:    "SECTRA";
        case  value == 0x86DD:    "IPv6";
        case  value == 0x86DE:    "Delta Controls";
        case  value == 0x86DF:    "ATOMIC";
        case  value >= 0x86E0 &&
              value <= 0x86EF:    "Landis & Gyr Powers";
        case  value >= 0x8700 &&
              value <= 0x8710:    "Motorola";
        case  value == 0x876B:    "TCP/IP Compression";
        case  value == 0x876C:    "IP Autonomous Systems";
        case  value == 0x876D:    "Secure Data";
//#? #########################################################################        
        case  value == 0x8808:    "IEEE 802.3x MAC Flow Control";
        case  value == 0x880C:    "GSMP";
        case  value == 0x8847:    "MPLS";
        case  value == 0x8848:    "MPLS";
        case  value == 0x8863:    "PPPoE";
        case  value == 0x8864:    "PPPoE";
        case  value == 0x88BB:    "LWAPP";
        case  value == 0x88CC:    "802.1 Link Layer Discovery Protocol (LLDP)";
//#? #########################################################################        
        case  value == 0x880B:    "PPP";
        case  value == 0x886D:    "Intel ANS";
        case  value == 0x886F:    "MS NLB Heartbeat";
        case  value == 0x888E:    "EAPOL/802.1x";
        case  value == 0x88C7:    "IEEE 802.11i Pre-Authentication";
        case  value == 0x8A96:    "Invisible Software";
        case  value == 0x8A97:    "Invisible Software";
        case  value == 0x9000:    "Loopback";
        case  value == 0x9001:    "3Com(Bridge) XNS Sys Mgmt";
        case  value == 0x9002:    "3Com(Bridge) TCP-IP Sys";
        case  value == 0x9003:    "3Com(Bridge) loop detect";
		case  value == 0xCAFE:    "Veritas Low Latency Transport (not officially registered)";
        case  value == 0xFF00:    "BBN VITAL-LanBridge cache";
        case  value >= 0xFF01 &&
              value <= 0xFF0F:    "ISC Bunker Ramo";
        case  value == 0xFFFF:    "NetmonFrameFilter";
        //case  value == 0xFFFF:    "Reserved";
        case  value <= 0x05DC:    "IEEE802.3 Length Field";
        default:                  FormatString("%#x",value);
    }
}

Table MacTable(MacAddress)
{
    switch
    {
        case MacAddress == 0xFFFFFFFFFFFF: "*BROADCAST";
        case MacAddress == 0x0180C2000001: "IEEE 802.3x Multicast";
        case MacAddress == 0x030000000001: "*NETBIOS Multicast";
        case MacAddress == 0x000FFE0228C5: "LOCAL";
        case MacAddress == 0x090007FFFFFF: "*AppleTalk Broadcast";        
        default : FormatString("%s %02X%02X%02X",OUITable( MacAddress >> 24), MacAddress[2], MacAddress[1], MacAddress[0]);
    }
}

Table IPVersionTable(value) 
{
    switch(value)
    {
        case  0:    "Reserved";
        case  4:    "IPv4, Internet Protocol";
        case  5:    "ST";
      //case  6:    "SIP";        
      //case  6:    "SIPP, Simple Internet Protocol Plus"; 
        case  6:    "IPv6, Internet Protocol"; 
        case  7:    "TP/IX";
        case  8:    "PIP";
        case  9:    "TUBA";
        case 15:    "reserved";
        default:    "Unknown IP Version";
    }
}

//http://www.iana.org/assignments/protocol-numbers
Table ProtocolTypeTable(value)
{
    switch(value)
    {
        case    0:    "HOPOPT, IPv6 Hop-by-Hop Option";
        //, Internet Control Message Protocol
        case    1:    "ICMP";
        //, IGMP for user Authentication Protocol
        case    2:    "IGAP/IGMP/RGMP";
        //case    2:    "IGMP, Internet Group Management Protocol";
        //case    2:    "RGMP, Router-port Group Management Protocol";
        case    3:    "GGP, Gateway to Gateway Protocol";
        //IP in IP encapsulation
        case    4:    "IP in IP";
        case    5:    "ST, Internet Stream Protocol";
        //, Transmission Control Protocol
        case    6:    "TCP";
        case    7:    "UCL, CBT";
        case    8:    "EGP, Exterior Gateway Protocol";
        case    9:    "IGRP, Interior Gateway Routing Protocol";
        case   10:    "BBN RCC Monitoring";
        case   11:    "NVP, Network Voice Protocol";
        case   12:    "PUP";
        case   13:    "ARGUS";
        case   14:    "EMCON, Emission Control Protocol";
        case   15:    "XNET, Cross Net Debugger";
        case   16:    "Chaos";
        //, User Datagram Protocol
        case   17:    "UDP";
        case   18:    "TMux, Transport Multiplexing Protocol";
        case   19:    "DCN Measurement Subsystems";
        case   20:    "HMP, Host Monitoring Protocol";
        case   21:    "Packet Radio Measurement";
        case   22:    "XEROX NS IDP";
        case   23:    "Trunk-1";
        case   24:    "Trunk-2";
        case   25:    "Leaf-1";
        case   26:    "Leaf-2";
        case   27:    "RDP, Reliable Data Protocol";
        case   28:    "IRTP, Internet Reliable Transaction Protocol";
        case   29:    "ISO Transport Protocol Class 4";
        case   30:    "NETBLT, Network Block Transfer";
        case   31:    "MFE Network Services Protocol";
        case   32:    "MERIT Internodal Protocol";
        case   33:    "SEP, Sequential Exchange Protocol";
      //case   33:    "DCCP, Datagram Congestion Control Protocol";
        case   34:    "Third Party Connect Protocol";
        case   35:    "IDPR, Inter-Domain Policy Routing Protocol";
        case   36:    "XTP, Xpress Transfer Protocol";
        case   37:    "Datagram Delivery Protocol";
        case   38:    "IDPR, Control Message Transport Protocol";
        case   39:    "TP++ Transport Protocol";
        case   40:    "IL Transport Protocol";
        case   41:    "IPv6 over IPv4";
        case   42:    "SDRP, Source Demand Routing Protocol";
        case   43:    "IPv6 Routing header";
        case   44:    "IPv6 Fragment header";
        case   45:    "IDRP, Inter-Domain Routing Protocol";
        case   46:    "RSVP, Reservation Protocol";
        case   47:    "GRE, General Routing Encapsulation";
        case   48:    "MHRP, Mobile Host Routing Protocol";
        case   49:    "BNA";
        //, Encapsulating Security Payload
        case   50:    "ESP";
        //, Authentication Header
        case   51:    "AH";
        case   52:    "Integrated Net Layer Security TUBA";
        case   53:    "IP with Encryption";
        case   54:    "NARP, NBMA Address Resolution Protocol";
        case   55:    "Minimal Encapsulation Protocol";
        // using Kryptonet key management
        case   56:    "TLSP, Transport Layer Security Protocol";
        case   57:    "SKIP";
        //, Internet Control Message Protocol for IPv6
        case   58:    "ICMPv6";
        //case   58:    "MLD, Multicast Listener Discovery";
        case   59:    "IPv6 No Next Header";
        case   60:    "Destination Options for IPv6";
        case   61:    "Any host internal protocol";
        case   62:    "CFTP";
        case   63:    "Any local network";
        case   64:    "SATNET and Backroom EXPAK";
        case   65:    "Kryptolan";
        case   66:    "MIT Remote Virtual Disk Protocol";
        case   67:    "Internet Pluribus Packet Core";
        case   68:    "Any distributed file system";
        case   69:    "SATNET Monitoring";
        case   70:    "VISA Protocol";
        case   71:    "Internet Packet Core Utility";
        case   72:    "Computer Protocol Network Executive";
        case   73:    "Computer Protocol Heart Beat";
        case   74:    "Wang Span Network";
        case   75:    "Packet Video Protocol";
        case   76:    "Backroom SATNET Monitoring";
        case   77:    "SUN ND PROTOCOL-Temporary";
        case   78:    "WIDEBAND Monitoring";
        case   79:    "WIDEBAND EXPAK";
        case   80:    "ISO-IP";
        case   81:    "VMTP, Versatile Message Transaction Protocol";
        case   82:    "SECURE-VMTP";
        case   83:    "VINES";
        case   84:    "TTP";
        case   85:    "NSFNET-IGP";
        case   86:    "Dissimilar Gateway Protocol";
        case   87:    "TCF";
        case   88:    "EIGRP";
        //, Open Shortest Path First/Multicast Open Shortest Path First Routing Protocol
        case   89:    "OSPF/MOSPF";
        case   90:    "Sprite RPC Protocol";
        case   91:    "Locus Address Resolution Protocol";
        case   92:    "MTP, Multicast Transport Protocol";
        case   93:    "AX.25";
        case   94:    "IP-within-IP Encapsulation Protocol";
        case   95:    "Mobile Internetworking Control Protocol";
        case   96:    "Semaphore Communications Sec. Pro";
        case   97:    "EtherIP";
        case   98:    "Encapsulation Header";
        case   99:    "Any private encryption scheme";
        case  100:    "GMTP";
        case  101:    "IFMP, Ipsilon Flow Management Protocol";
        case  102:    "PNNI over IP";
        case  103:    "PIM, Protocol Independent Multicast";
        case  104:    "ARIS";
        case  105:    "SCPS";
        case  106:    "QNX";
        case  107:    "Active Networks";
        case  108:    "IPPCP, IP Payload Compression Protocol";
        case  109:    "SNP, Sitara Networks Protocol";
        case  110:    "Compaq Peer Protocol";
        case  111:    "IPX in IP";
        case  112:    "VRRP, Virtual Router Redundancy Protocol";
        case  113:    "PGM, Pragmatic General Multicast";
        case  114:    "any 0-hop protocol";
        case  115:    "L2TP, Level 2 Tunneling Protocol";
        case  116:    "DDX, D-II Data Exchange";
        case  117:    "IATP, Interactive Agent Transfer Protocol";
        case  118:    "ST, Schedule Transfer";
        case  119:    "SRP, SpectraLink Radio Protocol";
        case  120:    "UTI";
        case  121:    "SMP, Simple Message Protocol";
        case  122:    "SM";
        case  123:    "PTP, Performance Transparency Protocol";
        case  124:    "ISIS over IPv4";
        case  125:    "FIRE";
        case  126:    "CRTP, Combat Radio Transport Protocol";
        case  127:    "CRUDP, Combat Radio User Datagram";
        case  128:    "SSCOPMCE";
        case  129:    "IPLT";
        case  130:    "SPS, Secure Packet Shield";
        case  131:    "PIPE, Private IP Encapsulation within IP";
        case  132:    "SCTP, Stream Control Transmission Protocol";
        case  133:    "Fibre Channel";
        case  134:    "RSVP-E2E-IGNORE";
        case  135:    "Mobility Header";
        case  136:    "UDP-Lite, Lightweight User Datagram Protocol";
        case  137:    "MPLS-in-IP";
        case  253:    "Experimentation and testing";
        case  254:    "Experimentation and testing";
        case  255:    "reserved";
        default  :    "Unassigned";
    }
}

//
// Maps a port name to a string description
//
Table PortNameTable(value) 
{
    switch(value)
    {
        //, TCP Port Service Multiplexer
        case    1:       FormatString("TCPMUX(%u)", value);
        case    2:       FormatString("Management Utility(%u)", value);
        case    3:       FormatString("Compression Process(%u)", value);
        case    5:       FormatString("Remote Job Entry(%u)", value);
        case    7:       FormatString("Echo(%u)", value);
        case    9:       FormatString("Discard(%u)", value);
        case   11:       FormatString("SYSTAT(%u)", value);
        case   13:       FormatString("Daytime(%u)", value);
        case   15:       FormatString("[was netstat](%u)", value);
        case   17:       FormatString("Quote, Quote of the Day(%u)", value);
        //, Remote Write Protocol/, Message Send Protocol
        case   18:       FormatString("RWP/Send(%u)", value);
        //, Character Generator Protocol
        case   19:       FormatString("Chargen(%u)", value);
        //, File Transfer Protocol, data
        case   20:       FormatString("FTP data(%u)", value);
        //, File Transfer Protocol, control
        case   21:       FormatString("FTP control(%u)", value);
        case   22:       FormatString("SSH(%u)", value);
        case   23:       FormatString("Telnet(%u)", value);
        case   24:       FormatString("Any private mail system(%u)", value);
        //, Simple Mail Transfer Protocol
        case   25:       FormatString("SMTP(%u)", value);
        case   27:       FormatString("NSW User System FE(%u)", value);
        case   29:       FormatString("MSG ICP(%u)", value);
        case   31:       FormatString("MSG Authentication(%u)", value);
        case   33:       FormatString("Display Support Protocol(%u)", value);
        case   35:       FormatString("Any private printer server(%u)", value);
        case   37:       FormatString("Time, Time Protocol(%u)", value);
        //, Internet Route Access Protocol
        case   38:       FormatString("RAP(%u)", value);
        //, Resource Location Protocol
        case   39:       FormatString("RLP(%u)", value);
        case   41:       FormatString("Graphics(%u)", value);
        case   42:       FormatString("Internet Name Server(%u)", value);
        case   43:       FormatString("Whois(%u)", value);
        case   44:       FormatString("MPM FLAGS Protocol(%u)", value);
        case   45:       FormatString("Internet Message Protocol(%u)", value);
        case   46:       FormatString("MPM [default send](%u)", value);
        case   47:       FormatString("NI FTP(%u)", value);
        case   48:       FormatString("Digital Audit Daemon(%u)", value);
        case   49:       FormatString("TACACS/TACACS+(%u)", value);
        //, Remote Mail Checking Protocol
        case   50:       FormatString("RMCP(%u)", value);
        case   51:       FormatString("IMP Logical Address Maintenance(%u)", value);
        case   52:       FormatString("XNS Time Protocol(%u)", value);
        //, Domain Name System
        case   53:       FormatString("DNS(%u)", value);
        case   54:       FormatString("XNS Clearinghouse(%u)", value);
        case   55:       FormatString("ISI Graphics Language(%u)", value);
        case   56:       FormatString("XNS Authentication(%u)", value);
        //, Mail Transfer Protocol
        case   57:       FormatString("MTP(%u)", value);
        case   58:       FormatString("XNS Mail(%u)", value);
        case   59:       FormatString("NFILE(%u)", value);
        case   61:       FormatString("NI MAIL(%u)", value);
        case   62:       FormatString("ACA Services(%u)", value);
        case   63:       FormatString("Whois++(%u)", value);
        case   64:       FormatString("Communications Integrator (CI)(%u)", value);
        case   65:       FormatString("TACACS-Database Service(%u)", value);
        case   66:       FormatString("Oracle SQL*NET(%u)", value);
        //, Bootstrap Protocol,
        case   67:       FormatString("BOOTP server(%u)", value);
        //, Bootstrap Protocol,
        case   68:       FormatString("BOOTP client(%u)", value);
        case   69:       FormatString("TFTP, Trivial File Transfer Protocol(%u)", value);
        case   70:       FormatString("Gopher(%u)", value);
        case   71:       FormatString("Remote Job Service(%u)", value);
        case   72:       FormatString("Remote Job Service(%u)", value);
        case   73:       FormatString("Remote Job Service(%u)", value);
        case   74:       FormatString("Remote Job Service(%u)", value);
        case   75:       FormatString("Any private dial out service(%u)", value);
        case   76:       FormatString("Distributed External Object Store(%u)", value);
        case   77:       FormatString("Any private RJE service(%u)", value);
        case   78:       FormatString("vettcp(%u)", value);
        case   79:       FormatString("Finger(%u)", value);
        //, HyperText Transfer Protocol
        case   80:       FormatString("HTTP(%u)", value);
        case   81:       FormatString("HOSTS2 Name Server(%u)", value);
        case   82:       FormatString("XFER Utility(%u)", value);
        case   83:       FormatString("MIT ML Device(%u)", value);
        case   84:       FormatString("Common Trace Facility(%u)", value);
        case   85:       FormatString("MIT ML Device(%u)", value);
        case   86:       FormatString("Micro Focus Cobol(%u)", value);
        case   87:       FormatString("Any private terminal link(%u)", value);
        case   88:       FormatString("Kerberos(%u)", value);
        case   89:       FormatString("SU/MIT Telnet Gateway(%u)", value);
        //Is being used unofficially by  Securit Attribute Token Map
        case   90:       FormatString("Pointcast/DNSIX(%u)", value);
        case   91:       FormatString("MIT Dover Spooler(%u)", value);
        case   92:       FormatString("Network Printing Protocol(%u)", value);
        case   93:       FormatString("Device Control Protocol(%u)", value);
        case   94:       FormatString("Tivoli Object Dispatcher(%u)", value);
        case   95:       FormatString("SUPDUP(%u)", value);
        case   96:       FormatString("DIXIE(%u)", value);
        case   97:       FormatString("Swift Remote Virtual File Protocol(%u)", value);
        case   98:       FormatString("TAC News(%u)", value);
        case   99:       FormatString("Metagram Relay(%u)", value);
        case  100:       FormatString("[unauthorized use](%u)", value);
        case  101:       FormatString("HOSTNAME(%u)", value);
        case  102:       FormatString("TP0 over TCP(%u)", value);
        case  103:       FormatString("Genesis Point-to-Point Trans Net(%u)", value);
        case  104:       FormatString("ACR-NEMA Digital Imag. & Comm. 300(%u)", value);
        case  105:       FormatString("Ph/Mailbox Name Nameserver(%u)", value);
        case  106:       FormatString("3COM-TSMUX(%u)", value);
        case  107:       FormatString("Remote Telnet Service(%u)", value);
        case  108:       FormatString("SNA Gateway Access Server(%u)", value);
        //, Post Office Protocol, version
        case  109:       FormatString("POP 2(%u)", value);
        //, Post Office Protocol, version
        case  110:       FormatString("POP 3(%u)", value);
        case  111:       FormatString("SUN Remote Procedure Call(%u)", value);
        case  112:       FormatString("McIDAS Data Transmission Protocol(%u)", value);
        case  113:       FormatString("Identification Protocol(%u)", value);
        //, Simple File Transfer Protocol
        case  115:       FormatString("SFTP(%u)", value);
        case  116:       FormatString("ANSA REX Notify(%u)", value);
        //, Unix To Unix Copy
        case  117:       FormatString("UUCP(%u)", value);
        case  118:       FormatString("SQL Services(%u)", value);
        //, Network News Transfer Protocol
        case  119:       FormatString("NNTP(%u)", value);
        //, Coherent File Distribution Protocol
        case  120:       FormatString("CFDP(%u)", value);
        case  121:       FormatString("Encore Expedited Remote Pro.Call(%u)", value);
        case  122:       FormatString("SMAKYNET(%u)", value);
        //, Network Time Protocol
        case  123:       FormatString("NTP(%u)", value);
        case  124:       FormatString("ANSA REX Trader(%u)", value);
        case  125:       FormatString("Locus PC-Interface Net Map Serv(%u)", value);
        case  126:       FormatString("Unisys Unitary Login(%u)", value);
        case  127:       FormatString("Locus PC-Interface Conn Server(%u)", value);
        case  128:       FormatString("GSS X License Verification(%u)", value);
        case  129:       FormatString("PWDGEN, Password Generator Protocol(%u)", value);
        case  130:       FormatString("cisco FNATIVE(%u)", value);
        case  131:       FormatString("cisco TNATIVE(%u)", value);
        case  132:       FormatString("cisco SYSMAINT(%u)", value);
        case  133:       FormatString("STATSRV, Statistics Server(%u)", value);
        case  134:       FormatString("INGRES-NET Service(%u)", value);
        case  135:       FormatString("DCE endpoint resolution(%u)", value);
        case  136:       FormatString("PROFILE Naming System(%u)", value);
        case  137:       FormatString("NETBIOS Name Service(%u)", value);
        case  138:       FormatString("NETBIOS Datagram Service(%u)", value);
        case  139:       FormatString("NETBIOS Session Service(%u)", value);
        case  140:       FormatString("EMFIS Data Service(%u)", value);
        case  141:       FormatString("EMFIS Control Service(%u)", value);
        case  142:       FormatString("Britton-Lee IDM(%u)", value);
        //, Interactive Mail Access Protocol
        case  143:       FormatString("IMAP(%u)", value);
        case  144:       FormatString("Universal Management Architecture(%u)", value);
        case  145:       FormatString("UAAC Protocol(%u)", value);
        case  146:       FormatString("TP0 bridge between TCP and X.25(%u)", value);
        case  147:       FormatString("ISO-IP(%u)", value);
        case  148:       FormatString("Jargon(%u)", value);
        case  149:       FormatString("AED 512 Emulation Service(%u)", value);
        case  150:       FormatString("SQL-NET(%u)", value);
        case  151:       FormatString("HEMS(%u)", value);
        //, Background File Transfer Program
        case  152:       FormatString("BFTP(%u)", value);
        //, Simple Gateway Monitoring Protocol
        case  153:       FormatString("SGMP(%u)", value);
        case  154:       FormatString("NETSC(%u)", value);
        case  155:       FormatString("NETSC(%u)", value);
        case  156:       FormatString("SQL Service(%u)", value);
        case  157:       FormatString("KNET/VM Command/Message Protocol(%u)", value);
        //, Distributed Mail Service Protocol
        case  158:       FormatString("DMSP(%u)", value);
        case  159:       FormatString("NSS-Routing(%u)", value);
        case  160:       FormatString("SGMP-TRAPS(%u)", value);
        //, Simple Network Management Protocol
        case  161:       FormatString("SNMP(%u)", value);
        //, Simple Network Management Protocol traps
        case  162:       FormatString("SNMP traps(%u)", value);
        case  163:       FormatString("CMIP/TCP Manager(%u)", value);
        case  164:       FormatString("CMIP/TCP Agent(%u)", value);
        case  165:       FormatString("Xerox(%u)", value);
        case  166:       FormatString("Sirius Systems(%u)", value);
        case  167:       FormatString("NAMP(%u)", value);
        case  168:       FormatString("RSVD(%u)", value);
        case  169:       FormatString("SEND(%u)", value);
        case  170:       FormatString("Network PostScript(%u)", value);
        case  171:       FormatString("Network Innovations Multiplex(%u)", value);
        case  172:       FormatString("Network Innovations CL/1(%u)", value);
        case  173:       FormatString("Xyplex(%u)", value);
        case  174:       FormatString("MAILQ(%u)", value);
        case  175:       FormatString("VMNET(%u)", value);
        case  176:       FormatString("GENRAD-MUX(%u)", value);
        //, X Display Manager Control Protocol
        case  177:       FormatString("XDMCP(%u)", value);
        case  178:       FormatString("NextStep Window Server(%u)", value);
        //, Border Gateway Protocol
        case  179:       FormatString("BGP(%u)", value);
        case  180:       FormatString("Intergraph(%u)", value);
        case  181:       FormatString("Unify(%u)", value);
        case  182:       FormatString("Unisys Audit SITP(%u)", value);
        case  183:       FormatString("OCBinder(%u)", value);
        case  184:       FormatString("OCServer(%u)", value);
        case  185:       FormatString("Knowbot Information Service(%u)", value);
        case  186:       FormatString("KIS Protocol(%u)", value);
        case  187:       FormatString("Application Communication Interface(%u)", value);
        case  188:       FormatString("Plus Five's MUMPS(%u)", value);
        case  189:       FormatString("Queued File Transport(%u)", value);
        case  190:       FormatString("Gateway Access Control Protocol(%u)", value);
        case  191:       FormatString("Prospero Directory Service(%u)", value);
        case  192:       FormatString("OSU Network Monitoring System(%u)", value);
        case  193:       FormatString("Spider Remote Monitoring Protocol(%u)", value);
        case  194:       FormatString("Internet Relay Chat Protocol(%u)", value);
        case  195:       FormatString("DNSIX Network Level Module Audit(%u)", value);
        case  196:       FormatString("DNSIX Session Mgt Module Audit Redir(%u)", value);
        case  197:       FormatString("Directory Location Service(%u)", value);
        case  198:       FormatString("Directory Location Service Monitor(%u)", value);
        case  199:       FormatString("SMUX(%u)", value);
        case  200:       FormatString("IBM System Resource Controller(%u)", value);
        case  201:       FormatString("AppleTalk Routing Maintenance(%u)", value);
        case  202:       FormatString("AppleTalk Name Binding(%u)", value);
        case  203:       FormatString("AppleTalk Unused(%u)", value);
        case  204:       FormatString("AppleTalk Echo(%u)", value);
        case  205:       FormatString("AppleTalk Unused(%u)", value);
        case  206:       FormatString("AppleTalk Zone Information(%u)", value);
        case  207:       FormatString("AppleTalk Unused(%u)", value);
        case  208:       FormatString("AppleTalk Unused(%u)", value);
        case  209:       FormatString("The Quick Mail Transfer Protocol(%u)", value);
        case  210:       FormatString("Z39.50(%u)", value);
        case  211:       FormatString("Texas Instruments 914C/G Terminal(%u)", value);
        case  212:       FormatString("ATEXSSTR(%u)", value);
        case  213:       FormatString("IPX(%u)", value);
        case  214:       FormatString("VM PWSCS(%u)", value);
        case  215:       FormatString("Insignia Solutions(%u)", value);
        case  216:       FormatString("Computer Associates Int'l License Server(%u)", value);
        case  217:       FormatString("dBASE Unix(%u)", value);
        //, Message Posting Protocol
        case  218:       FormatString("MPP(%u)", value);
        case  219:       FormatString("Unisys ARPs(%u)", value);
        //, Interactive Mail Access Protocol, version
        case  220:       FormatString("IMAP v3(%u)", value);
        case  221:       FormatString("Berkeley rlogind with SPX auth(%u)", value);
        case  222:       FormatString("Berkeley rshd with SPX auth(%u)", value);
        case  223:       FormatString("Certificate Distribution Center(%u)", value);
        case  242:       FormatString("Direct(%u)", value);
        case  243:       FormatString("Survey Measurement(%u)", value);
        case  244:       FormatString("Dayna(%u)", value);
        case  245:       FormatString("LINK(%u)", value);
        case  246:       FormatString("Display Systems Protocol(%u)", value);
        case  247:       FormatString("SUBNTBCST_TFTP(%u)", value);
        case  248:       FormatString("bhfhs(%u)", value);
        case  256:       FormatString("RAP(%u)", value);
        case  257:       FormatString("Secure Electronic Transaction(%u)", value);
        case  258:       FormatString("Yak Winsock Personal Chat(%u)", value);
        //, Efficient Short Remote Operations
        case  259:       FormatString("ESRO(%u)", value);
        case  260:       FormatString("Openport(%u)", value);
        case  261:       FormatString("IIOP Name Service over TLS/SSL(%u)", value);
        case  262:       FormatString("Arcisdms(%u)", value);
        case  263:       FormatString("HDAP(%u)", value);
        //, Border Gateway Multicast Protocol
        case  264:       FormatString("BGMP(%u)", value);
        case  265:       FormatString("X-Bone CTL(%u)", value);
        case  266:       FormatString("SCSI on ST(%u)", value);
        case  267:       FormatString("Tobit David Service Layer(%u)", value);
        case  268:       FormatString("Tobit David Replica(%u)", value);
        case  280:       FormatString("http-mgmt(%u)", value);
        case  281:       FormatString("Personal Link(%u)", value);
        case  282:       FormatString("Cable Port A/X(%u)", value);
        case  283:       FormatString("rescap(%u)", value);
        case  284:       FormatString("corerjd(%u)", value);
        case  286:       FormatString("FXP-1(%u)", value);
        case  287:       FormatString("K-BLOCK(%u)", value);
        case  308:       FormatString("Novastor Backup(%u)", value);
        case  309:       FormatString("EntrustTime(%u)", value);
        case  310:       FormatString("bhmds(%u)", value);
        case  311:       FormatString("AppleShare IP WebAdmin(%u)", value);
        case  312:       FormatString("VSLMP(%u)", value);
        case  313:       FormatString("Magenta Logic(%u)", value);
        case  314:       FormatString("Opalis Robot(%u)", value);
        case  315:       FormatString("DPSI(%u)", value);
        case  316:       FormatString("decAuth(%u)", value);
        case  317:       FormatString("Zannet(%u)", value);
        //, Time Stamp Protocol
        case  318:       FormatString("TSP(%u)", value);
        case  319:       FormatString("PTP Event(%u)", value);
        case  320:       FormatString("PTP General(%u)", value);
        case  321:       FormatString("PIP(%u)", value);
        case  322:       FormatString("RTSPS(%u)", value);
        case  333:       FormatString("Texar Security Port(%u)", value);
        case  344:       FormatString("Prospero Data Access Protocol(%u)", value);
        case  345:       FormatString("Performance Analysis Workbench(%u)", value);
        case  346:       FormatString("Zebra server(%u)", value);
        case  347:       FormatString("Fatmen Server(%u)", value);
        case  348:       FormatString("Cabletron Management Protocol(%u)", value);
        case  349:       FormatString("mftp(%u)", value);
        //, Mapping of Airline Traffic over Internet Protocol, Type A
        case  350:       FormatString("MATIP(%u)", value);
        //, Mapping of Airline Traffic over Internet Protocol, Type B.bhoetty
        case  351:       FormatString("MATIP(%u)", value);
        case  352:       FormatString("DTAG(%u)", value);
        case  353:       FormatString("NDSAUTH(%u)", value);
        case  354:       FormatString("bh611(%u)", value);
        case  355:       FormatString("DATEX-ASN(%u)", value);
        case  356:       FormatString("Cloanto Net 1(%u)", value);
        case  357:       FormatString("bhevent(%u)", value);
        case  358:       FormatString("Shrinkwrap(%u)", value);
        case  359:       FormatString("Tenebris Network Trace Service(%u)", value);
        case  360:       FormatString("scoi2odialog(%u)", value);
        case  361:       FormatString("Semantix(%u)", value);
        case  362:       FormatString("SRS Send(%u)", value);
        case  363:       FormatString("RSVP Tunnel(%u)", value);
        case  364:       FormatString("Aurora CMGR(%u)", value);
        case  365:       FormatString("DTK(%u)", value);
        //, Simple Mail Transfer Protocol. ODMR, On-Demand Mail Relay
        case  366:       FormatString("SMTP(%u)", value);
        case  367:       FormatString("MortgageWare(%u)", value);
        case  368:       FormatString("QbikGDP(%u)", value);
        case  369:       FormatString("rpc2portmap(%u)", value);
        case  370:       FormatString("codaauth2(%u)", value);
        case  371:       FormatString("Clearcase(%u)", value);
        case  372:       FormatString("ListProcessor(%u)", value);
        case  373:       FormatString("Legent Corporation(%u)", value);
        case  374:       FormatString("Legent Corporation(%u)", value);
        case  375:       FormatString("Hassle(%u)", value);
        case  376:       FormatString("Amiga Envoy Network Inquiry Proto(%u)", value);
        case  377:       FormatString("NEC Corporation(%u)", value);
        case  378:       FormatString("NEC Corporation(%u)", value);
        case  379:       FormatString("TIA/EIA/IS-99 modem client(%u)", value);
        case  380:       FormatString("TIA/EIA/IS-99 modem server(%u)", value);
        case  381:       FormatString("HP performance data collector(%u)", value);
        case  382:       FormatString("HP performance data managed node(%u)", value);
        case  383:       FormatString("HP performance data alarm manager(%u)", value);
        case  384:       FormatString("A Remote Network Server System(%u)", value);
        case  385:       FormatString("IBM Application(%u)", value);
        case  386:       FormatString("ASA Message Router Object Def(%u)", value);
        //, AppleTalk Update-based Routing Protocol
        case  387:       FormatString("AURP(%u)", value);
        case  388:       FormatString("Unidata LDM Version 4(%u)", value);
        //, Lightweight Directory Access Protocol.CLDAP, 
        //Connection-less Lightweight X.500 Directory Access Protocol
        case  389:       FormatString("LDAP(%u)", value);
        case  390:       FormatString("UIS(%u)", value);
        case  391:       FormatString("SynOptics SNMP Relay Port(%u)", value);
        case  392:       FormatString("SynOptics Port Broker Port(%u)", value);
        case  393:       FormatString("Data Interpretation System(%u)", value);
        case  394:       FormatString("EMBL Nucleic Data Transfer(%u)", value);
        case  395:       FormatString("NETscout Control Protocol(%u)", value);
        case  396:       FormatString("Novell Netware over IP(%u)", value);
        case  397:       FormatString("Multi Protocol Trans. Net(%u)", value);
        case  398:       FormatString("Kryptolan(%u)", value);
        case  399:       FormatString("TP2 encapsulation(%u)", value);
        case  400:       FormatString("Workstation Solutions(%u)", value);
        case  401:       FormatString("Uninterruptible Power Supply(%u)", value);
        case  402:       FormatString("Genie Protocol(%u)", value);
        case  403:       FormatString("decap(%u)", value);
        case  404:       FormatString("nced(%u)", value);
        case  405:       FormatString("ncld(%u)", value);
        case  406:       FormatString("Interactive Mail Support Protocol(%u)", value);
        case  407:       FormatString("Timbuktu(%u)", value);
        case  408:       FormatString("Prospero Resource Manager System Manager(%u)", value);
        case  409:       FormatString("Prospero Resource Manager Node Manager(%u)", value);
        case  410:       FormatString("DEC Ladebug Remote Debug Protocol(%u)", value);
        case  411:       FormatString("Remote MT Protocol(%u)", value);
        case  412:       FormatString("Trap Convention Port(%u)", value);
        case  413:       FormatString("SMSP(%u)", value);
        case  414:       FormatString("InfoSeek(%u)", value);
        case  415:       FormatString("BNet(%u)", value);
        case  416:       FormatString("Silverplatter(%u)", value);
        case  417:       FormatString("Onmux(%u)", value);
        case  418:       FormatString("Hyper-G(%u)", value);
        case  419:       FormatString("Ariel(%u)", value);
        case  420:       FormatString("SMPTE(%u)", value);
        case  421:       FormatString("Ariel(%u)", value);
        case  422:       FormatString("Ariel(%u)", value);
        case  423:       FormatString("IBM Operations Planning and Control Start(%u)", value);
        case  424:       FormatString("IBM Operations Planning and Control Track(%u)", value);
        case  425:       FormatString("ICAD(%u)", value);
        case  426:       FormatString("smartsdp(%u)", value);
        //, Service Location Protocol
        case  427:       FormatString("SLP(%u)", value);
        case  428:       FormatString("OCS_CMU(%u)", value);
        case  429:       FormatString("OCS_AMU(%u)", value);
        case  430:       FormatString("UTMPSD(%u)", value);
        case  431:       FormatString("UTMPCD(%u)", value);
        case  432:       FormatString("IASD(%u)", value);
        case  433:       FormatString("NNSP(%u)", value);
        case  434:       FormatString("Mobile IP agent(%u)", value);
        case  435:       FormatString("Mobile IP MN(%u)", value);
        case  436:       FormatString("DNA-CML(%u)", value);
        case  437:       FormatString("comscm(%u)", value);
        case  438:       FormatString("dsfgw(%u)", value);
        case  439:       FormatString("dasp(%u)", value);
        case  440:       FormatString("sgcp(%u)", value);
        case  441:       FormatString("decvms-sysmgt(%u)", value);
        case  442:       FormatString("cvc_hostd(%u)", value);
        //, HTTP over SSL/TLS
        case  443:       FormatString("HTTPS(%u)", value);
        //, Simple Network Paging Protocol
        case  444:       FormatString("SNPP(%u)", value);
        case  445:       FormatString("Microsoft-DS(%u)", value);
        case  446:       FormatString("DDM-RDB(%u)", value);
        case  447:       FormatString("DDM-RFM(%u)", value);
        case  448:       FormatString("DDM-SSL(%u)", value);
        case  449:       FormatString("AS Server Mapper(%u)", value);
        case  450:       FormatString("TServer(%u)", value);
        case  451:       FormatString("Cray Network Semaphore server(%u)", value);
        case  452:       FormatString("Cray SFS config server(%u)", value);
        case  453:       FormatString("CreativeServer(%u)", value);
        case  454:       FormatString("ContentServer(%u)", value);
        case  455:       FormatString("CreativePartnr(%u)", value);
        case  456:       FormatString("macon-tcp(%u)", value);
        case  457:       FormatString("scohelp(%u)", value);
        case  458:       FormatString("apple quick time(%u)", value);
        case  459:       FormatString("ampr-rcmd(%u)", value);
        case  460:       FormatString("skronk(%u)", value);
        case  461:       FormatString("DataRampSrv(%u)", value);
        case  462:       FormatString("DataRampSrvSec(%u)", value);
        case  463:       FormatString("alpes(%u)", value);
        case  464:       FormatString("Kerberos change/set password(%u)", value);
        case  465:       FormatString("(TCP) URL Rendesvous Directory for SSM/(UDP) IGMP over UDP for SSM(%u)", value);
        case  466:       FormatString("digital-vrc(%u)", value);
        case  467:       FormatString("mylex-mapd(%u)", value);
        case  468:       FormatString("Photuris(%u)", value);
        case  469:       FormatString("Radio Control Protocol(%u)", value);
        case  470:       FormatString("scx-proxy(%u)", value);
        case  471:       FormatString("Mondex(%u)", value);
        case  472:       FormatString("ljk-login(%u)", value);
        case  473:       FormatString("hybrid-pop(%u)", value);
        case  474:       FormatString("(TCP) tn-tl-w1/(UDP) tn-tl-w2(%u)", value);
        case  475:       FormatString("tcpnethaspsrv(%u)", value);
        case  476:       FormatString("tn-tl-fd1(%u)", value);
        case  477:       FormatString("ss7ns(%u)", value);
        case  478:       FormatString("spsc(%u)", value);
        case  479:       FormatString("iafserver(%u)", value);
        case  480:       FormatString("iafdbase(%u)", value);
        case  481:       FormatString("Ph service(%u)", value);
        case  482:       FormatString("bgs-nsi(%u)", value);
        case  483:       FormatString("ulpnet(%u)", value);
        case  484:       FormatString("Integra Software Management Environment(%u)", value);
        case  485:       FormatString("Air Soft Power Burst(%u)", value);
        case  486:       FormatString("Avian(%u)", value);
        //, Simple Asynchronous File Transfer
        case  487:       FormatString("SAFT(%u)", value);
        case  488:       FormatString("gss-http(%u)", value);
        case  489:       FormatString("nest-protocol(%u)", value);
        case  490:       FormatString("micom-pfs(%u)", value);
        case  491:       FormatString("go-login(%u)", value);
        case  492:       FormatString("Transport Independent Convergence for FNA(%u)", value);
        case  493:       FormatString("Transport Independent Convergence for FNA(%u)", value);
        case  494:       FormatString("POV-Ray(%u)", value);
        case  495:       FormatString("intecourier(%u)", value);
        case  496:       FormatString("PIM-RP-DISC(%u)", value);
        case  497:       FormatString("dantz(%u)", value);
        case  498:       FormatString("siam(%u)", value);
        case  499:       FormatString("ISO ILL Protocol(%u)", value);
        //, Internet Key Exchange
        case  500:       FormatString("ISAKMP/IKE(%u)", value);
        case  501:       FormatString("STMF(%u)", value);
        case  502:       FormatString("asa-appl-proto(%u)", value);
        case  503:       FormatString("Intrinsa(%u)", value);
        case  504:       FormatString("citadel(%u)", value);
        case  505:       FormatString("mailbox-lm(%u)", value);
        case  506:       FormatString("ohimsrv(%u)", value);
        case  507:       FormatString("crs(%u)", value);
        case  508:       FormatString("xvttp(%u)", value);
        case  509:       FormatString("snare(%u)", value);
        case  510:       FormatString("FirstClass Protocol(%u)", value);
        case  511:       FormatString("mynet-as(%u)", value);
        //(Used by mail system to notify users of new mail received)
        case  512:       FormatString("rexec, remote process execution(%u)", value);
        //(Maintains data bases for who's logged on a local net and the average load of the machine)
        case  513:       FormatString("Rlogin(%u)", value);
        //(cmd like exec but automatic authentication is performed for login server)
        case  514:       FormatString("Syslog(%u)", value);
        //Line Printer Daemon
        case  515:       FormatString("LPD(%u)", value);
        case  516:       FormatString("videotex(%u)", value);
        // - doesn't use link protocol. A rendezvous port establishes a tcp connection
        case  517:       FormatString("Like tenex link but across machine(%u)", value);
        case  518:       FormatString("ntalk(%u)", value);
        case  519:       FormatString("unixtime(%u)", value);
        //, Routing Information Protocol(Extended file name server)
        case  520:       FormatString("RIP(%u)", value);
        case  521:       FormatString("RIPng(%u)", value);
        case  522:       FormatString("ULP(%u)", value);
        case  523:       FormatString("IBM-DB2(%u)", value);
        case  524:       FormatString("NCP(%u)", value);
        case  525:       FormatString("timeserver(%u)", value);
        case  526:       FormatString("newdate(%u)", value);
        case  527:       FormatString("Stock IXChange(%u)", value);
        case  528:       FormatString("Customer IXChange(%u)", value);
        case  529:       FormatString("IRC-SERV(%u)", value);
        case  530:       FormatString("rpc(%u)", value);
        case  531:       FormatString("chat(%u)", value);
        case  532:       FormatString("readnews(%u)", value);
        case  533:       FormatString("emergency broadcasts(%u)", value);
        case  534:       FormatString("MegaMedia Admin(%u)", value);
        case  535:       FormatString("iiop(%u)", value);
        case  536:       FormatString("opalis-rdv(%u)", value);
        case  537:       FormatString("Networked Media Streaming Protocol(%u)", value);
        case  538:       FormatString("gdomap(%u)", value);
        case  539:       FormatString("Apertus Technologies Load Determination(%u)", value);
        case  540:       FormatString("uucpd(%u)", value);
        case  541:       FormatString("uucp-rlogin(%u)", value);
        case  542:       FormatString("commerce(%u)", value);
        case  543:       FormatString("klogin(%u)", value);
        case  544:       FormatString("krcmd(%u)", value);
        case  545:       FormatString("appleqtcsrvr(%u)", value);
        case  546:       FormatString("DHCPv6 client(%u)", value);
        case  547:       FormatString("DHCPv6 server(%u)", value);
        case  548:       FormatString("AFP over TCP(%u)", value);
        case  549:       FormatString("IDFP(%u)", value);
        case  550:       FormatString("new-who(%u)", value);
        case  551:       FormatString("cybercash(%u)", value);
        case  552:       FormatString("deviceshare(%u)", value);
        case  553:       FormatString("pirp(%u)", value);
        //, Real Time Streaming Protocol
        case  554:       FormatString("RTSP(%u)", value);
        case  555:       FormatString("dsf(%u)", value);
        case  556:       FormatString("rfs server(%u)", value);
        case  557:       FormatString("openvms-sysipc(%u)", value);
        case  558:       FormatString("SDNSKMP(%u)", value);
        case  559:       FormatString("TEEDTAP(%u)", value);
        case  560:       FormatString("rmonitord(%u)", value);
        case  561:       FormatString("monitor(%u)", value);
        case  562:       FormatString("chcmd(%u)", value);
        case  563:       FormatString("NNTP over TLS/SSL (was snntp)(%u)", value);
        case  564:       FormatString("plan 9 file service(%u)", value);
        case  565:       FormatString("whoami(%u)", value);
        case  566:       FormatString("streettalk(%u)", value);
        case  567:       FormatString("banyan-rpc(%u)", value);
        case  568:       FormatString("microsoft shuttle(%u)", value);
        case  569:       FormatString("microsoft rome(%u)", value);
        case  570:       FormatString("demon(%u)", value);
        case  571:       FormatString("udemon(%u)", value);
        case  572:       FormatString("sonar(%u)", value);
        case  573:       FormatString("banyan-vip(%u)", value);
        case  574:       FormatString("FTP Software Agent System(%u)", value);
        //, VErsatile MultiMedia Interface
        case  575:       FormatString("VEMMI(%u)", value);
        case  576:       FormatString("ipcd(%u)", value);
        case  577:       FormatString("vnas(%u)", value);
        case  578:       FormatString("ipdd(%u)", value);
        case  579:       FormatString("decbsrv(%u)", value);
        case  580:       FormatString("SNTP HEARTBEAT(%u)", value);
        case  581:       FormatString("Bundle Discovery Protocol(%u)", value);
        case  582:       FormatString("SCC Security(%u)", value);
        case  583:       FormatString("Philips Video-Conferencing(%u)", value);
        case  584:       FormatString("Key Server(%u)", value);
        // (Use of 585 is not recommended use 993 instead)
        case  585:       FormatString("IMAP4+SSL(%u)", value);
        case  586:       FormatString("Password Change(%u)", value);
        case  587:       FormatString("Submission(%u)", value);
        case  588:       FormatString("CAL(%u)", value);
        case  589:       FormatString("EyeLink(%u)", value);
        case  590:       FormatString("TNS CML(%u)", value);
        case  591:       FormatString("FileMaker Inc(%u)", value);
        case  592:       FormatString("Eudora Set(%u)", value);
        case  593:       FormatString("HTTP RPC Ep Map(%u)", value);
        case  594:       FormatString("TPIP(%u)", value);
        case  595:       FormatString("CAB Protocol(%u)", value);
        case  596:       FormatString("SMSD(%u)", value);
        case  597:       FormatString("PTC Name Service(%u)", value);
        case  598:       FormatString("SCO Web Server Manager 3(%u)", value);
        case  599:       FormatString("Aeolon Core Protocol(%u)", value);
        case  600:       FormatString("Sun IPC server(%u)", value);
        case  601:       FormatString("Syslog(%u)", value);
        case  602:       FormatString("XML-RPC over BEEP(%u)", value);
        case  603:       FormatString("IDXP(%u)", value);
        case  604:       FormatString("TUNNEL(%u)", value);
        case  605:       FormatString("SOAP over BEEP(%u)", value);
        case  606:       FormatString("Cray Unified Resource Manager(%u)", value);
        case  607:       FormatString("nqs(%u)", value);
        //Sender-Initiated/Unsolicited File Transfer
        case  608:       FormatString("SIFT/UFT(%u)", value);
        case  609:       FormatString("npmp-trap(%u)", value);
        case  610:       FormatString("npmp-local(%u)", value);
        case  611:       FormatString("npmp-gui(%u)", value);
        case  612:       FormatString("HMMP Indication(%u)", value);
        case  613:       FormatString("HMMP Operation(%u)", value);
        case  614:       FormatString("SSLshell(%u)", value);
        case  615:       FormatString("Internet Configuration Manager(%u)", value);
        case  616:       FormatString("SCO System Administration Server(%u)", value);
        case  617:       FormatString("SCO Desktop Administration Server(%u)", value);
        case  618:       FormatString("DEI-ICDA(%u)", value);
        case  619:       FormatString("Digital EVM(%u)", value);
        case  620:       FormatString("SCO WebServer Manager(%u)", value);
        case  621:       FormatString("ESCP(%u)", value);
        case  622:       FormatString("Collaborator(%u)", value);
        case  623:       FormatString("Aux Bus Shunt(%u)", value);
        case  624:       FormatString("Crypto Admin(%u)", value);
        case  625:       FormatString("DEC DLM(%u)", value);
        case  626:       FormatString("ASIA(%u)", value);
        case  627:       FormatString("CKS & TIVIOLI(%u)", value);
        case  628:       FormatString("QMQP(%u)", value);
        case  629:       FormatString("3Com AMP3(%u)", value);
        case  630:       FormatString("RDA(%u)", value);
        case  631:       FormatString("IPP, Internet Printing Protocol(%u)", value);
        case  632:       FormatString("bmpp(%u)", value);
        case  633:       FormatString("Service Status update (Sterling Software)(%u)", value);
        case  634:       FormatString("ginad(%u)", value);
        case  635:       FormatString("RLZ DBase(%u)", value);
        case  636:       FormatString("ldap protocol over TLS/SSL (was sldap)(%u)", value);
        case  637:       FormatString("lanserver(%u)", value);
        case  638:       FormatString("mcns-sec(%u)", value);
        //, Multicast Source Discovery Protocol
        case  639:       FormatString("MSDP(%u)", value);
        case  640:       FormatString("entrust-sps(%u)", value);
        case  641:       FormatString("repcmd(%u)", value);
        case  642:       FormatString("EMSD over ESRO(%u)", value);
        case  643:       FormatString("SANity(%u)", value);
        case  644:       FormatString("dwr(%u)", value);
        case  645:       FormatString("PSSC(%u)", value);
        //, Label Distribution Protocol
        case  646:       FormatString("LDP(%u)", value);
        case  647:       FormatString("DHCP Failover Protocol(%u)", value);
        //, Registry Registrar Protocol
        case  648:       FormatString("RRP(%u)", value);
        case  649:       FormatString("Aminet(%u)", value);
        case  650:       FormatString("OBEX(%u)", value);
        case  651:       FormatString("IEEE MMS(%u)", value);
        //, Dynamic Tunnel Configuration Protocol
        case  652:       FormatString("DTCP(%u)", value);
        case  653:       FormatString("RepCmd(%u)", value);
        //, Ad hoc On-Demand Distance Vector
        case  654:       FormatString("AODV(%u)", value);
        case  655:       FormatString("TINC(%u)", value);
        case  656:       FormatString("SPMP(%u)", value);
        case  657:       FormatString("RMC(%u)", value);
        case  658:       FormatString("TenFold(%u)", value);
        case  659:       FormatString("URL Rendezvous(%u)", value);
        case  660:       FormatString("MacOS Server Admin(%u)", value);
        case  661:       FormatString("HAP(%u)", value);
        case  662:       FormatString("PFTP(%u)", value);
        case  663:       FormatString("PureNoise(%u)", value);
        case  664:       FormatString("Secure Aux Bus(%u)", value);
        case  665:       FormatString("Sun DR(%u)", value);
        case  666:       FormatString("Doom, Id Software(%u)", value);
        // campaign contribution disclosures - SDR Technologies
        case  667:       FormatString("Campaign contribution(%u)", value);
        case  668:       FormatString("MeComm(%u)", value);
        case  669:       FormatString("MeRegister(%u)", value);
        case  670:       FormatString("VACDSM-SWS(%u)", value);
        case  671:       FormatString("VACDSM-APP(%u)", value);
        case  672:       FormatString("VPPS-QUA(%u)", value);
        case  673:       FormatString("CIMPLEX(%u)", value);
        //, Application Configuration Access Protocol
        case  674:       FormatString("ACAP(%u)", value);
        case  675:       FormatString("DCTP(%u)", value);
        case  676:       FormatString("VPPS Via(%u)", value);
        case  677:       FormatString("Virtual Presence Protocol(%u)", value);
        case  678:       FormatString("GNU Gereration Foundation NCP(%u)", value);
        case  679:       FormatString("MRM(%u)", value);
        case  680:       FormatString("entrust-aaas(%u)", value);
        case  681:       FormatString("entrust-aaas(%u)", value);
        case  682:       FormatString("XFR(%u)", value);
        case  683:       FormatString("CORBA IIOP(%u)", value);
        case  684:       FormatString("CORBA IIOP SSL(%u)", value);
        case  685:       FormatString("MDC Port Mapper(%u)", value);
        case  686:       FormatString("Hardware Control Protocol Wismar(%u)", value);
        case  687:       FormatString("asipregistry(%u)", value);
        case  688:       FormatString("REALM-RUSD(%u)", value);
        case  689:       FormatString("NMAP(%u)", value);
        case  690:       FormatString("VATP(%u)", value);
        case  691:       FormatString("MS Exchange Routing(%u)", value);
        case  692:       FormatString("Hyperwave-ISP(%u)", value);
        case  693:       FormatString("connendp(%u)", value);
        case  694:       FormatString("ha-cluster(%u)", value);
        case  695:       FormatString("IEEE-MMS-SSL(%u)", value);
        case  696:       FormatString("RUSHD(%u)", value);
        case  697:       FormatString("UUIDGEN(%u)", value);
        //, Optimized Link State Routing
        case  698:       FormatString("OLSR(%u)", value);
        case  699:       FormatString("Access Network(%u)", value);
        //, Extensible Provisioning Protocol
        case  700:       FormatString("EPP(%u)", value);
        case  701:       FormatString("Link Management Protocol (LMP)(%u)", value);
        case  702:       FormatString("IRIS over BEEP(%u)", value);
        case  704:       FormatString("errlog copy/server daemon(%u)", value);
        case  705:       FormatString("AgentX(%u)", value);
        //, Secure Internet Live Conferencing
        case  706:       FormatString("SILC(%u)", value);
        case  707:       FormatString("Borland DSJ(%u)", value);
        case  709:       FormatString("Entrust Key Management Service Handler(%u)", value);
        case  710:       FormatString("Entrust Administration Service Handler(%u)", value);
        //, Tag Distribution Protocol
        case  711:       FormatString("Cisco TDP(%u)", value);
        //, Topology Broadcast based on Reverse-Path Forwarding
        case  712:       FormatString("TBRPF(%u)", value);
        //Distance Vectored Monitoring Protocol/Simple Message Queue Protocol
        case  720:       FormatString("DVMP/SMQP(%u)", value);
        //, eXtensible Service Registration Protocol
        case  721:       FormatString("XSRP(%u)", value);
        //, eXtensible Service Transfer Protocol
        case  723:       FormatString("XSTP(%u)", value);
        //, eXtensible Service Subscription Protocol
        case  725:       FormatString("XSSP(%u)", value);
        //, eXtensible Service Location Protocol
        case  727:       FormatString("XSLP(%u)", value);
        case  729:       FormatString("IBM NetView DM/6000 Server/Client(%u)", value);
        case  730:       FormatString("IBM NetView DM/6000 send TCP(%u)", value);
        case  731:       FormatString("IBM NetView DM/6000 receive TCP(%u)", value);
        case  741:       FormatString("netGW(%u)", value);
        case  742:       FormatString("Network based Rev. Cont. Sys(%u)", value);
        case  744:       FormatString("Flexible License Manager(%u)", value);
        case  747:       FormatString("Fujitsu Device Control(%u)", value);
        case  748:       FormatString("Russell Info Sci Calendar Manager(%u)", value);
        case  749:       FormatString("kerberos administration(%u)", value);
        case  750:       FormatString("kerberos version iv(%u)", value);
        case  751:       FormatString("pump(%u)", value);
        case  752:       FormatString("qrh(%u)", value);
        case  753:       FormatString("rrh(%u)", value);
        case  754:       FormatString("send(%u)", value);
        case  758:       FormatString("nlogin(%u)", value);
        case  759:       FormatString("con(%u)", value);
        case  760:       FormatString("ns(%u)", value);
        case  761:       FormatString("rxe(%u)", value);
        case  762:       FormatString("quotad(%u)", value);
        case  763:       FormatString("cycleserv(%u)", value);
        case  764:       FormatString("omserv(%u)", value);
        case  765:       FormatString("webster(%u)", value);
        case  767:       FormatString("phone(%u)", value);
        case  769:       FormatString("vid(%u)", value);
        case  770:       FormatString("cadlock(%u)", value);
        case  771:       FormatString("rtip(%u)", value);
        case  772:       FormatString("cycleserv2(%u)", value);
        case  773:       FormatString("submit(%u)", value);
        case  774:       FormatString("rpasswd(acmaint_dbd)(%u)", value);
        case  775:       FormatString("entomb(acmaint_transd)(%u)", value);
        case  776:       FormatString("wpages(%u)", value);
        case  777:       FormatString("Multiling HTTP(%u)", value);
        case  780:       FormatString("wpgs(%u)", value);
        case  800:       FormatString("mdbs_daemon(%u)", value);
        case  801:       FormatString("device(%u)", value);
        case  810:       FormatString("FCP(%u)", value);
        case  828:       FormatString("itm-mcell-s(%u)", value);
        //, Certificate Management Protocols
        case  829:       FormatString("CMP(%u)", value);
        case  847:       FormatString("dhcp-failover 2(%u)", value);
        //, Group Domain of Interpretation
        case  848:       FormatString("GDOI(%u)", value);
        case  860:       FormatString("iSCSI(%u)", value);
        case  873:       FormatString("rsync(%u)", value);
        case  886:       FormatString("ICL coNETion locate server(%u)", value);
        case  887:       FormatString("ICL coNETion server info(%u)", value);
        case  888:       FormatString("AccessBuilder(%u)", value);
        case  900:       FormatString("OMG Initial Refs(%u)", value);
        case  901:       FormatString("SMPNAMERES(%u)", value);
        case  902:       FormatString("IDEAFARM-CHAT(%u)", value);
        case  903:       FormatString("IDEAFARM-CATCH(%u)", value);
        case  911:       FormatString("xact-backup(%u)", value);
        case  912:       FormatString("APEX relay-relay service(%u)", value);
        case  913:       FormatString("APEX endpoint-relay service(%u)", value);
        case  989:       FormatString("ftp data over TLS/SSL(%u)", value);
        case  990:       FormatString("ftp control over TLS/SSL(%u)", value);
        //, Netnews Administration System
        case  991:       FormatString("NAS(%u)", value);
        case  992:       FormatString("telnet over TLS/SSL(%u)", value);
        case  993:       FormatString("imap4 over TLS/SSL(%u)", value);
        case  994:       FormatString("irc over TLS/SSL(%u)", value);
        case  995:       FormatString("pop3 over TLS/SSL(%u)", value);
        case  996:       FormatString("vsinet(%u)", value);
        case  997:       FormatString("maitrd(%u)", value);
        case  998:       FormatString("busboy(puparp)(%u)", value);
        case  999:       FormatString("Applix ac(%u)", value);
        case 1000:       FormatString("cadlock2(%u)", value);
        case 1010:       FormatString("surf(%u)", value);
        case 1701:       FormatString("L2TP(%u)", value);
        case 2049:       FormatString("NFS(%u)", value);
		case 2535:       FormatString("MADCAP(%u)",value);
        case 3268:       FormatString("Microsoft Global Catalog (LDAP)(%u)", value);
        case 3269:       FormatString("Microsoft Global Catalog SSL (LDAP)(%u)", value);
        case 3389:       FormatString("MS WBT Server(%u)", value);
		//Tunneling IPv6 over UDP through NATs
        case 3544:       FormatString("Teredo Servers(%u)", value);
        case 4500:       FormatString("IPsec NAT-Traversal(%u)", value); //rfc3947
        case 5000:       FormatString("GENA(%u)", value);
        case 5001:       FormatString("SIMPLE(%u)", value);
        //Real-time Transport Protocol
        case 5004:       FormatString("RTP(%u)", value);
        case 5355:       FormatString("Linklocal Multicast Name Resolution(%u)", value);
        case 8080:       FormatString("HTTP Alternate(%u)", value);
        default:         FormatString("%d",value);
        
    }
}

Table ProtocolTypeAbbreviationTable(value)
{
    switch(value)
    {
        case     0:    "HOPOPT";
        case     1:    "ICMP";
        //case     2:    "IGAP";
        case     2:    "IGMP";
        //case     :    "RGMP";
        case     3:    "GGP";
        case     4:    "IP in IP";
        case     5:    "ST";
        case     6:    "TCP";
        case     7:    "UCL";
        case     8:    "EGP";
        case     9:    "IGRP";
        case    10:    "BBN RCC Monitoring";
        case    11:    "NVP";
        case    12:    "PUP";
        case    13:    "ARGUS";
        case    14:    "EMCON";
        case    15:    "XNET";
        case    16:    "Chaos";
        case    17:    "UDP";
        case    18:    "TMux";
        case    19:    "DCN Measurement Subsystems";
        case    20:    "HMP";
        case    21:    "Packet Radio Measurement";
        case    22:    "XEROX NS IDP";
        case    23:    "Trunk-1";
        case    24:    "Trunk-2";
        case    25:    "Leaf-1";
        case    26:    "Leaf-2";
        case    27:    "RDP";
        case    28:    "IRTP";
        case    29:    "ISO Transport Protocol Class 4";
        case    30:    "NETBLT";
        case    31:    "MFE Network Services Protocol";
        case    32:    "MERIT Internodal Protocol";
        case    33:    "SEP";
        //case    :    "DCCP";
        case    34:    "Third Party Connect Protocol";
        case    35:    "IDPR";
        case    36:    "XTP";
        case    37:    "DDP";
        case    38:    "IDPR";
        case    39:    "TP++ Transport Protocol";
        case    40:    "IL Transport Protocol";
        case    41:    "IPv6 over IPv4";
        case    42:    "SDRP";
        case    43:    "IPv6 Rt Hdr";
        case    44:    "IPv6 Frag. Hdr";
        case    45:    "IDRP";
        case    46:    "RSVP";
        case    47:    "GRE";
        case    48:    "MHRP";
        case    49:    "BNA";
        case    50:    "ESP";
        case    51:    "AH";
        case    52:    "Integrated Net Layer Security TUBA";
        case    53:    "IP with Encryption";
        case    54:    "NARP";
        case    55:    "Minimal Encapsulation Protocol";
        case    56:    "TLSP";
        case    57:    "SKIP";
        case    58:    "ICMPv6";
        //case    :    "MLD";
        case    59:    "IPv6 No Next Header";
        case    60:    "IPv6 Dest Opt";
        case    61:    "Any host internal protocol";
        case    62:    "CFTP";
        case    63:    "Any local network";
        case    64:    "SATNET and Backroom EXPAK";
        case    65:    "Kryptolan";
        case    66:    "MIT Remote Virtual Disk";
        case    67:    "Internet Pluribus Packet Core";
        case    68:    "Any distributed file system";
        case    69:    "SATNET Monitoring";
        case    70:    "VISA";
        case    71:    "Internet Packet Core Utility";
        case    72:    "Computer Protocol Network Executive";
        case    73:    "Computer Protocol Heart Beat";
        case    74:    "Wang Span Network";
        case    75:    "Packet Video Protocol";
        case    76:    "Backroom SATNET Monitoring";
        case    77:    "SUN ND PROTOCOL-Temporary";
        case    78:    "WIDEBAND Monitoring";
        case    79:    "WIDEBAND EXPAK";
        case    80:    "ISO-IP";
        case    81:    "VMTP";
        case    82:    "SECURE-VMTP";
        case    83:    "VINES";
        case    84:    "TTP";
        case    85:    "NSFNET-IGP";
        case    86:    "Dissimilar Gateway Protocol";
        case    87:    "TCF";
        case    88:    "EIGRP";
        case    89:    "OSPF/MOSPF";
        case    90:    "Sprite RPC";
        case    91:    "Locus ARP";
        case    92:    "MTP";
        case    93:    "AX";
        case    94:    "IP-within-IP";
        case    95:    "Mobile ICP";
        case    96:    "Semaphore Communications Sec";
        case    97:    "EtherIP";
        case    98:    "Encapsulation Header";
        case    99:    "Any private encryption scheme";
        case   100:    "GMTP";
        case   101:    "IFMP";
        case   102:    "PNNI over IP";
        case   103:    "PIM";
        case   104:    "ARIS";
        case   105:    "SCPS";
        case   106:    "QNX";
        case   107:    "Active Networks";
        case   108:    "IPPCP";
        case   109:    "SNP";
        case   110:    "Compaq Peer Protocol";
        case   111:    "IPX in IP";
        case   112:    "VRRP";
        case   113:    "PGM";
        case   114:    "any 0-hop protocol";
        case   115:    "L2TP";
        case   116:    "DDX";
        case   117:    "IATP";
        case   118:    "ST";
        case   119:    "SRP";
        case   120:    "UTI";
        case   121:    "SMP";
        case   122:    "SM";
        case   123:    "PTP";
        case   124:    "ISIS over IPv4";
        case   125:    "FIRE";
        case   126:    "CRTP";
        case   127:    "CRUDP";
        case   128:    "SSCOPMCE";
        case   129:    "IPLT";
        case   130:    "SPS";
        case   131:    "PIPE";
        case   132:    "SCTP";
        case   133:    "Fibre Channel";
        case   134:    "RSVP-E2E-IGNORE";
        case   135:    "Mobility Header";
        case   136:    "UDP-Lite";
        case   137:    "MPLS in IP";
        case   253:    "Experimentation and testing";
        case   254:    "Experimentation and testing";
        case   255:    "reserved";
        default  :      FormatString("%#x",value);
    }
}





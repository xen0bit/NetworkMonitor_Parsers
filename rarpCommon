//#  (c) 2009 CodePlex Foundation
//#
//#  Title:                  Reverse Address Resolution Protocol
//#
//#  Details:                
//#
//#  Public References:      RFC 903
//#                          http://www.networkdictionary.com/protocols/rarp.php
//#
//#  Comments:               
//#
//#  Revision Class and Date:
//#
//####

// [RFC 903    Page 2    III.  The Proposed Protocol]
//[DefaultTimeOut = ARPConversationTimeout]
Protocol RARP = FormatString("%s, Target IP = %s", ARPOpCodeTable(OpCode), Property.RARPTargetIP)
{
	UINT16 HardwareType = HardwareTypeTable(this);
	UINT16 ProtocolType = ProtocolTable(this);
	UINT8 HardwareAddressLen;
	UINT8 ProtocolAddressLen;
	UINT16 OpCode = FormatString("%s, %d(%#x)",ARPOpCodeTable(this),this, this);

	switch(HardwareAddressLen)
	{
		case  6:MacAddress SendersMacAddress;
		default:AsciiString(HardwareAddressLen) SendersHardwareAddress;
	}
	switch(ProtocolAddressLen)
	{
		case  4:
			[RARPSenderIP = this.ToString, SenderProtocolAddress]
			IPv4Address SenderslIp4Address;
		case 16:
			[RARPSenderIP = this.ToString, SenderProtocolAddress]
			IPv6Address SendersIp6Address;
		default:
			[RARPSenderIP = this.ToString, SenderProtocolAddress]
			AsciiString(ProtocolAddressLen) SendersAddress;
	}

	switch(HardwareAddressLen)
	{
		case  6:MacAddress TargetMacAddress;
		default:AsciiString(HardwareAddressLen) TargetHardwareAddress;
	}
//	[Post.BuildConversation(
//							Property.SenderProtocolAddress < Property.TargetProtocolAddress ?
//							MakeByteArray(Property.SenderProtocolAddress, Property.TargetProtocolAddress) :
//							MakeByteArray(Property.TargetProtocolAddress, Property.SenderProtocolAddress)
//							),
//		Post.Conversation.ConversationDescription
//			= FormatString("(%s - %s) ConvID = %d", RARPSenderIP, RARPTargetIP, ConvID)
//	]
	switch(ProtocolAddressLen)
	{
		case  4:
			[RARPTargetIP = this.ToString, TargetProtocolAddress]
			IPv4Address TargetIp4Address;
		case 16:
			[RARPTargetIP = this.ToString, TargetProtocolAddress]
			IPv6Address TargetIp6Address;
		default:
			[RARPTargetIP = this.ToString, TargetProtocolAddress]
			AsciiString(ProtocolAddressLen) TargetAddress;
	}
}


//#  (c) 2009 CodePlex Foundation
//#
//#  Title:                  File Server Resource Manager Protocol
//#
//#  Details:                
//#
//#  Microsoft References:   [MS-FSRM]: File Server Resource Manager Protocol Specification (8.0)
//#
//#  Comments:               Parser Framework: PAC v2.1.1577.0
//#
//#  Revision Class and Date:Major, 6/22/2009
//#
//####

Protocol FSRM = FormatString( "%s %s%s%s%s%s", 
	Property.FSRMMethodName,
	Property.MSRPCPType ? "Response" : "Request",
	Property.MSRPCPfcFlags & 0x03 == 0x01 ? ", RPC first fragment" : "",
	Property.MSRPCCompleteFrag == 0 ? ", partial" : "",
	Property.MSRPCEncrypted == ConstEncTypeEncrypted ? ", *Encrypted*" : Property.MSRPCEncrypted == ConstEncTypeUnknown ? "*Un-Interpreted*" : "",
	Property.FSRMSummary && Property.MSRPCEncrypted == ConstEncTypeClearData ? ", " + Property.FSRMSummary : "" )
{
	[Property.FSRMSummary = ""]
	Switch( Property.MSRPCIfUuid )
	{
		Case "{D2DC89DA-EE91-48A0-85D8-CC72A56F7D04}":
			[Property.FSRMMethodName = "IFsrmClassificationManager::" + FSRMIFsrmClassificationManagerMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmClassificationManager
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetClassificationReportFormats
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct PutClassificationReportFormats
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct GetLogging
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct PutLogging
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct GetClassificationReportMailTo
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct PutClassificationReportMailTo
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct GetClassificationReportEnabled
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct PutClassificationReportEnabled
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct GetClassificationLastReportPathWithoutExtension
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 16:
						_Struct GetClassificationLastError
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 17:
						_Struct GetClassificationRunningStatus
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 18:
						_Struct EnumPropertyDefinitions
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 19:
						_Struct CreatePropertyDefinition
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 20:
						_Struct GetPropertyDefinition
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 21:
						_Struct EnumRules
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 22:
						_Struct CreateRule
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 23:
						_Struct GetRule
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 24:
						_Struct EnumModuleDefinitions
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 27:
						_Struct RunClassification
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 28:
						_Struct WaitForClassificationCompletion
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 29:
						_Struct CancelClassification
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 25:
					Case 26:
					Case 30:
					Case 31:
					Case 32:
					Case 33:
						struct NotUsedOnWire
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									[FSRMSummary = "OPNUM:" + Property.MSRPCOpnum + " request is Not used on wire"]
									_Struct Request
									{
										ReportParserWarning("FSRM", "Invalid IFsrmClassificationManager method, Opnum:" + Property.MSRPCOpnum) ProtocolWarning;
										Blob(FrameLength - Offset) PayloadData;
									}
								
								Case 0x02: //RESPONSE
									[FSRMSummary = "OPNUM:" + Property.MSRPCOpnum + " response is Not used on wire"]
									_Struct Response
									{
										ReportParserWarning("FSRM", "Invalid IFsrmClassificationManager method, Opnum:" + Property.MSRPCOpnum) ProtocolWarning;
										Blob(FrameLength - Offset) PayloadData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmClassificationManager method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{4C8F96C3-5D94-4F37-A4F4-F56AB463546F}":
			[Property.FSRMMethodName = "IFsrmActionEventLog::" + FSRMIFsrmActionEventLogMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmActionEventLog
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetId
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetActionType
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct GetRunLimitInterval
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct GetRunLimitInterval
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct Delete
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct GetEventType
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct PutEventType
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct GetMessageText
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct PutMessageText
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmActionEventLog method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{D646567D-26AE-4CAA-9F84-4E0AAD207FCA}":
			[Property.FSRMMethodName = "IFsrmActionEmail::" + FSRMIFsrmActionEmailMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmActionEmail
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetId
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetActionType
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct GetRunLimitInterval
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct GetRunLimitInterval
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct Delete
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct GetMailFrom
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct PutMailFrom
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct GetMailReplyTo
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct PutMailReplyTo
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 16:
						_Struct GetMailTo
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 17:
						_Struct PutMailTo
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 18:
						_Struct GetMailCc
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 19:
						_Struct PutMailCc
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 20:
						_Struct GetMailBcc
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 21:
						_Struct PutMailBcc
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 22:
						_Struct GetMailSubject
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 23:
						_Struct PutMailSubject
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 24:
						_Struct GetMessageText
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 25:
						_Struct PutMessageText
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmActionEmail method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{326AF66F-2AC0-4F68-BF8C-4759F054FA29}":
			[Property.FSRMMethodName = "IFsrmPropertyCondition::" + FSRMIFsrmPropertyConditionMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmPropertyCondition
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct PutName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct GetType
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct PutType
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct GetValue
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct PutValue
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct Delete
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmPropertyCondition method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{E1010359-3E5D-4ECD-9FE4-EF48622FDF30}":
			[Property.FSRMMethodName = "IFsrmFileScreenTemplateImported::" + FSRMIFsrmFileScreenTemplateImportedMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmFileScreenTemplateImported
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetId
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct PutDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct Delete
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct GetBlockedFileGroups
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct PutBlockedFileGroups
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct GetFileScreenFlags
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct PutFileScreenFlags
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 16:
						_Struct CreateAction
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 17:
						_Struct EnumActions
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct Commit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 18:
						_Struct GetName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 19:
						_Struct PutName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 20:
						_Struct CopyTemplate
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 21:
						_Struct CommitAndUpdateDerived
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 22:
						_Struct GetOverwriteOnCommit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 23:
						_Struct PutOverwriteOnCommit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmFileScreenTemplateImported method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{F76FBF3B-8DDD-4B42-B05A-CB1C3FF1FEE8}":
			[Property.FSRMMethodName = "IFsrmCollection::" + FSRMIFsrmCollectionMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmCollection
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct NewEnum
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct Item
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct Count
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct State
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct Cancel
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct WaitForCompletion
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct GetById
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmCollection method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{27B899FE-6FFA-4481-A184-D3DAADE8A02B}":
			[Property.FSRMMethodName = "IFsrmReportManager::" + FSRMIFsrmReportManagerMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmReportManager
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct EnumReportJobs
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct CreateReportJob
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct GetReportJob
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct GetOutputDirectory
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct SetOutputDirectory
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct IsFilterValidForReportType
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct GetDefaultFilter
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct SetDefaultFilter
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct GetReportSizeLimit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 16:
						_Struct SetReportSizeLimit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmReportManager method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{1568A795-3924-4118-B74B-68D8F0FA5DAF}":
			[Property.FSRMMethodName = "IFsrmQuotaBase::" + FSRMIFsrmQuotaBaseMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmQuotaBase
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetId
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct PutDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct Delete
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct Commit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct GetQuotaLimit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct PutQuotaLimit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct GetQuotaFlags
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct PutQuotaFlags
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 16:
						_Struct GetThresholds
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 17:
						_Struct AddThreshold
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 18:
						_Struct DeleteThreshold
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 19:
						_Struct ModifyThreshold
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 20:
						_Struct CreateThresholdAction
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 21:
						_Struct EnumThresholdActions
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmQuotaBase method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{D8CC81D9-46B8-4FA4-BFA5-4AA9DEC9B638}":
			[Property.FSRMMethodName = "IFsrmReport::" + FSRMIFsrmReportMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmReport
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetType
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct PutName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct GetDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct PutDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct GetLastGeneratedFileNamePrefix
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct GetFilter
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct SetFilter
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct Delete
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmReport method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{2DBE63C4-B340-48A0-A5B0-158E07FC567E}":
			[Property.FSRMMethodName = "IFsrmActionReport::" + FSRMIFsrmActionReportMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmActionReport
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetId
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetActionType
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct GetRunLimitInterval
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct GetRunLimitInterval
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct Delete
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct GetReportTypes
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct PutReportTypes
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct GetMailTo
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct PutMailTo
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmActionReport method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{4173AC41-172D-4D52-963C-FDC7E415F717}":
			[Property.FSRMMethodName = "IFsrmQuotaTemplateManager::" + FSRMIFsrmQuotaTemplateManagerMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmQuotaTemplateManager
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct CreateTemplate
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetTemplate
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct EnumTemplates
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct ExportTemplates
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct ImportTemplates
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmQuotaTemplateManager method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{8DD04909-0E34-4D55-AFAA-89E1F1A1BBB9}":
			[Property.FSRMMethodName = "IFsrmFileGroup::" + FSRMIFsrmFileGroupMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmFileGroup
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetId
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct PutDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct Delete
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct Commit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct GetName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct PutName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct GetMembers
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct PutMembers
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 16:
						_Struct GetNonMembers
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 17:
						_Struct PutNonMembers
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmFileGroup method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{FF4FA04E-5A94-4BDA-A3A0-D5B4D3C52EBA}":
			[Property.FSRMMethodName = "IFsrmFileScreenManager::" + FSRMIFsrmFileScreenManagerMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmFileScreenManager
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct ActionVariables
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct ActionVariableDescriptions
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct CreateFileScreen
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct GetFileScreen
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct EnumFileScreens
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct CreateFileScreenException
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct GetFileScreenException
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct EnumFileScreenExceptions
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct CreateFileScreenCollection
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmFileScreenManager method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{BEE7CE02-DF77-4515-9389-78F01C5AFC1A}":
			[Property.FSRMMethodName = "IFsrmFileScreenException::" + FSRMIFsrmFileScreenExceptionMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmFileScreenException
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetId
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct PutDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct Delete
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct Commit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct GetPath
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct GetAllowedFileGroups
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct PutAllowedFileGroups
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmFileScreenException method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{EE321ECB-D95E-48E9-907C-C7685A013235}":
			[Property.FSRMMethodName = "IFsrmFileManagementJobManager::" + FSRMIFsrmFileManagementJobManagerMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmFileManagementJobManager
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct EnumFileManagementJobs
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct CreateFileManagementJob
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct GetFileManagementJob
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmFileManagementJobManager method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{6F4DBFFF-6920-4821-A6C3-B7E94C1FD60C}":
			[Property.FSRMMethodName = "IFsrmPathMapper::" + FSRMIFsrmPathMapperMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmPathMapper
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetSharePathsForLocalPath
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmPathMapper method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{9A2BF113-A329-44CC-809A-5C00FCE8DA40}":
			[Property.FSRMMethodName = "IFsrmQuotaTemplateImported::" + FSRMIFsrmQuotaTemplateImportedMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmQuotaTemplateImported
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetId
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct PutDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct Delete
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct GetQuotaLimit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct PutQuotaLimit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct GetQuotaFlags
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 18:
						_Struct DeleteThreshold
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 19:
						_Struct ModifyThreshold
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 20:
						_Struct CreateThresholdAction
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 21:
						_Struct EnumThresholdActions
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct Commit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct PutQuotaFlags
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 22:
						_Struct GetName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 23:
						_Struct PutName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 24:
						_Struct CopyTemplate
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 25:
						_Struct CommitAndUpdateDerived
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 16:
						_Struct GetOverwriteOnCommit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 17:
						_Struct PutOverwriteOnCommit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmQuotaTemplateImported method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{EFCB0AB1-16C4-4A79-812C-725614C3306B}":
			[Property.FSRMMethodName = "IFsrmExportImport::" + FSRMIFsrmExportImportMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmExportImport
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct ExportFileGroups
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct ImportFileGroups
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct ExportFileScreenTemplates
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct ImportFileScreenTemplates
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct ExportQuotaTemplates
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct ImportQuotaTemplates
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmExportImport method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{CB0DF960-16F5-4495-9079-3F9360D831DF}":
			[Property.FSRMMethodName = "IFsrmRule::" + FSRMIFsrmRuleMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmRule
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetId
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct PutDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct Delete
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct Commit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct GetName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct PutName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct GetRuleType
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct GetModuleDefinitionName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 16:
						_Struct PutModuleDefinitionName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 17:
						_Struct GetNamespaceRoots
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 18:
						_Struct PutNamespaceRoots
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 19:
						_Struct GetRuleFlags
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 20:
						_Struct PutRuleFlags
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 21:
						_Struct GetParameters
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 22:
						_Struct PutParameters
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 23:
						_Struct GetLastModified
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmRule method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{BB36EA26-6318-4B8C-8592-F72DD602E7A5}":
			[Property.FSRMMethodName = "IFsrmClassifierModuleDefinition::" + FSRMIFsrmClassifierModuleDefinitionMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmClassifierModuleDefinition
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetId
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct PutDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct Delete
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct GetName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 20:
						_Struct GetModuleType
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 21:
						_Struct GetEnabled
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct Commit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 31:
						_Struct GetPropertiesAffected
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 35:
						_Struct GetNeedsExplicitValue
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 32:
					Case 33:
					Case 34:
					Case 36:
						struct NotUsedOnWire
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									[FSRMSummary = "OPNUM:" + Property.MSRPCOpnum + " request is Not used on wire"]
									_Struct Request
									{
										ReportParserWarning("FSRM", "Invalid IFsrmClassifierModuleDefinition method, Opnum:" + Property.MSRPCOpnum) ProtocolWarning;
										Blob(FrameLength - Offset) PayloadData;
									}
								
								Case 0x02: //RESPONSE
									[FSRMSummary = "OPNUM:" + Property.MSRPCOpnum + " response is Not used on wire"]
									_Struct Response
									{
										ReportParserWarning("FSRM", "Invalid IFsrmClassifierModuleDefinition method, Opnum:" + Property.MSRPCOpnum) ProtocolWarning;
										Blob(FrameLength - Offset) PayloadData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmClassifierModuleDefinition method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{515C1277-2C81-440E-8FCF-367921ED4F59}":
			[Property.FSRMMethodName = "IFsrmPipelineModuleDefinition::" + FSRMIFsrmPipelineModuleDefinitionMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmPipelineModuleDefinition
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetId
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct PutDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct Delete
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct Commit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct GetName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 20:
						_Struct GetModuleType
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 21:
						_Struct GetEnabled
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
					Case 13:
					Case 15:
					Case 16:
					Case 17:
					Case 18:
					Case 19:
					Case 22:
					Case 23:
					Case 24:
					Case 25:
					Case 26:
					Case 27:
					Case 28:
					Case 29:
					Case 30:
						struct NotUsedOnWire
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									[FSRMSummary = "OPNUM:" + Property.MSRPCOpnum + " request is Not used on wire"]
									_Struct Request
									{
										ReportParserWarning("FSRM", "Invalid IFsrmPipelineModuleDefinition method, Opnum:" + Property.MSRPCOpnum) ProtocolWarning;
										Blob(FrameLength - Offset) PayloadData;
									}
								
								Case 0x02: //RESPONSE
									[FSRMSummary = "OPNUM:" + Property.MSRPCOpnum + " response is Not used on wire"]
									_Struct Response
									{
										ReportParserWarning("FSRM", "Invalid IFsrmPipelineModuleDefinition method, Opnum:" + Property.MSRPCOpnum) ProtocolWarning;
										Blob(FrameLength - Offset) PayloadData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmPipelineModuleDefinition method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{96DEB3B5-8B91-4A2A-9D93-80A35D8AA847}":
			[Property.FSRMMethodName = "IFsrmCommittableCollection::" + FSRMIFsrmCommittableCollectionMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmCommittableCollection
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct NewEnum
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct Item
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct Count
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct State
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct Cancel
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct WaitForCompletion
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct GetById
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct Add
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct Remove
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 16:
						_Struct RemoveById
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 17:
						_Struct Clone
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 18:
						_Struct Commit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmCommittableCollection method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{377F739D-9647-4B8E-97D2-5FFCE6D759CD}":
			[Property.FSRMMethodName = "IFsrmQuota::" + FSRMIFsrmQuotaMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmQuota
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetId
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct PutDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct Delete
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct GetQuotaLimit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct PutQuotaLimit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct GetQuotaFlags
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct PutQuotaFlags
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 16:
						_Struct GetThresholds
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 17:
						_Struct AddThreshold
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 18:
						_Struct DeleteThreshold
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 19:
						_Struct ModifyThreshold
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 20:
						_Struct CreateThresholdAction
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 21:
						_Struct EnumThresholdActions
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct Commit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 22:
						_Struct GetPath
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 23:
						_Struct GetUserSid
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 24:
						_Struct GetUserAccount
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 25:
						_Struct GetSourceTemplateName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 26:
						_Struct GetMatchesSourceTemplate
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 27:
						_Struct ApplyTemplate
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 28:
						_Struct GetQuotaUsed
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 29:
						_Struct GetQuotaPeakUsage
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 30:
						_Struct GetQuotaPeakUsageTime
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 31:
						_Struct ResetPeakUsage
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 32:
						_Struct RefreshUsageProperties
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmQuota method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{6CD6408A-AE60-463B-9EF1-E117534D69DC}":
			[Property.FSRMMethodName = "IFsrmAction::" + FSRMIFsrmActionMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmAction
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetId
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetActionType
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct GetRunLimitInterval
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct GetRunLimitInterval
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct Delete
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmAction method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{6879CAF9-6617-4484-8719-71C3D8645F94}":
			[Property.FSRMMethodName = "IFsrmReportScheduler::" + FSRMIFsrmReportSchedulerMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmReportScheduler
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct VerifyNamespaces
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct CreateScheduleTask
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct ModifyScheduleTask
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct DeleteScheduleTask
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmReportScheduler method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{F3637E80-5B22-4A2B-A637-BBB642B41CFC}":
			[Property.FSRMMethodName = "IFsrmFileScreenBase::" + FSRMIFsrmFileScreenBaseMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmFileScreenBase
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetId
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct PutDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct Delete
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct Commit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct GetBlockedFileGroups
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct PutBlockedFileGroups
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct GetFileScreenFlags
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct PutFileScreenFlags
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 16:
						_Struct CreateAction
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 17:
						_Struct EnumActions
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmFileScreenBase method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{39322A2D-38EE-4D0D-8095-421A80849A82}":
			[Property.FSRMMethodName = "IFsrmDerivedObjectsResult::" + FSRMIFsrmDerivedObjectsResultMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmDerivedObjectsResult
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetDerivedObjects
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetResults
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmDerivedObjectsResult method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{12937789-E247-4917-9C20-F3EE9C7EE783}":
			[Property.FSRMMethodName = "IFsrmActionCommand::" + FSRMIFsrmActionCommandMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmActionCommand
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetId
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetActionType
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct GetRunLimitInterval
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct GetRunLimitInterval
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct Delete
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct GetExecutablePath
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct PutExecutablePath
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct GetArguments
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct PutArguments
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 16:
						_Struct GetAccount
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 17:
						_Struct PutAccount
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 18:
						_Struct GetWorkingDirectory
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 19:
						_Struct PutWorkingDirectory
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 20:
						_Struct GetMonitorCommand
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 21:
						_Struct PutMonitorCommand
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 22:
						_Struct GetKillTimeout
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 23:
						_Struct PutKillTimeout
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 24:
						_Struct GetLogResult
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 25:
						_Struct PutLogResult
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmActionCommand method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{8BB68C7D-19D8-4FFB-809E-BE4FC1734014}":
			[Property.FSRMMethodName = "IFsrmQuotaManager::" + FSRMIFsrmQuotaManagerMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmQuotaManager
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetActionVariables
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetActionVariableDescriptions
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct CreateQuota
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct CreateAutoApplyQuota
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct GetQuota
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct GetAutoApplyQuota
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct GetRestrictiveQuota
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct EnumQuotas
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct EnumAutoApplyQuotas
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 16:
						_Struct EnumEffectiveQuotas
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 17:
						_Struct Scan
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 18:
						_Struct CreateQuotaCollection
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmQuotaManager method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{5F6325D3-CE88-4733-84C1-2D6AEFC5EA07}":
			[Property.FSRMMethodName = "IFsrmFileScreen::" + FSRMIFsrmFileScreenMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmFileScreen
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetId
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct PutDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct Delete
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct GetBlockedFileGroups
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct PutBlockedFileGroups
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct GetFileScreenFlags
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct PutFileScreenFlags
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 16:
						_Struct CreateAction
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 17:
						_Struct EnumActions
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct Commit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 18:
						_Struct GetPath
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 19:
						_Struct GetSourceTemplateName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 20:
						_Struct GetMatchesSourceTemplate
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 21:
						_Struct GetUserSid
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 22:
						_Struct GetUserAccount
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 23:
						_Struct ApplyTemplate
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmFileScreen method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{1BB617B8-3886-49DC-AF82-A6C90FA35DDA}":
			[Property.FSRMMethodName = "IFsrmMutableCollection::" + FSRMIFsrmMutableCollectionMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmMutableCollection
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct NewEnum
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct Item
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct Count
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct State
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct Cancel
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct WaitForCompletion
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct GetById
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct Add
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct Remove
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 16:
						_Struct RemoveById
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 17:
						_Struct Clone
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmMutableCollection method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{F82E5729-6ABA-4740-BFC7-C7F58F75FB7B}":
			[Property.FSRMMethodName = "IFsrmAutoApplyQuota::" + FSRMIFsrmAutoApplyQuotaMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmAutoApplyQuota
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetId
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct PutDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct Delete
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct GetQuotaLimit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct PutQuotaLimit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct GetQuotaFlags
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct PutQuotaFlags
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 16:
						_Struct GetThresholds
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 17:
						_Struct AddThreshold
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 18:
						_Struct DeleteThreshold
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 19:
						_Struct ModifyThreshold
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 20:
						_Struct CreateThresholdAction
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 21:
						_Struct EnumThresholdActions
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct Commit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 22:
						_Struct GetPath
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 23:
						_Struct GetUserSid
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 24:
						_Struct GetUserAccount
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 25:
						_Struct GetSourceTemplateName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 26:
						_Struct GetMatchesSourceTemplate
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 27:
						_Struct ApplyTemplate
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 28:
						_Struct GetExcludeFolders
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 29:
						_Struct PutExcludeFolders
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 30:
						_Struct CommitAndUpdateDerived
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmAutoApplyQuota method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{AD55F10B-5F11-4BE7-94EF-D9EE2E470DED}":
			[Property.FSRMMethodName = "IFsrmFileGroupImported::" + FSRMIFsrmFileGroupImportedMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmFileGroupImported
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetId
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct PutDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct Delete
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct Commit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct GetName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct PutName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct GetMembers
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct PutMembers
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 16:
						_Struct GetNonMembers
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 17:
						_Struct PutNonMembers
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 18:
						_Struct GetOverwriteOnCommit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 19:
						_Struct PutOverwriteOnCommit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmFileGroupImported method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{8276702F-2532-4839-89BF-4872609A2EA4}":
			[Property.FSRMMethodName = "IFsrmActionEmail2::" + FSRMIFsrmActionEmail2MethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmActionEmail2
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetId
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetActionType
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct GetRunLimitInterval
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct GetRunLimitInterval
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct Delete
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct GetMailFrom
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct PutMailFrom
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct GetMailReplyTo
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct PutMailReplyTo
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 16:
						_Struct GetMailTo
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 17:
						_Struct PutMailTo
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 18:
						_Struct GetMailCc
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 19:
						_Struct PutMailCc
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 20:
						_Struct GetMailBcc
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 21:
						_Struct PutMailBcc
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 22:
						_Struct GetMailSubject
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 23:
						_Struct PutMailSubject
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 24:
						_Struct GetMessageText
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 25:
						_Struct PutMessageText
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 26:
						_Struct GetAttachmentFileListSize
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 27:
						_Struct PutAttachmentFileListSize
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmActionEmail2 method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{A2EFAB31-295E-46BB-B976-E86D58B52E8B}":
			[Property.FSRMMethodName = "IFsrmQuotaTemplate::" + FSRMIFsrmQuotaTemplateMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmQuotaTemplate
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetId
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct PutDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct Delete
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct GetQuotaLimit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct PutQuotaLimit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct GetQuotaFlags
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 16:
						_Struct GetThresholds
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 17:
						_Struct AddThreshold
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 18:
						_Struct DeleteThreshold
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 19:
						_Struct ModifyThreshold
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 20:
						_Struct CreateThresholdAction
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 21:
						_Struct EnumThresholdActions
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct Commit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct PutQuotaFlags
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 22:
						_Struct GetName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 23:
						_Struct PutName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 24:
						_Struct CopyTemplate
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 25:
						_Struct CommitAndUpdateDerived
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmQuotaTemplate method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{426677D5-018C-485C-8A51-20B86D00BDC4}":
			[Property.FSRMMethodName = "IFsrmFileGroupManager::" + FSRMIFsrmFileGroupManagerMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmFileGroupManager
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct CreateFileGroup
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetFileGroup
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct EnumFileGroups
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct ExportFileGroups
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct ImportFileGroups
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmFileGroupManager method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{F411D4FD-14BE-4260-8C40-03B7C95E608A}":
			[Property.FSRMMethodName = "IFsrmSetting::" + FSRMIFsrmSettingMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmSetting
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetSmtpServer
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct PutSmtpServer
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct GetMailFrom
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct PutMailFrom
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct GetAdminEmail
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct PutAdminEmail
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct GetDisableCommandLine
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct PutDisableCommandLine
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct GetEnableScreeningAudit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 16:
						_Struct PutEnableScreeningAudit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 17:
						_Struct EmailTest
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 18:
						_Struct SetActionRunLimitInterval
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 19:
						_Struct GetActionRunLimitInterval
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmSetting method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{EDE0150F-E9A3-419C-877C-01FE5D24C5D3}":
			[Property.FSRMMethodName = "IFsrmPropertyDefinition::" + FSRMIFsrmPropertyDefinitionMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmPropertyDefinition
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetId
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct PutDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct Delete
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct Commit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct GetName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct PutName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct GetType
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct PutType
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 16:
						_Struct GetPossibleValues
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 17:
						_Struct PutPossibleValues
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 18:
						_Struct GetValueDescriptions
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 19:
						_Struct PutValueDescriptions
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmPropertyDefinition method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{0770687E-9F36-4D6F-8778-599D188461C9}":
			[Property.FSRMMethodName = "IFsrmFileManagementJob::" + FSRMIFsrmFileManagementJobMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmFileManagementJob
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetId
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct PutDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct Delete
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct Commit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct GetName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct PutName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct GetNamespaceRoots
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct PutNamespaceRoots
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 16:
						_Struct GetEnabled
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 17:
						_Struct PutEnabled
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 18:
						_Struct GetOperationType
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 19:
						_Struct PutOperationType
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 20:
						_Struct GetExpirationDirectory
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 21:
						_Struct PutExpirationDirectory
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 22:
						_Struct GetCustomAction
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 23:
						_Struct GetNotifications
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 24:
						_Struct GetLogging
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 25:
						_Struct PutLogging
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 26:
						_Struct GetReportEnabled
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 27:
						_Struct PutReportEnabled
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 28:
						_Struct GetFormats
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 29:
						_Struct PutFormats
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 30:
						_Struct GetMailTo
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 31:
						_Struct PutMailTo
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 32:
						_Struct GetDaysSinceFileCreated
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 33:
						_Struct PutDaysSinceFileCreated
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 34:
						_Struct GetDaysSinceFileLastAccessed
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 35:
						_Struct PutDaysSinceFileLastAccessed
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 36:
						_Struct GetDaysSinceFileLastModified
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 37:
						_Struct PutDaysSinceFileLastModified
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 38:
						_Struct GetPropertyConditions
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 39:
						_Struct GetFromDate
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 40:
						_Struct PutFromDate
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 41:
						_Struct GetTask
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 42:
						_Struct PutTask
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 43:
						_Struct GetRunningStatus
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 44:
						_Struct GetLastError
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 45:
						_Struct GetLastReportPathWithoutExtension
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 46:
						_Struct GetLastRun
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 47:
						_Struct Run
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 48:
						_Struct WaitForCompletion
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 49:
						_Struct Cancel
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 50:
						_Struct AddNotification
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 51:
						_Struct DeleteNotification
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 52:
						_Struct ModifyNotification
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 53:
						_Struct CreateNotificationAction
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 54:
						_Struct EnumNotificationActions
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 55:
						_Struct CreatePropertyCondition
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 56:
						_Struct CreateCustomAction
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmFileManagementJob method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{4A73FEE4-4102-4FCC-9FFB-38614F9EE768}":
			[Property.FSRMMethodName = "IFsrmProperty::" + FSRMIFsrmPropertyMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmProperty
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 12:
						_Struct GetName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct GetValue
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct GetSources
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct GetPropertyFlags
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmProperty method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{38E87280-715C-4C7D-A280-EA1651A19FEF}":
			[Property.FSRMMethodName = "IFsrmReportJob::" + FSRMIFsrmReportJobMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmReportJob
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetId
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct PutDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct Delete
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct Commit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct GetTask
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct PutTask
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct GetNamespaceRoots
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct PutNamespaceRoots
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 16:
						_Struct GetFormats
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 17:
						_Struct PutFormats
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 18:
						_Struct GetMailTo
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 19:
						_Struct PutMailTo
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 20:
						_Struct GetRunningStatus
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 21:
						_Struct GetLastRun
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 22:
						_Struct GetLastError
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 23:
						_Struct GetLastGeneratedInDirectory
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 24:
						_Struct EnumReports
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 25:
						_Struct CreateReport
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 26:
						_Struct Run
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 27:
						_Struct WaitForCompletion
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 28:
						_Struct Cancel
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmReportJob method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{AFC052C2-5315-45AB-841B-C6DB0E120148}":
			[Property.FSRMMethodName = "IFsrmClassificationRule::" + FSRMIFsrmClassificationRuleMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmClassificationRule
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetId
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct PutDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct Delete
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct GetName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct PutName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct GetRuleType
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct GetModuleDefinitionName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 16:
						_Struct PutModuleDefinitionName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 17:
						_Struct GetNamespaceRoots
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 18:
						_Struct PutNamespaceRoots
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 19:
						_Struct GetRuleFlags
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 20:
						_Struct PutRuleFlags
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 21:
						_Struct GetParameters
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 22:
						_Struct PutParameters
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 23:
						_Struct GetLastModified
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct Commit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 24:
						_Struct GetExecutionOption
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 25:
						_Struct PutExecutionOption
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 26:
						_Struct GetPropertyAffected
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 27:
						_Struct PutPropertyAffected
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 28:
						_Struct GetValue
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 29:
						_Struct PutValue
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmClassificationRule method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{205BEBF8-DD93-452A-95A6-32B566B35828}":
			[Property.FSRMMethodName = "IFsrmFileScreenTemplate::" + FSRMIFsrmFileScreenTemplateMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmFileScreenTemplate
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetId
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct PutDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct Delete
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct GetBlockedFileGroups
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct PutBlockedFileGroups
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct GetFileScreenFlags
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct PutFileScreenFlags
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 16:
						_Struct CreateAction
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 17:
						_Struct EnumActions
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct Commit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 18:
						_Struct GetName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 19:
						_Struct PutName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 20:
						_Struct CopyTemplate
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 21:
						_Struct CommitAndUpdateDerived
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmFileScreenTemplate method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{22BCEF93-4A3F-4183-89F9-2F8B8A628AEE}":
			[Property.FSRMMethodName = "IFsrmObject::" + FSRMIFsrmObjectMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmObject
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetId
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct PutDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct Delete
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct Commit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmObject method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{CFE36CBA-1949-4E74-A14F-F1D580CEAF13}":
			[Property.FSRMMethodName = "IFsrmFileScreenTemplateManager::" + FSRMIFsrmFileScreenTemplateManagerMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmFileScreenTemplateManager
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct CreateTemplate
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetTemplate
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct EnumTemplates
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct ExportTemplates
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct ImportTemplates
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmFileScreenTemplateManager method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{42DC3511-61D5-48AE-B6DC-59FC00C0A8D6}":
			[Property.FSRMMethodName = "IFsrmQuotaObject::" + FSRMIFsrmQuotaObjectMethodNameTable( Property.MSRPCOpnum )]
			_Struct IFsrmQuotaObject
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetId
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct PutDescription
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct Delete
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct GetQuotaLimit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct PutQuotaLimit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct GetQuotaFlags
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct PutQuotaFlags
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 16:
						_Struct GetThresholds
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 17:
						_Struct AddThreshold
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 18:
						_Struct DeleteThreshold
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 19:
						_Struct ModifyThreshold
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 20:
						_Struct CreateThresholdAction
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 21:
						_Struct EnumThresholdActions
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct Commit
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 22:
						_Struct GetPath
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 23:
						_Struct GetUserSid
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 24:
						_Struct GetUserAccount
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 25:
						_Struct GetSourceTemplateName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 26:
						_Struct GetMatchesSourceTemplate
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 27:
						_Struct ApplyTemplate
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("FSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "FSRM", "Unknown IFsrmQuotaObject method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
	}
}

Table FSRMIFsrmClassificationManagerMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 7: "GetClassificationReportFormats";
		Case 8: "PutClassificationReportFormats";
		Case 9: "GetLogging";
		Case 10: "PutLogging";
		Case 11: "GetClassificationReportMailTo";
		Case 12: "PutClassificationReportMailTo";
		Case 13: "GetClassificationReportEnabled";
		Case 14: "PutClassificationReportEnabled";
		Case 15: "GetClassificationLastReportPathWithoutExtension";
		Case 16: "GetClassificationLastError";
		Case 17: "GetClassificationRunningStatus";
		Case 18: "EnumPropertyDefinitions";
		Case 19: "CreatePropertyDefinition";
		Case 20: "GetPropertyDefinition";
		Case 21: "EnumRules";
		Case 22: "CreateRule";
		Case 23: "GetRule";
		Case 24: "EnumModuleDefinitions";
		Case 25: "Opnum25Reserved";
		Case 26: "Opnum26Reserved";
		Case 27: "RunClassification";
		Case 28: "WaitForClassificationCompletion";
		Case 29: "CancelClassification";
		Case 30: "Opnum30Reserved";
		Case 31: "Opnum31Reserved";
		Case 32: "Opnum32Reserved";
		Case 33: "Opnum33Reserved";
		Default: "unknown";
	}
}

Table FSRMIFsrmActionEventLogMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 12: "GetEventType";
		Case 13: "PutEventType";
		Case 14: "GetMessageText";
		Case 15: "PutMessageText";
		Default: "IFsrmAction::" + FSRMIFsrmActionMethodNameTable( Opnum );
	}
}

Table FSRMIFsrmActionEmailMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 12: "GetMailFrom";
		Case 13: "PutMailFrom";
		Case 14: "GetMailReplyTo";
		Case 15: "PutMailReplyTo";
		Case 16: "GetMailTo";
		Case 17: "PutMailTo";
		Case 18: "GetMailCc";
		Case 19: "PutMailCc";
		Case 20: "GetMailBcc";
		Case 21: "PutMailBcc";
		Case 22: "GetMailSubject";
		Case 23: "PutMailSubject";
		Case 24: "GetMessageText";
		Case 25: "PutMessageText";
		Default: "IFsrmAction::" + FSRMIFsrmActionMethodNameTable( Opnum );
	}
}

Table FSRMIFsrmPropertyConditionMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 7: "GetName";
		Case 8: "PutName";
		Case 9: "GetType";
		Case 10: "PutType";
		Case 11: "GetValue";
		Case 12: "PutValue";
		Case 13: "Delete";
		Default: "unknown";
	}
}

Table FSRMIFsrmFileScreenTemplateImportedMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 22: "GetOverwriteOnCommit";
		Case 23: "PutOverwriteOnCommit";
		Default: "IFsrmFileScreenTemplate::" + FSRMIFsrmFileScreenTemplateMethodNameTable( Opnum );
	}
}

Table FSRMIFsrmCollectionMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 7: "_NewEnum";
		Case 8: "Item";
		Case 9: "Count";
		Case 10: "State";
		Case 11: "Cancel";
		Case 12: "WaitForCompletion";
		Case 13: "GetById";
		Default: "unknown";
	}
}

Table FSRMIFsrmReportManagerMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 7: "EnumReportJobs";
		Case 8: "CreateReportJob";
		Case 9: "GetReportJob";
		Case 10: "GetOutputDirectory";
		Case 11: "SetOutputDirectory";
		Case 12: "IsFilterValidForReportType";
		Case 13: "GetDefaultFilter";
		Case 14: "SetDefaultFilter";
		Case 15: "GetReportSizeLimit";
		Case 16: "SetReportSizeLimit";
		Default: "unknown";
	}
}

Table FSRMIFsrmQuotaBaseMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 11: "Commit";
		Case 12: "GetQuotaLimit";
		Case 13: "PutQuotaLimit";
		Case 14: "GetQuotaFlags";
		Case 15: "PutQuotaFlags";
		Case 16: "GetThresholds";
		Case 17: "AddThreshold";
		Case 18: "DeleteThreshold";
		Case 19: "ModifyThreshold";
		Case 20: "CreateThresholdAction";
		Case 21: "EnumThresholdActions";
		Default: "IFsrmObject::" + FSRMIFsrmObjectMethodNameTable( Opnum );
	}
}

Table FSRMIFsrmReportMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 7: "GetType";
		Case 8: "GetName";
		Case 9: "PutName";
		Case 10: "GetDescription";
		Case 11: "PutDescription";
		Case 12: "GetLastGeneratedFileNamePrefix";
		Case 13: "GetFilter";
		Case 14: "SetFilter";
		Case 15: "Delete";
		Default: "unknown";
	}
}

Table FSRMIFsrmActionReportMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 12: "GetReportTypes";
		Case 13: "PutReportTypes";
		Case 14: "GetMailTo";
		Case 15: "PutMailTo";
		Default: "IFsrmAction::" + FSRMIFsrmActionMethodNameTable( Opnum );
	}
}

Table FSRMIFsrmQuotaTemplateManagerMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 7: "CreateTemplate";
		Case 8: "GetTemplate";
		Case 9: "EnumTemplates";
		Case 10: "ExportTemplates";
		Case 11: "ImportTemplates";
		Default: "unknown";
	}
}

Table FSRMIFsrmFileGroupMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 11: "Commit";
		Case 12: "GetName";
		Case 13: "PutName";
		Case 14: "GetMembers";
		Case 15: "PutMembers";
		Case 16: "GetNonMembers";
		Case 17: "PutNonMembers";
		Default: "IFsrmObject::" + FSRMIFsrmObjectMethodNameTable( Opnum );
	}
}

Table FSRMIFsrmFileScreenManagerMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 7: "ActionVariables";
		Case 8: "ActionVariableDescriptions";
		Case 9: "CreateFileScreen";
		Case 10: "GetFileScreen";
		Case 11: "EnumFileScreens";
		Case 12: "CreateFileScreenException";
		Case 13: "GetFileScreenException";
		Case 14: "EnumFileScreenExceptions";
		Case 15: "CreateFileScreenCollection";
		Default: "unknown";
	}
}

Table FSRMIFsrmFileScreenExceptionMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 11: "Commit";
		Case 12: "GetPath";
		Case 13: "GetAllowedFileGroups";
		Case 14: "PutAllowedFileGroups";
		Default: "IFsrmObject::" + FSRMIFsrmObjectMethodNameTable( Opnum );
	}
}

Table FSRMIFsrmFileManagementJobManagerMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 7: "EnumFileManagementJobs";
		Case 8: "CreateFileManagementJob";
		Case 9: "GetFileManagementJob";
		Default: "unknown";
	}
}

Table FSRMIFsrmPathMapperMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 7: "GetSharePathsForLocalPath";
		Default: "unknown";
	}
}

Table FSRMIFsrmQuotaTemplateImportedMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 16: "GetOverwriteOnCommit";
		Case 17: "PutOverwriteOnCommit";
		Default: "IFsrmQuotaTemplate::" + FSRMIFsrmQuotaTemplateMethodNameTable( Opnum );
	}
}

Table FSRMIFsrmExportImportMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 7: "ExportFileGroups";
		Case 8: "ImportFileGroups";
		Case 9: "ExportFileScreenTemplates";
		Case 10: "ImportFileScreenTemplates";
		Case 11: "ExportQuotaTemplates";
		Case 12: "ImportQuotaTemplates";
		Default: "unknown";
	}
}

Table FSRMIFsrmRuleMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 12: "GetName";
		Case 13: "PutName";
		Case 14: "GetRuleType";
		Case 15: "GetModuleDefinitionName";
		Case 16: "PutModuleDefinitionName";
		Case 17: "GetNamespaceRoots";
		Case 18: "PutNamespaceRoots";
		Case 19: "GetRuleFlags";
		Case 20: "PutRuleFlags";
		Case 21: "GetParameters";
		Case 22: "PutParameters";
		Case 23: "GetLastModified";
		Default: "IFsrmObject::" + FSRMIFsrmObjectMethodNameTable( Opnum );
	}
}

Table FSRMIFsrmClassifierModuleDefinitionMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 11: "Commit";
		Case 31: "GetPropertiesAffected";
		Case 32: "Opnum32Reserved";
		Case 33: "Opnum33Reserved";
		Case 34: "Opnum34Reserved";
		Case 35: "GetNeedsExplicitValue";
		Case 36: "Opnum36Reserved";
		Default: "IFsrmPipelineModuleDefinition::" + FSRMIFsrmPipelineModuleDefinitionMethodNameTable( Opnum );
	}
}

Table FSRMIFsrmPipelineModuleDefinitionMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 12: "Opnum12Reserved";
		Case 13: "Opnum13Reserved";
		Case 14: "GetName";
		Case 15: "Opnum15Reserved";
		Case 16: "Opnum16Reserved";
		Case 17: "Opnum17Reserved";
		Case 18: "Opnum18Reserved";
		Case 19: "Opnum19Reserved";
		Case 20: "GetModuleType";
		Case 21: "GetEnabled";
		Case 22: "Opnum22Reserved";
		Case 23: "Opnum23Reserved";
		Case 24: "Opnum24Reserved";
		Case 25: "Opnum25Reserved";
		Case 26: "Opnum26Reserved";
		Case 27: "Opnum27Reserved";
		Case 28: "Opnum28Reserved";
		Case 29: "Opnum29Reserved";
		Case 30: "Opnum30Reserved";
		Default: "IFsrmObject::" + FSRMIFsrmObjectMethodNameTable( Opnum );
	}
}

Table FSRMIFsrmCommittableCollectionMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 18: "Commit";
		Default: "IFsrmMutableCollection::" + FSRMIFsrmMutableCollectionMethodNameTable( Opnum );
	}
}

Table FSRMIFsrmQuotaMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 28: "GetQuotaUsed";
		Case 29: "GetQuotaPeakUsage";
		Case 30: "GetQuotaPeakUsageTime";
		Case 31: "ResetPeakUsage";
		Case 32: "RefreshUsageProperties";
		Default: "IFsrmQuotaObject::" + FSRMIFsrmQuotaObjectMethodNameTable( Opnum );
	}
}

Table FSRMIFsrmActionMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 7: "GetId";
		Case 8: "GetActionType";
		Case 9: "GetRunLimitInterval";
		Case 10: "GetRunLimitInterval";
		Case 11: "Delete";
		Default: "unknown";
	}
}

Table FSRMIFsrmReportSchedulerMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 7: "VerifyNamespaces";
		Case 8: "CreateScheduleTask";
		Case 9: "ModifyScheduleTask";
		Case 10: "DeleteScheduleTask";
		Default: "unknown";
	}
}

Table FSRMIFsrmFileScreenBaseMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 12: "GetBlockedFileGroups";
		Case 13: "PutBlockedFileGroups";
		Case 14: "GetFileScreenFlags";
		Case 15: "PutFileScreenFlags";
		Case 16: "CreateAction";
		Case 17: "EnumActions";
		Default: "IFsrmObject::" + FSRMIFsrmObjectMethodNameTable( Opnum );
	}
}

Table FSRMIFsrmDerivedObjectsResultMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 7: "GetDerivedObjects";
		Case 8: "GetResults";
		Default: "unknown";
	}
}

Table FSRMIFsrmActionCommandMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 12: "GetExecutablePath";
		Case 13: "PutExecutablePath";
		Case 14: "GetArguments";
		Case 15: "PutArguments";
		Case 16: "GetAccount";
		Case 17: "PutAccount";
		Case 18: "GetWorkingDirectory";
		Case 19: "PutWorkingDirectory";
		Case 20: "GetMonitorCommand";
		Case 21: "PutMonitorCommand";
		Case 22: "GetKillTimeout";
		Case 23: "PutKillTimeout";
		Case 24: "GetLogResult";
		Case 25: "PutLogResult";
		Default: "IFsrmAction::" + FSRMIFsrmActionMethodNameTable( Opnum );
	}
}

Table FSRMIFsrmQuotaManagerMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 7: "GetActionVariables";
		Case 8: "GetActionVariableDescriptions";
		Case 9: "CreateQuota";
		Case 10: "CreateAutoApplyQuota";
		Case 11: "GetQuota";
		Case 12: "GetAutoApplyQuota";
		Case 13: "GetRestrictiveQuota";
		Case 14: "EnumQuotas";
		Case 15: "EnumAutoApplyQuotas";
		Case 16: "EnumEffectiveQuotas";
		Case 17: "Scan";
		Case 18: "CreateQuotaCollection";
		Default: "unknown";
	}
}

Table FSRMIFsrmFileScreenMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 11: "Commit";
		Case 18: "GetPath";
		Case 19: "GetSourceTemplateName";
		Case 20: "GetMatchesSourceTemplate";
		Case 21: "GetUserSid";
		Case 22: "GetUserAccount";
		Case 23: "ApplyTemplate";
		Default: "IFsrmFileScreenBase::" + FSRMIFsrmFileScreenBaseMethodNameTable( Opnum );
	}
}

Table FSRMIFsrmMutableCollectionMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 14: "Add";
		Case 15: "Remove";
		Case 16: "RemoveById";
		Case 17: "Clone";
		Default: "IFsrmCollection::" + FSRMIFsrmCollectionMethodNameTable( Opnum );
	}
}

Table FSRMIFsrmAutoApplyQuotaMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 28: "GetExcludeFolders";
		Case 29: "PutExcludeFolders";
		Case 30: "CommitAndUpdateDerived";
		Default: "IFsrmQuotaObject::" + FSRMIFsrmQuotaObjectMethodNameTable( Opnum );
	}
}

Table FSRMIFsrmFileGroupImportedMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 18: "GetOverwriteOnCommit";
		Case 19: "PutOverwriteOnCommit";
		Default: "IFsrmFileGroup::" + FSRMIFsrmFileGroupMethodNameTable( Opnum );
	}
}

Table FSRMIFsrmActionEmail2MethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 26: "GetAttachmentFileListSize";
		Case 27: "PutAttachmentFileListSize";
		Default: "IFsrmActionEmail::" + FSRMIFsrmActionEmailMethodNameTable( Opnum );
	}
}

Table FSRMIFsrmQuotaTemplateMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 11: "Commit";
		Case 15: "PutQuotaFlags";
		Case 22: "GetName";
		Case 23: "PutName";
		Case 24: "CopyTemplate";
		Case 25: "CommitAndUpdateDerived";
		Default: "IFsrmQuotaBase::" + FSRMIFsrmQuotaBaseMethodNameTable( Opnum );
	}
}

Table FSRMIFsrmFileGroupManagerMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 7: "CreateFileGroup";
		Case 8: "GetFileGroup";
		Case 9: "EnumFileGroups";
		Case 10: "ExportFileGroups";
		Case 11: "ImportFileGroups";
		Default: "unknown";
	}
}

Table FSRMIFsrmSettingMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 7: "GetSmtpServer";
		Case 8: "PutSmtpServer";
		Case 9: "GetMailFrom";
		Case 10: "PutMailFrom";
		Case 11: "GetAdminEmail";
		Case 12: "PutAdminEmail";
		Case 13: "GetDisableCommandLine";
		Case 14: "PutDisableCommandLine";
		Case 15: "GetEnableScreeningAudit";
		Case 16: "PutEnableScreeningAudit";
		Case 17: "EmailTest";
		Case 18: "SetActionRunLimitInterval";
		Case 19: "GetActionRunLimitInterval";
		Default: "unknown";
	}
}

Table FSRMIFsrmPropertyDefinitionMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 11: "Commit";
		Case 12: "GetName";
		Case 13: "PutName";
		Case 14: "GetType";
		Case 15: "PutType";
		Case 16: "GetPossibleValues";
		Case 17: "PutPossibleValues";
		Case 18: "GetValueDescriptions";
		Case 19: "PutValueDescriptions";
		Default: "IFsrmObject::" + FSRMIFsrmObjectMethodNameTable( Opnum );
	}
}

Table FSRMIFsrmFileManagementJobMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 11: "Commit";
		Case 12: "GetName";
		Case 13: "PutName";
		Case 14: "GetNamespaceRoots";
		Case 15: "PutNamespaceRoots";
		Case 16: "GetEnabled";
		Case 17: "PutEnabled";
		Case 18: "GetOperationType";
		Case 19: "PutOperationType";
		Case 20: "GetExpirationDirectory";
		Case 21: "PutExpirationDirectory";
		Case 22: "GetCustomAction";
		Case 23: "GetNotifications";
		Case 24: "GetLogging";
		Case 25: "PutLogging";
		Case 26: "GetReportEnabled";
		Case 27: "PutReportEnabled";
		Case 28: "GetFormats";
		Case 29: "PutFormats";
		Case 30: "GetMailTo";
		Case 31: "PutMailTo";
		Case 32: "GetDaysSinceFileCreated";
		Case 33: "PutDaysSinceFileCreated";
		Case 34: "GetDaysSinceFileLastAccessed";
		Case 35: "PutDaysSinceFileLastAccessed";
		Case 36: "GetDaysSinceFileLastModified";
		Case 37: "PutDaysSinceFileLastModified";
		Case 38: "GetPropertyConditions";
		Case 39: "GetFromDate";
		Case 40: "PutFromDate";
		Case 41: "GetTask";
		Case 42: "PutTask";
		Case 43: "GetRunningStatus";
		Case 44: "GetLastError";
		Case 45: "GetLastReportPathWithoutExtension";
		Case 46: "GetLastRun";
		Case 47: "Run";
		Case 48: "WaitForCompletion";
		Case 49: "Cancel";
		Case 50: "AddNotification";
		Case 51: "DeleteNotification";
		Case 52: "ModifyNotification";
		Case 53: "CreateNotificationAction";
		Case 54: "EnumNotificationActions";
		Case 55: "CreatePropertyCondition";
		Case 56: "CreateCustomAction";
		Default: "IFsrmObject::" + FSRMIFsrmObjectMethodNameTable( Opnum );
	}
}

Table FSRMIFsrmPropertyMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 12: "GetName";
		Case 13: "GetValue";
		Case 14: "GetSources";
		Case 15: "GetPropertyFlags";
		Default: "unknown";
	}
}

Table FSRMIFsrmReportJobMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 11: "Commit";
		Case 12: "GetTask";
		Case 13: "PutTask";
		Case 14: "GetNamespaceRoots";
		Case 15: "PutNamespaceRoots";
		Case 16: "GetFormats";
		Case 17: "PutFormats";
		Case 18: "GetMailTo";
		Case 19: "PutMailTo";
		Case 20: "GetRunningStatus";
		Case 21: "GetLastRun";
		Case 22: "GetLastError";
		Case 23: "GetLastGeneratedInDirectory";
		Case 24: "EnumReports";
		Case 25: "CreateReport";
		Case 26: "Run";
		Case 27: "WaitForCompletion";
		Case 28: "Cancel";
		Default: "IFsrmObject::" + FSRMIFsrmObjectMethodNameTable( Opnum );
	}
}

Table FSRMIFsrmClassificationRuleMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 11: "Commit";
		Case 24: "GetExecutionOption";
		Case 25: "PutExecutionOption";
		Case 26: "GetPropertyAffected";
		Case 27: "PutPropertyAffected";
		Case 28: "GetValue";
		Case 29: "PutValue";
		Default: "IFsrmRule::" + FSRMIFsrmRuleMethodNameTable( Opnum );
	}
}

Table FSRMIFsrmFileScreenTemplateMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 11: "Commit";
		Case 18: "GetName";
		Case 19: "PutName";
		Case 20: "CopyTemplate";
		Case 21: "CommitAndUpdateDerived";
		Default: "IFsrmFileScreenBase::" + FSRMIFsrmFileScreenBaseMethodNameTable( Opnum );
	}
}

Table FSRMIFsrmObjectMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 7: "GetId";
		Case 8: "GetDescription";
		Case 9: "PutDescription";
		Case 10: "Delete";
		Case 11: "Commit";
		Default: "unknown";
	}
}

Table FSRMIFsrmFileScreenTemplateManagerMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 7: "CreateTemplate";
		Case 8: "GetTemplate";
		Case 9: "EnumTemplates";
		Case 10: "ExportTemplates";
		Case 11: "ImportTemplates";
		Default: "unknown";
	}
}

Table FSRMIFsrmQuotaObjectMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 11: "Commit";
		Case 22: "GetPath";
		Case 23: "GetUserSid";
		Case 24: "GetUserAccount";
		Case 25: "GetSourceTemplateName";
		Case 26: "GetMatchesSourceTemplate";
		Case 27: "ApplyTemplate";
		Default: "IFsrmQuotaBase::" + FSRMIFsrmQuotaBaseMethodNameTable( Opnum );
	}
}


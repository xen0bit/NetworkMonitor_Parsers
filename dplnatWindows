//#  (c) 2009 CodePlex Foundation
//#
//#  Title:                  DirectPlay 8 Protocol: NAT Locator
//#
//#  Details:                
//#
//#  Microsoft References:   [MC-DPLNAT]: DirectPlay 8 Protocol: NAT Locator Specification
//#
//#  Comments:               Parser Framework: PAC v2.1.1991.0
//#
//#  Revision Class and Date:Major, 3/12/2010
//#
//####

Protocol DPLNAT = DPDXSummary
{
	Switch( UINT8( Framedata, Offset ) )
	{
		Case 0x05: [DPDXSummary = this.ToString] DPLNATPathTest PathTest;
		Case 0x06: [DPDXSummary = this.ToString] DPLNATNatResolverQuery NatResolverQuery;
		Case 0x07: [DPDXSummary = this.ToString] DPLNATNatResolverResponse NatResolverResponse;
	}
}

//	2.2.1 PATHTESTKEYDATA is a pseudo-structure

//
//	2.2.2 PATH_TEST 
//
struct DPLNATPathTest = "Path Test message type"
{
	UINT8 Command = MustBeSetToTable(this, "0x05: PATH_TEST_DATA_KIN - Path Test message type");
	UINT16 MessageID;
	UINT64 UllKey;
}

//
//	2.2.3 NAT_RESOLVER_QUERY
//
struct DPLNATNatResolverQuery = "NAT Resolver Query message type"
{
	UINT8 Command = MustBeSetToTable(this, "0x06: NAT_RESOLVER_QUERY_DATA_KIND - NAT Resolver Query message type");
	UINT16 MessageID;
	UINT32 SourceID;
	Blob(FrameLength - FrameOffset) UserData;
}

//
//	2.2.4 NAT_RESOLVER_RESPONSE
//
struct DPLNATNatResolverResponse = "NAT Resolver Response message type"
{
	UINT8 Command = MustBeSetToTable(this, "0x07: NAT_RESOLVER_RESPONSE_DATA_KIND - NAT Resolver Response message type");
	UINT16 MessageIDEcho;
	UINT32 SourceIDEcho;
	IPv4Address IPv4Address;
	UINT16 Port;
}
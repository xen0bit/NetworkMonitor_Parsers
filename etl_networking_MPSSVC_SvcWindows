//#  (c) 2009 CodePlex Foundation
//#
//#  Title:                  networking-MPSSVC-Svc(firewall)
//#
//#  Details:                
//#
//#  Public References:      networking-MPSSVC-Svc.man
//#
//#  Comments:               
//#
//#  Revision Class and Date:Minor, 4/1/2009
//#
//####
[RegisterBefore(NetEvent.UserData, MicrosoftWindowsMPSSRV, "{5444519f-2484-45a2-991e-953e4b54c8e0}")]
Protocol MPSSVC_MicrosoftWindowsMPSSRV = property.ETLSummary
{
	[BuildConversationWithParent, conversation.ConversationDescription = ""]
	switch(property.EventID)
	{
		case 101: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Start_Begin MPS_SVC_Start_Begin;
		case 102: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Start_End MPS_SVC_Start_End;
		case 103: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Stop_Begin MPS_SVC_Stop_Begin;
		case 104: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Stop_End MPS_SVC_Stop_End;
		case 105: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Audit_Initialize_Begin MPS_SVC_Audit_Initialize_Begin;
		case 106: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Audit_Initialize_End MPS_SVC_Audit_Initialize_End;
		case 107: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Audit_Shutdown_Begin MPS_SVC_Audit_Shutdown_Begin;
		case 108: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Audit_Shutdown_End MPS_SVC_Audit_Shutdown_End;
		case 113: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_AuthApps_Initialize_Begin MPS_SVC_AuthApps_Initialize_Begin;
		case 114: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_AuthApps_Initialize_End MPS_SVC_AuthApps_Initialize_End;
		case 115: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_AuthApps_Shutdown_Begin MPS_SVC_AuthApps_Shutdown_Begin;
		case 116: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_AuthApps_Shutdown_End MPS_SVC_AuthApps_Shutdown_End;
		case 117: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Notify_Initialize_Begin MPS_SVC_Notify_Initialize_Begin;
		case 118: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Notify_Initialize_End MPS_SVC_Notify_Initialize_End;
		case 119: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Notify_Shutdown_Begin MPS_SVC_Notify_Shutdown_Begin;
		case 120: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Notify_Shutdown_End MPS_SVC_Notify_Shutdown_End;
		case 121: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_DynPorts_Initialize_Begin MPS_SVC_DynPorts_Initialize_Begin;
		case 122: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_DynPorts_Initialize_End MPS_SVC_DynPorts_Initialize_End;
		case 123: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_DynPorts_Shutdown_Begin MPS_SVC_DynPorts_Shutdown_Begin;
		case 124: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_DynPorts_Shutdown_End MPS_SVC_DynPorts_Shutdown_End;
		case 125: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_ChangeSource_Initialize_Begin MPS_SVC_ChangeSource_Initialize_Begin;
		case 126: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_ChangeSource_Initialize_End MPS_SVC_ChangeSource_Initialize_End;
		case 127: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_ChangeSource_Shutdown_Begin MPS_SVC_ChangeSource_Shutdown_Begin;
		case 128: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_ChangeSource_Shutdown_End MPS_SVC_ChangeSource_Shutdown_End;
		case 129: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Writer_Initialize_Begin MPS_SVC_Writer_Initialize_Begin;
		case 130: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Writer_Initialize_End MPS_SVC_Writer_Initialize_End;
		case 131: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Writer_Shutdown_Begin MPS_SVC_Writer_Shutdown_Begin;
		case 132: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Writer_Shutdown_End MPS_SVC_Writer_Shutdown_End;
		case 133: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Logger_Initialize_Begin MPS_SVC_Logger_Initialize_Begin;
		case 134: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Logger_Initialize_End MPS_SVC_Logger_Initialize_End;
		case 135: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Logger_Shutdown_Begin MPS_SVC_Logger_Shutdown_Begin;
		case 136: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Logger_Shutdown_End MPS_SVC_Logger_Shutdown_End;
		case 137: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_DynDataNLA1stPhase_Initialize_Begin MPS_SVC_DynDataNLA1stPhase_Initialize_Begin;
		case 138: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_DynDataNLA1stPhase_Initialize_End MPS_SVC_DynDataNLA1stPhase_Initialize_End;
		case 139: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_DynDataNLA1stPhase_Shutdown_Begin MPS_SVC_DynDataNLA1stPhase_Shutdown_Begin;
		case 140: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_DynDataNLA1stPhase_Shutdown_End MPS_SVC_DynDataNLA1stPhase_Shutdown_End;
		case 141: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_ProfileMgr_Initialize_Begin MPS_SVC_ProfileMgr_Initialize_Begin;
		case 142: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_ProfileMgr_Initialize_End MPS_SVC_ProfileMgr_Initialize_End;
		case 143: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_ProfileMgr_Shutdown_Begin MPS_SVC_ProfileMgr_Shutdown_Begin;
		case 144: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_ProfileMgr_Shutdown_End MPS_SVC_ProfileMgr_Shutdown_End;
		case 145: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Upcall2ndPhase_Initialize_Begin MPS_SVC_Upcall2ndPhase_Initialize_Begin;
		case 146: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Upcall2ndPhase_Initialize_End MPS_SVC_Upcall2ndPhase_Initialize_End;
		case 147: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Upcall2ndPhase_Shutdown_Begin MPS_SVC_Upcall2ndPhase_Shutdown_Begin;
		case 148: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Upcall2ndPhase_Shutdown_End MPS_SVC_Upcall2ndPhase_Shutdown_End;
		case 149: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_RpcAPIs_Initialize_Begin MPS_SVC_RpcAPIs_Initialize_Begin;
		case 150: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_RpcAPIs_Initialize_End MPS_SVC_RpcAPIs_Initialize_End;
		case 151: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_RpcAPIs_Shutdown_Begin MPS_SVC_RpcAPIs_Shutdown_Begin;
		case 152: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_RpcAPIs_Shutdown_End MPS_SVC_RpcAPIs_Shutdown_End;
		case 153: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_ResrcIndicationAPIs_Initialize_Begin MPS_SVC_ResrcIndicationAPIs_Initialize_Begin;
		case 154: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_ResrcIndicationAPIs_Initialize_End MPS_SVC_ResrcIndicationAPIs_Initialize_End;
		case 155: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_ResrcIndicationAPIs_Shutdown_Begin MPS_SVC_ResrcIndicationAPIs_Shutdown_Begin;
		case 156: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_ResrcIndicationAPIs_Shutdown_End MPS_SVC_ResrcIndicationAPIs_Shutdown_End;
		case 157: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_GPMon_Initialize_Begin MPS_SVC_GPMon_Initialize_Begin;
		case 158: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_GPMon_Initialize_End MPS_SVC_GPMon_Initialize_End;
		case 159: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_GPMon_Shutdown_Begin MPS_SVC_GPMon_Shutdown_Begin;
		case 160: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_GPMon_Shutdown_End MPS_SVC_GPMon_Shutdown_End;
		case 161: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_DynDataNLA2ndPhase_Initialize_Begin MPS_SVC_DynDataNLA2ndPhase_Initialize_Begin;
		case 162: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_DynDataNLA2ndPhase_Initialize_End MPS_SVC_DynDataNLA2ndPhase_Initialize_End;
		case 163: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_DynDataNLA2ndPhase_Shutdown_Begin MPS_SVC_DynDataNLA2ndPhase_Shutdown_Begin;
		case 164: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_DynDataNLA2ndPhase_Shutdown_End MPS_SVC_DynDataNLA2ndPhase_Shutdown_End;
		case 165: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_ServiceSignalReady_Begin MPS_SVC_ServiceSignalReady_Begin;
		case 166: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_ServiceSignalReady_End MPS_SVC_ServiceSignalReady_End;
		case 167: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Empty_Shutdown_Begin MPS_SVC_Empty_Shutdown_Begin;
		case 168: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Empty_Shutdown_End MPS_SVC_Empty_Shutdown_End;
		case 169: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Products_Initialize_Begin MPS_SVC_Products_Initialize_Begin;
		case 170: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Products_Initialize_End MPS_SVC_Products_Initialize_End;
		case 171: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Products_Shutdown_Begin MPS_SVC_Products_Shutdown_Begin;
		case 172: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Products_Shutdown_End MPS_SVC_Products_Shutdown_End;
		case 200: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_RestoreDefaults MPS_SVC_API_Enter_RestoreDefaults;
		case 201: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_RestoreDefaults MPS_SVC_API_Exit_RestoreDefaults;
		case 202: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_EnumFirewallRules MPS_SVC_API_Enter_EnumFirewallRules;
		case 203: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_EnumFirewallRules MPS_SVC_API_Exit_EnumFirewallRules;
		case 204: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_DeleteFirewallRule MPS_SVC_API_Enter_DeleteFirewallRule;
		case 205: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_DeleteFirewallRule MPS_SVC_API_Exit_DeleteFirewallRule;
		case 206: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_DeleteAllFirewallRules MPS_SVC_API_Enter_DeleteAllFirewallRules;
		case 207: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_DeleteAllFirewallRules MPS_SVC_API_Exit_DeleteAllFirewallRules;
		case 208: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_AddFirewallRule MPS_SVC_API_Enter_AddFirewallRule;
		case 209: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_AddFirewallRule MPS_SVC_API_Exit_AddFirewallRule;
		case 210: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_SetFirewallRule MPS_SVC_API_Enter_SetFirewallRule;
		case 211: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_SetFirewallRule MPS_SVC_API_Exit_SetFirewallRule;
		case 212: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_GetConfig MPS_SVC_API_Enter_GetConfig;
		case 213: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_GetConfig MPS_SVC_API_Exit_GetConfig;
		case 214: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_SetConfig MPS_SVC_API_Enter_SetConfig;
		case 215: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_SetConfig MPS_SVC_API_Exit_SetConfig;
		case 216: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_GetGlobalConfig MPS_SVC_API_Enter_GetGlobalConfig;
		case 217: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_GetGlobalConfig MPS_SVC_API_Exit_GetGlobalConfig;
		case 218: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_SetGlobalConfig MPS_SVC_API_Enter_SetGlobalConfig;
		case 219: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_SetGlobalConfig MPS_SVC_API_Exit_SetGlobalConfig;
		case 220: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_OpenPolicyStore MPS_SVC_API_Enter_OpenPolicyStore;
		case 221: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_OpenPolicyStore MPS_SVC_API_Exit_OpenPolicyStore;
		case 222: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_ClosePolicyStore MPS_SVC_API_Enter_ClosePolicyStore;
		case 223: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_ClosePolicyStore MPS_SVC_API_Exit_ClosePolicyStore;
		case 224: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_AddConnectionSecurityRule MPS_SVC_API_Enter_AddConnectionSecurityRule;
		case 225: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_AddConnectionSecurityRule MPS_SVC_API_Exit_AddConnectionSecurityRule;
		case 226: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_SetConnectionSecurityRule MPS_SVC_API_Enter_SetConnectionSecurityRule;
		case 227: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_SetConnectionSecurityRule MPS_SVC_API_Exit_SetConnectionSecurityRule;
		case 228: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_DeleteConnectionSecurityRule MPS_SVC_API_Enter_DeleteConnectionSecurityRule;
		case 229: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_DeleteConnectionSecurityRule MPS_SVC_API_Exit_DeleteConnectionSecurityRule;
		case 230: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_DeleteAllConnectionSecurityRules MPS_SVC_API_Enter_DeleteAllConnectionSecurityRules;
		case 231: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_DeleteAllConnectionSecurityRules MPS_SVC_API_Exit_DeleteAllConnectionSecurityRules;
		case 232: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_EnumConnectionSecurityRules MPS_SVC_API_Enter_EnumConnectionSecurityRules;
		case 233: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_EnumConnectionSecurityRules MPS_SVC_API_Exit_EnumConnectionSecurityRules;
		case 234: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_AddAuthenticationSet MPS_SVC_API_Enter_AddAuthenticationSet;
		case 235: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_AddAuthenticationSet MPS_SVC_API_Exit_AddAuthenticationSet;
		case 236: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_DeleteAuthenticationSet MPS_SVC_API_Enter_DeleteAuthenticationSet;
		case 237: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_DeleteAuthenticationSet MPS_SVC_API_Exit_DeleteAuthenticationSet;
		case 238: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_SetAuthenticationSet MPS_SVC_API_Enter_SetAuthenticationSet;
		case 239: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_SetAuthenticationSet MPS_SVC_API_Exit_SetAuthenticationSet;
		case 240: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_DeleteAllAuthenticationSets MPS_SVC_API_Enter_DeleteAllAuthenticationSets;
		case 241: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_DeleteAllAuthenticationSets MPS_SVC_API_Exit_DeleteAllAuthenticationSets;
		case 242: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_EnumAuthenticationSets MPS_SVC_API_Enter_EnumAuthenticationSets;
		case 243: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_EnumAuthenticationSets MPS_SVC_API_Exit_EnumAuthenticationSets;
		case 244: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_AddCryptoSet MPS_SVC_API_Enter_AddCryptoSet;
		case 245: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_AddCryptoSet MPS_SVC_API_Exit_AddCryptoSet;
		case 246: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_SetCryptoSet MPS_SVC_API_Enter_SetCryptoSet;
		case 247: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_SetCryptoSet MPS_SVC_API_Exit_SetCryptoSet;
		case 248: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_DeleteCryptoSet MPS_SVC_API_Enter_DeleteCryptoSet;
		case 249: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_DeleteCryptoSet MPS_SVC_API_Exit_DeleteCryptoSet;
		case 250: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_DeleteAllCryptoSets MPS_SVC_API_Enter_DeleteAllCryptoSets;
		case 251: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_DeleteAllCryptoSets MPS_SVC_API_Exit_DeleteAllCryptoSets;
		case 252: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_EnumCryptoSets MPS_SVC_API_Enter_EnumCryptoSets;
		case 253: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_EnumCryptoSets MPS_SVC_API_Exit_EnumCryptoSets;
		case 254: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_EnumPhase1SAs MPS_SVC_API_Enter_EnumPhase1SAs;
		case 255: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_EnumPhase1SAs MPS_SVC_API_Exit_EnumPhase1SAs;
		case 256: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_DeletePhase1SAs MPS_SVC_API_Enter_DeletePhase1SAs;
		case 257: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_DeletePhase1SAs MPS_SVC_API_Exit_DeletePhase1SAs;
		case 258: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_EnumPhase2SAs MPS_SVC_API_Enter_EnumPhase2SAs;
		case 259: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_EnumPhase2SAs MPS_SVC_API_Exit_EnumPhase2SAs;
		case 260: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_DeletePhase2SAs MPS_SVC_API_Enter_DeletePhase2SAs;
		case 261: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_DeletePhase2SAs MPS_SVC_API_Exit_DeletePhase2SAs;
		case 262: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_NotifyUnsupportedAttempt MPS_SVC_API_Enter_NotifyUnsupportedAttempt;
		case 263: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_NotifyUnsupportedAttempt MPS_SVC_API_Exit_NotifyUnsupportedAttempt;
		case 264: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_RegisterProduct MPS_SVC_API_Enter_RegisterProduct;
		case 265: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_RegisterProduct MPS_SVC_API_Exit_RegisterProduct;
		case 266: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_UnregisterProduct MPS_SVC_API_Enter_UnregisterProduct;
		case 267: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_UnregisterProduct MPS_SVC_API_Exit_UnregisterProduct;
		case 268: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_EnumProducts MPS_SVC_API_Enter_EnumProducts;
		case 269: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_EnumProducts MPS_SVC_API_Exit_EnumProducts;
		case 270: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_AddMainModeRule MPS_SVC_API_Enter_AddMainModeRule;
		case 271: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_AddMainModeRule MPS_SVC_API_Exit_AddMainModeRule;
		case 272: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_SetMainModeRule MPS_SVC_API_Enter_SetMainModeRule;
		case 273: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_SetMainModeRule MPS_SVC_API_Exit_SetMainModeRule;
		case 274: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_DeleteMainModeRule MPS_SVC_API_Enter_DeleteMainModeRule;
		case 275: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_DeleteMainModeRule MPS_SVC_API_Exit_DeleteMainModeRule;
		case 276: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_DeleteAllMainModeRules MPS_SVC_API_Enter_DeleteAllMainModeRules;
		case 277: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_DeleteAllMainModeRules MPS_SVC_API_Exit_DeleteAllMainModeRules;
		case 278: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_EnumMainModeRules MPS_SVC_API_Enter_EnumMainModeRules;
		case 279: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_EnumMainModeRules MPS_SVC_API_Exit_EnumMainModeRules;
		case 280: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_QueryFirewallRules MPS_SVC_API_Enter_QueryFirewallRules;
		case 281: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_QueryFirewallRules MPS_SVC_API_Exit_QueryFirewallRules;
		case 282: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_QueryConnectionSecurityRules MPS_SVC_API_Enter_QueryConnectionSecurityRules;
		case 283: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_QueryConnectionSecurityRules MPS_SVC_API_Exit_QueryConnectionSecurityRules;
		case 284: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_QueryMainModeRules MPS_SVC_API_Enter_QueryMainModeRules;
		case 285: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_QueryMainModeRules MPS_SVC_API_Exit_QueryMainModeRules;
		case 286: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_QueryAuthenticationSets MPS_SVC_API_Enter_QueryAuthenticationSets;
		case 287: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_QueryAuthenticationSets MPS_SVC_API_Exit_QueryAuthenticationSets;
		case 288: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Enter_QueryCryptoSets MPS_SVC_API_Enter_QueryCryptoSets;
		case 289: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_API_Exit_QueryCryptoSets MPS_SVC_API_Exit_QueryCryptoSets;
		case 301: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_BFE_EngineOpen_Enter MPS_SVC_BFE_EngineOpen_Enter;
		case 302: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_BFE_EngineOpen_Exit MPS_SVC_BFE_EngineOpen_Exit;
		case 303: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_BFE_EngineClose_Enter MPS_SVC_BFE_EngineClose_Enter;
		case 304: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_BFE_EngineClose_Exit MPS_SVC_BFE_EngineClose_Exit;
		case 305: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_BFE_TransactionBegin_Enter MPS_SVC_BFE_TransactionBegin_Enter;
		case 306: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_BFE_TransactionBegin_Exit MPS_SVC_BFE_TransactionBegin_Exit;
		case 307: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_BFE_TransactionAbort_Enter MPS_SVC_BFE_TransactionAbort_Enter;
		case 308: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_BFE_TransactionAbort_Exit MPS_SVC_BFE_TransactionAbort_Exit;
		case 309: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_BFE_TransactionCommit_Enter MPS_SVC_BFE_TransactionCommit_Enter;
		case 310: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_BFE_TransactionCommit_Exit MPS_SVC_BFE_TransactionCommit_Exit;
		case 311: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_BFE_ProviderAdd_Enter MPS_SVC_BFE_ProviderAdd_Enter;
		case 312: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_BFE_ProviderAdd_Exit MPS_SVC_BFE_ProviderAdd_Exit;
		case 313: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_BFE_SublayerAdd_Enter MPS_SVC_BFE_SublayerAdd_Enter;
		case 314: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_BFE_SublayerAdd_Exit MPS_SVC_BFE_SublayerAdd_Exit;
		case 315: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_BFE_FilterAdd_Enter MPS_SVC_BFE_FilterAdd_Enter;
		case 316: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_BFE_FilterAdd_Exit MPS_SVC_BFE_FilterAdd_Exit;
		case 317: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_BFE_FilterDeleteByKey_Enter MPS_SVC_BFE_FilterDeleteByKey_Enter;
		case 318: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_BFE_FilterDeleteByKey_Exit MPS_SVC_BFE_FilterDeleteByKey_Exit;
		case 319: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_BFE_FilterDeleteById_Enter MPS_SVC_BFE_FilterDeleteById_Enter;
		case 320: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_BFE_FilterDeleteById_Exit MPS_SVC_BFE_FilterDeleteById_Exit;
		case 400: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_GP_Policy_Begin MPS_SVC_GP_Policy_Begin;
		case 401: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_GP_Policy_End MPS_SVC_GP_Policy_End;
		case 501: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Plumber_Policy_Begin MPS_SVC_Plumber_Policy_Begin;
		case 502: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Plumber_Policy_Commit MPS_SVC_Plumber_Policy_Commit;
		case 503: [property.ETLSummary = this.ToString] MPSSVC_MPS_SVC_Plumber_Policy_Abort MPS_SVC_Plumber_Policy_Abort;
		default: [property.ETLSummary = "Not exist EventID"]struct{};
	}
}
Struct MPSSVC_MPS_SVC_Start_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Start_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Stop_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Stop_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Audit_Initialize_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Audit_Initialize_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Audit_Shutdown_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Audit_Shutdown_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_AuthApps_Initialize_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_AuthApps_Initialize_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_AuthApps_Shutdown_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_AuthApps_Shutdown_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Notify_Initialize_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Notify_Initialize_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Notify_Shutdown_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Notify_Shutdown_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_DynPorts_Initialize_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_DynPorts_Initialize_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_DynPorts_Shutdown_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_DynPorts_Shutdown_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_ChangeSource_Initialize_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_ChangeSource_Initialize_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_ChangeSource_Shutdown_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_ChangeSource_Shutdown_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Writer_Initialize_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Writer_Initialize_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Writer_Shutdown_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Writer_Shutdown_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Logger_Initialize_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Logger_Initialize_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Logger_Shutdown_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Logger_Shutdown_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_DynDataNLA1stPhase_Initialize_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_DynDataNLA1stPhase_Initialize_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_DynDataNLA1stPhase_Shutdown_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_DynDataNLA1stPhase_Shutdown_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_ProfileMgr_Initialize_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_ProfileMgr_Initialize_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_ProfileMgr_Shutdown_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_ProfileMgr_Shutdown_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Upcall2ndPhase_Initialize_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Upcall2ndPhase_Initialize_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Upcall2ndPhase_Shutdown_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Upcall2ndPhase_Shutdown_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_RpcAPIs_Initialize_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_RpcAPIs_Initialize_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_RpcAPIs_Shutdown_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_RpcAPIs_Shutdown_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_ResrcIndicationAPIs_Initialize_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_ResrcIndicationAPIs_Initialize_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_ResrcIndicationAPIs_Shutdown_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_ResrcIndicationAPIs_Shutdown_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_GPMon_Initialize_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_GPMon_Initialize_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_GPMon_Shutdown_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_GPMon_Shutdown_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_DynDataNLA2ndPhase_Initialize_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_DynDataNLA2ndPhase_Initialize_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_DynDataNLA2ndPhase_Shutdown_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_DynDataNLA2ndPhase_Shutdown_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_ServiceSignalReady_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_ServiceSignalReady_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Empty_Shutdown_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Empty_Shutdown_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Products_Initialize_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Products_Initialize_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Products_Shutdown_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Products_Shutdown_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_RestoreDefaults {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_RestoreDefaults {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_EnumFirewallRules {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_EnumFirewallRules {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_DeleteFirewallRule {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_DeleteFirewallRule {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_DeleteAllFirewallRules {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_DeleteAllFirewallRules {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_AddFirewallRule {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_AddFirewallRule {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_SetFirewallRule {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_SetFirewallRule {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_GetConfig {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_GetConfig {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_SetConfig {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_SetConfig {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_GetGlobalConfig {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_GetGlobalConfig {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_SetGlobalConfig {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_SetGlobalConfig {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_OpenPolicyStore {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_OpenPolicyStore {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_ClosePolicyStore {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_ClosePolicyStore {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_AddConnectionSecurityRule {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_AddConnectionSecurityRule {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_SetConnectionSecurityRule {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_SetConnectionSecurityRule {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_DeleteConnectionSecurityRule {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_DeleteConnectionSecurityRule {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_DeleteAllConnectionSecurityRules {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_DeleteAllConnectionSecurityRules {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_EnumConnectionSecurityRules {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_EnumConnectionSecurityRules {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_AddAuthenticationSet {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_AddAuthenticationSet {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_DeleteAuthenticationSet {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_DeleteAuthenticationSet {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_SetAuthenticationSet {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_SetAuthenticationSet {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_DeleteAllAuthenticationSets {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_DeleteAllAuthenticationSets {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_EnumAuthenticationSets {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_EnumAuthenticationSets {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_AddCryptoSet {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_AddCryptoSet {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_SetCryptoSet {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_SetCryptoSet {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_DeleteCryptoSet {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_DeleteCryptoSet {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_DeleteAllCryptoSets {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_DeleteAllCryptoSets {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_EnumCryptoSets {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_EnumCryptoSets {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_EnumPhase1SAs {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_EnumPhase1SAs {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_DeletePhase1SAs {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_DeletePhase1SAs {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_EnumPhase2SAs {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_EnumPhase2SAs {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_DeletePhase2SAs {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_DeletePhase2SAs {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_NotifyUnsupportedAttempt {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_NotifyUnsupportedAttempt {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_RegisterProduct {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_RegisterProduct {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_UnregisterProduct {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_UnregisterProduct {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_EnumProducts {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_EnumProducts {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_AddMainModeRule {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_AddMainModeRule {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_SetMainModeRule {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_SetMainModeRule {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_DeleteMainModeRule {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_DeleteMainModeRule {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_DeleteAllMainModeRules {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_DeleteAllMainModeRules {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_EnumMainModeRules {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_EnumMainModeRules {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_QueryFirewallRules {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_QueryFirewallRules {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_QueryConnectionSecurityRules {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_QueryConnectionSecurityRules {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_QueryMainModeRules {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_QueryMainModeRules {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_QueryAuthenticationSets {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_QueryAuthenticationSets {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Enter_QueryCryptoSets {}; // Empty Struct
Struct MPSSVC_MPS_SVC_API_Exit_QueryCryptoSets {}; // Empty Struct
Struct MPSSVC_MPS_SVC_BFE_EngineOpen_Enter {}; // Empty Struct
Struct MPSSVC_MPS_SVC_BFE_EngineOpen_Exit {}; // Empty Struct
Struct MPSSVC_MPS_SVC_BFE_EngineClose_Enter {}; // Empty Struct
Struct MPSSVC_MPS_SVC_BFE_EngineClose_Exit {}; // Empty Struct
Struct MPSSVC_MPS_SVC_BFE_TransactionBegin_Enter {}; // Empty Struct
Struct MPSSVC_MPS_SVC_BFE_TransactionBegin_Exit {}; // Empty Struct
Struct MPSSVC_MPS_SVC_BFE_TransactionAbort_Enter {}; // Empty Struct
Struct MPSSVC_MPS_SVC_BFE_TransactionAbort_Exit {}; // Empty Struct
Struct MPSSVC_MPS_SVC_BFE_TransactionCommit_Enter {}; // Empty Struct
Struct MPSSVC_MPS_SVC_BFE_TransactionCommit_Exit {}; // Empty Struct
Struct MPSSVC_MPS_SVC_BFE_ProviderAdd_Enter {}; // Empty Struct
Struct MPSSVC_MPS_SVC_BFE_ProviderAdd_Exit {}; // Empty Struct
Struct MPSSVC_MPS_SVC_BFE_SublayerAdd_Enter {}; // Empty Struct
Struct MPSSVC_MPS_SVC_BFE_SublayerAdd_Exit {}; // Empty Struct
Struct MPSSVC_MPS_SVC_BFE_FilterAdd_Enter {}; // Empty Struct
Struct MPSSVC_MPS_SVC_BFE_FilterAdd_Exit {}; // Empty Struct
Struct MPSSVC_MPS_SVC_BFE_FilterDeleteByKey_Enter {}; // Empty Struct
Struct MPSSVC_MPS_SVC_BFE_FilterDeleteByKey_Exit {}; // Empty Struct
Struct MPSSVC_MPS_SVC_BFE_FilterDeleteById_Enter {}; // Empty Struct
Struct MPSSVC_MPS_SVC_BFE_FilterDeleteById_Exit {}; // Empty Struct
Struct MPSSVC_MPS_SVC_GP_Policy_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_GP_Policy_End {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Plumber_Policy_Begin {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Plumber_Policy_Commit {}; // Empty Struct
Struct MPSSVC_MPS_SVC_Plumber_Policy_Abort {}; // Empty Struct
[RegisterBefore(NetEvent.UserData, MicrosoftWindowsMPSCLNT, "{37945dc2-899b-44d1-b79c-dd4a9e57ff98}")]
Protocol MPSSVC_MicrosoftWindowsMPSCLNT = property.ETLSummary
{
	[BuildConversationWithParent, conversation.ConversationDescription = ""]
	switch(property.EventID)
	{
		case 200: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_RestoreDefaults MPS_CLNT_API_Enter_RestoreDefaults;
		case 201: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_RestoreDefaults MPS_CLNT_API_Exit_RestoreDefaults;
		case 202: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_EnumFirewallRules MPS_CLNT_API_Enter_EnumFirewallRules;
		case 203: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_EnumFirewallRules MPS_CLNT_API_Exit_EnumFirewallRules;
		case 204: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_DeleteFirewallRule MPS_CLNT_API_Enter_DeleteFirewallRule;
		case 205: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_DeleteFirewallRule MPS_CLNT_API_Exit_DeleteFirewallRule;
		case 206: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_DeleteAllFirewallRules MPS_CLNT_API_Enter_DeleteAllFirewallRules;
		case 207: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_DeleteAllFirewallRules MPS_CLNT_API_Exit_DeleteAllFirewallRules;
		case 208: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_AddFirewallRule MPS_CLNT_API_Enter_AddFirewallRule;
		case 209: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_AddFirewallRule MPS_CLNT_API_Exit_AddFirewallRule;
		case 210: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_SetFirewallRule MPS_CLNT_API_Enter_SetFirewallRule;
		case 211: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_SetFirewallRule MPS_CLNT_API_Exit_SetFirewallRule;
		case 212: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_GetConfig MPS_CLNT_API_Enter_GetConfig;
		case 213: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_GetConfig MPS_CLNT_API_Exit_GetConfig;
		case 214: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_SetConfig MPS_CLNT_API_Enter_SetConfig;
		case 215: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_SetConfig MPS_CLNT_API_Exit_SetConfig;
		case 216: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_GetGlobalConfig MPS_CLNT_API_Enter_GetGlobalConfig;
		case 217: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_GetGlobalConfig MPS_CLNT_API_Exit_GetGlobalConfig;
		case 218: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_SetGlobalConfig MPS_CLNT_API_Enter_SetGlobalConfig;
		case 219: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_SetGlobalConfig MPS_CLNT_API_Exit_SetGlobalConfig;
		case 220: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_OpenPolicyStore MPS_CLNT_API_Enter_OpenPolicyStore;
		case 221: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_OpenPolicyStore MPS_CLNT_API_Exit_OpenPolicyStore;
		case 222: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_ClosePolicyStore MPS_CLNT_API_Enter_ClosePolicyStore;
		case 223: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_ClosePolicyStore MPS_CLNT_API_Exit_ClosePolicyStore;
		case 224: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_AddConnectionSecurityRule MPS_CLNT_API_Enter_AddConnectionSecurityRule;
		case 225: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_AddConnectionSecurityRule MPS_CLNT_API_Exit_AddConnectionSecurityRule;
		case 226: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_SetConnectionSecurityRule MPS_CLNT_API_Enter_SetConnectionSecurityRule;
		case 227: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_SetConnectionSecurityRule MPS_CLNT_API_Exit_SetConnectionSecurityRule;
		case 228: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_DeleteConnectionSecurityRule MPS_CLNT_API_Enter_DeleteConnectionSecurityRule;
		case 229: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_DeleteConnectionSecurityRule MPS_CLNT_API_Exit_DeleteConnectionSecurityRule;
		case 230: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_DeleteAllConnectionSecurityRules MPS_CLNT_API_Enter_DeleteAllConnectionSecurityRules;
		case 231: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_DeleteAllConnectionSecurityRules MPS_CLNT_API_Exit_DeleteAllConnectionSecurityRules;
		case 232: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_EnumConnectionSecurityRules MPS_CLNT_API_Enter_EnumConnectionSecurityRules;
		case 233: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_EnumConnectionSecurityRules MPS_CLNT_API_Exit_EnumConnectionSecurityRules;
		case 234: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_AddAuthenticationSet MPS_CLNT_API_Enter_AddAuthenticationSet;
		case 235: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_AddAuthenticationSet MPS_CLNT_API_Exit_AddAuthenticationSet;
		case 236: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_DeleteAuthenticationSet MPS_CLNT_API_Enter_DeleteAuthenticationSet;
		case 237: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_DeleteAuthenticationSet MPS_CLNT_API_Exit_DeleteAuthenticationSet;
		case 238: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_SetAuthenticationSet MPS_CLNT_API_Enter_SetAuthenticationSet;
		case 239: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_SetAuthenticationSet MPS_CLNT_API_Exit_SetAuthenticationSet;
		case 240: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_DeleteAllAuthenticationSets MPS_CLNT_API_Enter_DeleteAllAuthenticationSets;
		case 241: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_DeleteAllAuthenticationSets MPS_CLNT_API_Exit_DeleteAllAuthenticationSets;
		case 242: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_EnumAuthenticationSets MPS_CLNT_API_Enter_EnumAuthenticationSets;
		case 243: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_EnumAuthenticationSets MPS_CLNT_API_Exit_EnumAuthenticationSets;
		case 244: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_AddCryptoSet MPS_CLNT_API_Enter_AddCryptoSet;
		case 245: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_AddCryptoSet MPS_CLNT_API_Exit_AddCryptoSet;
		case 246: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_SetCryptoSet MPS_CLNT_API_Enter_SetCryptoSet;
		case 247: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_SetCryptoSet MPS_CLNT_API_Exit_SetCryptoSet;
		case 248: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_DeleteCryptoSet MPS_CLNT_API_Enter_DeleteCryptoSet;
		case 249: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_DeleteCryptoSet MPS_CLNT_API_Exit_DeleteCryptoSet;
		case 250: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_DeleteAllCryptoSets MPS_CLNT_API_Enter_DeleteAllCryptoSets;
		case 251: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_DeleteAllCryptoSets MPS_CLNT_API_Exit_DeleteAllCryptoSets;
		case 252: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_EnumCryptoSets MPS_CLNT_API_Enter_EnumCryptoSets;
		case 253: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_EnumCryptoSets MPS_CLNT_API_Exit_EnumCryptoSets;
		case 254: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_EnumPhase1SAs MPS_CLNT_API_Enter_EnumPhase1SAs;
		case 255: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_EnumPhase1SAs MPS_CLNT_API_Exit_EnumPhase1SAs;
		case 256: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_DeletePhase1SAs MPS_CLNT_API_Enter_DeletePhase1SAs;
		case 257: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_DeletePhase1SAs MPS_CLNT_API_Exit_DeletePhase1SAs;
		case 258: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_EnumPhase2SAs MPS_CLNT_API_Enter_EnumPhase2SAs;
		case 259: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_EnumPhase2SAs MPS_CLNT_API_Exit_EnumPhase2SAs;
		case 260: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_VerifyFirewallRule MPS_CLNT_API_Enter_VerifyFirewallRule;
		case 261: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_VerifyFirewallRule MPS_CLNT_API_Exit_VerifyFirewallRule;
		case 262: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_VerifyConnectionSecurityRule MPS_CLNT_API_Enter_VerifyConnectionSecurityRule;
		case 263: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_VerifyConnectionSecurityRule MPS_CLNT_API_Exit_VerifyConnectionSecurityRule;
		case 264: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_VerifyAuthenticationSet MPS_CLNT_API_Enter_VerifyAuthenticationSet;
		case 265: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_VerifyAuthenticationSet MPS_CLNT_API_Exit_VerifyAuthenticationSet;
		case 266: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_VerifyCryptoSet MPS_CLNT_API_Enter_VerifyCryptoSet;
		case 267: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_VerifyCryptoSet MPS_CLNT_API_Exit_VerifyCryptoSet;
		case 268: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_ImportPolicy MPS_CLNT_API_Enter_ImportPolicy;
		case 269: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_ImportPolicy MPS_CLNT_API_Exit_ImportPolicy;
		case 270: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_ExportPolicy MPS_CLNT_API_Enter_ExportPolicy;
		case 271: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_ExportPolicy MPS_CLNT_API_Exit_ExportPolicy;
		case 272: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_DeletePhase2SAs MPS_CLNT_API_Enter_DeletePhase2SAs;
		case 273: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_DeletePhase2SAs MPS_CLNT_API_Exit_DeletePhase2SAs;
		case 274: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_FreeFirewallRules MPS_CLNT_API_Enter_FreeFirewallRules;
		case 275: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_FreeFirewallRules MPS_CLNT_API_Exit_FreeFirewallRules;
		case 276: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_FreeConnectionSecurityRules MPS_CLNT_API_Enter_FreeConnectionSecurityRules;
		case 277: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_FreeConnectionSecurityRules MPS_CLNT_API_Exit_FreeConnectionSecurityRules;
		case 278: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_FreeAuthenticationSets MPS_CLNT_API_Enter_FreeAuthenticationSets;
		case 279: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_FreeAuthenticationSets MPS_CLNT_API_Exit_FreeAuthenticationSets;
		case 280: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_FreeCryptoSets MPS_CLNT_API_Enter_FreeCryptoSets;
		case 281: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_FreeCryptoSets MPS_CLNT_API_Exit_FreeCryptoSets;
		case 282: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_FreePhase1SAs MPS_CLNT_API_Enter_FreePhase1SAs;
		case 283: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_FreePhase1SAs MPS_CLNT_API_Exit_FreePhase1SAs;
		case 284: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_FreePhase2SAs MPS_CLNT_API_Enter_FreePhase2SAs;
		case 285: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_FreePhase2SAs MPS_CLNT_API_Exit_FreePhase2SAs;
		case 286: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_StatusMessageFromStatusCode MPS_CLNT_API_Enter_StatusMessageFromStatusCode;
		case 287: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_StatusMessageFromStatusCode MPS_CLNT_API_Exit_StatusMessageFromStatusCode;
		case 288: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_FreeMainModeRules MPS_CLNT_API_Enter_FreeMainModeRules;
		case 289: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_FreeMainModeRules MPS_CLNT_API_Exit_FreeMainModeRules;
		case 290: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_EnumMainModeRules MPS_CLNT_API_Enter_EnumMainModeRules;
		case 291: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_EnumMainModeRules MPS_CLNT_API_Exit_EnumMainModeRules;
		case 292: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_DeleteMainModeRule MPS_CLNT_API_Enter_DeleteMainModeRule;
		case 293: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_DeleteMainModeRule MPS_CLNT_API_Exit_DeleteMainModeRule;
		case 294: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_DeleteAllMainModeRules MPS_CLNT_API_Enter_DeleteAllMainModeRules;
		case 295: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_DeleteAllMainModeRules MPS_CLNT_API_Exit_DeleteAllMainModeRules;
		case 296: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_AddMainModeRule MPS_CLNT_API_Enter_AddMainModeRule;
		case 297: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_AddMainModeRule MPS_CLNT_API_Exit_AddMainModeRule;
		case 298: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_SetMainModeRule MPS_CLNT_API_Enter_SetMainModeRule;
		case 299: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_SetMainModeRule MPS_CLNT_API_Exit_SetMainModeRule;
		case 300: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_VerifyMainModeRule MPS_CLNT_API_Enter_VerifyMainModeRule;
		case 301: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_VerifyMainModeRule MPS_CLNT_API_Exit_VerifyMainModeRule;
		case 302: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_QueryFirewallRules MPS_CLNT_API_Enter_QueryFirewallRules;
		case 303: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_QueryFirewallRules MPS_CLNT_API_Exit_QueryFirewallRules;
		case 304: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_QueryConnectionSecurityRules MPS_CLNT_API_Enter_QueryConnectionSecurityRules;
		case 305: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_QueryConnectionSecurityRules MPS_CLNT_API_Exit_QueryConnectionSecurityRules;
		case 306: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_QueryMainModeRules MPS_CLNT_API_Enter_QueryMainModeRules;
		case 307: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_QueryMainModeRules MPS_CLNT_API_Exit_QueryMainModeRules;
		case 308: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_QueryAuthenticationSets MPS_CLNT_API_Enter_QueryAuthenticationSets;
		case 309: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_QueryAuthenticationSets MPS_CLNT_API_Exit_QueryAuthenticationSets;
		case 310: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_QueryCryptoSets MPS_CLNT_API_Enter_QueryCryptoSets;
		case 311: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_QueryCryptoSets MPS_CLNT_API_Exit_QueryCryptoSets;
		case 312: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_VerifyFirewallRuleQuery MPS_CLNT_API_Enter_VerifyFirewallRuleQuery;
		case 313: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_VerifyFirewallRuleQuery MPS_CLNT_API_Exit_VerifyFirewallRuleQuery;
		case 314: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_VerifyConnectionSecurityRuleQuery MPS_CLNT_API_Enter_VerifyConnectionSecurityRuleQuery;
		case 315: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_VerifyConnectionSecurityRuleQuery MPS_CLNT_API_Exit_VerifyConnectionSecurityRuleQuery;
		case 316: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_VerifyMainModeRuleQuery MPS_CLNT_API_Enter_VerifyMainModeRuleQuery;
		case 317: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_VerifyMainModeRuleQuery MPS_CLNT_API_Exit_VerifyMainModeRuleQuery;
		case 318: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_VerifyAuthenticationSetQuery MPS_CLNT_API_Enter_VerifyAuthenticationSetQuery;
		case 319: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_VerifyAuthenticationSetQuery MPS_CLNT_API_Exit_VerifyAuthenticationSetQuery;
		case 320: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_VerifyCryptoSetQuery MPS_CLNT_API_Enter_VerifyCryptoSetQuery;
		case 321: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_VerifyCryptoSetQuery MPS_CLNT_API_Exit_VerifyCryptoSetQuery;
		case 322: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Enter_FreeQuery MPS_CLNT_API_Enter_FreeQuery;
		case 323: [property.ETLSummary = this.ToString] MPSSVC_MPS_CLNT_API_Exit_FreeQuery MPS_CLNT_API_Exit_FreeQuery;
		default: [property.ETLSummary = "Not exist EventID"]struct{};
	}
}
Struct MPSSVC_MPS_CLNT_API_Enter_RestoreDefaults {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_RestoreDefaults {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_EnumFirewallRules {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_EnumFirewallRules {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_DeleteFirewallRule {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_DeleteFirewallRule {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_DeleteAllFirewallRules {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_DeleteAllFirewallRules {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_AddFirewallRule {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_AddFirewallRule {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_SetFirewallRule {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_SetFirewallRule {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_GetConfig {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_GetConfig {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_SetConfig {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_SetConfig {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_GetGlobalConfig {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_GetGlobalConfig {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_SetGlobalConfig {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_SetGlobalConfig {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_OpenPolicyStore {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_OpenPolicyStore {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_ClosePolicyStore {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_ClosePolicyStore {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_AddConnectionSecurityRule {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_AddConnectionSecurityRule {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_SetConnectionSecurityRule {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_SetConnectionSecurityRule {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_DeleteConnectionSecurityRule {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_DeleteConnectionSecurityRule {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_DeleteAllConnectionSecurityRules {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_DeleteAllConnectionSecurityRules {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_EnumConnectionSecurityRules {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_EnumConnectionSecurityRules {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_AddAuthenticationSet {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_AddAuthenticationSet {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_DeleteAuthenticationSet {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_DeleteAuthenticationSet {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_SetAuthenticationSet {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_SetAuthenticationSet {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_DeleteAllAuthenticationSets {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_DeleteAllAuthenticationSets {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_EnumAuthenticationSets {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_EnumAuthenticationSets {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_AddCryptoSet {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_AddCryptoSet {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_SetCryptoSet {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_SetCryptoSet {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_DeleteCryptoSet {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_DeleteCryptoSet {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_DeleteAllCryptoSets {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_DeleteAllCryptoSets {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_EnumCryptoSets {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_EnumCryptoSets {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_EnumPhase1SAs {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_EnumPhase1SAs {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_DeletePhase1SAs {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_DeletePhase1SAs {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_EnumPhase2SAs {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_EnumPhase2SAs {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_VerifyFirewallRule {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_VerifyFirewallRule {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_VerifyConnectionSecurityRule {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_VerifyConnectionSecurityRule {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_VerifyAuthenticationSet {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_VerifyAuthenticationSet {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_VerifyCryptoSet {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_VerifyCryptoSet {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_ImportPolicy {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_ImportPolicy {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_ExportPolicy {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_ExportPolicy {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_DeletePhase2SAs {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_DeletePhase2SAs {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_FreeFirewallRules {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_FreeFirewallRules {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_FreeConnectionSecurityRules {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_FreeConnectionSecurityRules {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_FreeAuthenticationSets {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_FreeAuthenticationSets {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_FreeCryptoSets {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_FreeCryptoSets {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_FreePhase1SAs {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_FreePhase1SAs {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_FreePhase2SAs {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_FreePhase2SAs {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_StatusMessageFromStatusCode {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_StatusMessageFromStatusCode {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_FreeMainModeRules {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_FreeMainModeRules {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_EnumMainModeRules {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_EnumMainModeRules {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_DeleteMainModeRule {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_DeleteMainModeRule {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_DeleteAllMainModeRules {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_DeleteAllMainModeRules {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_AddMainModeRule {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_AddMainModeRule {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_SetMainModeRule {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_SetMainModeRule {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_VerifyMainModeRule {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_VerifyMainModeRule {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_QueryFirewallRules {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_QueryFirewallRules {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_QueryConnectionSecurityRules {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_QueryConnectionSecurityRules {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_QueryMainModeRules {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_QueryMainModeRules {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_QueryAuthenticationSets {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_QueryAuthenticationSets {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_QueryCryptoSets {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_QueryCryptoSets {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_VerifyFirewallRuleQuery {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_VerifyFirewallRuleQuery {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_VerifyConnectionSecurityRuleQuery {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_VerifyConnectionSecurityRuleQuery {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_VerifyMainModeRuleQuery {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_VerifyMainModeRuleQuery {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_VerifyAuthenticationSetQuery {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_VerifyAuthenticationSetQuery {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_VerifyCryptoSetQuery {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_VerifyCryptoSetQuery {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Enter_FreeQuery {}; // Empty Struct
Struct MPSSVC_MPS_CLNT_API_Exit_FreeQuery {}; // Empty Struct
[RegisterBefore(NetEvent.UserData, MicrosoftWindowsWindowsFirewallWithAdvancedSecurity, "{d1bc9aff-2abf-4d71-9146-ecb2a986eb85}")]
Protocol MPSSVC_MicrosoftWindowsWindowsFirewallWithAdvancedSecurity = property.ETLSummary
{
	[BuildConversationWithParent, conversation.ConversationDescription = ""]
	switch(property.EventID)
	{
		case 2000: [property.ETLSummary = this.ToString] MPSSVC_WFStartupConfigurationInfo WFStartupConfigurationInfo;
		case 2001: [property.ETLSummary = this.ToString] MPSSVC_WFStartupProfileConfigurationInfo WFStartupProfileConfigurationInfo;
		case 2002: [property.ETLSummary = this.ToString] MPSSVC_WFGlobalConfigurationChangedEvent WFGlobalConfigurationChangedEvent;
		case 2003: [property.ETLSummary = this.ToString] MPSSVC_WFProfileConfigurationChangedEvent WFProfileConfigurationChangedEvent;
		case 2004: [property.ETLSummary = this.ToString] MPSSVC_WFRuleAddEvent WFRuleAddEvent;
		case 2005: [property.ETLSummary = this.ToString] MPSSVC_WFRuleChangeEvent WFRuleChangeEvent;
		case 2006: [property.ETLSummary = this.ToString] MPSSVC_WFRuleDeleteEvent WFRuleDeleteEvent;
		case 2007: [property.ETLSummary = this.ToString] MPSSVC_WFStartupRuleAddEvent WFStartupRuleAddEvent;
		case 2008: [property.ETLSummary = this.ToString] MPSSVC_WFGroupPolicySuccessEvent WFGroupPolicySuccessEvent;
		case 2009: [property.ETLSummary = this.ToString] MPSSVC_WFGroupPolicyErrorEvent WFGroupPolicyErrorEvent;
		case 2010: [property.ETLSummary = this.ToString] MPSSVC_WFInterfaceProfileChanged WFInterfaceProfileChanged;
		case 2011: [property.ETLSummary = this.ToString] MPSSVC_WFUnableToShowQueryUserNotificationEvent WFUnableToShowQueryUserNotificationEvent;
		case 2012: [property.ETLSummary = this.ToString] MPSSVC_WFCSRuleAddEvent WFCSRuleAddEvent;
		case 2013: [property.ETLSummary = this.ToString] MPSSVC_WFCSRuleChangeEvent WFCSRuleChangeEvent;
		case 2014: [property.ETLSummary = this.ToString] MPSSVC_WFCSRuleDeleteEvent WFCSRuleDeleteEvent;
		case 2015: [property.ETLSummary = this.ToString] MPSSVC_WFCSStartupRuleAddEvent WFCSStartupRuleAddEvent;
		case 2016: [property.ETLSummary = this.ToString] MPSSVC_WFMMRuleAddEvent WFMMRuleAddEvent;
		case 2017: [property.ETLSummary = this.ToString] MPSSVC_WFMMRuleChangeEvent WFMMRuleChangeEvent;
		case 2018: [property.ETLSummary = this.ToString] MPSSVC_WFMMRuleDeleteEvent WFMMRuleDeleteEvent;
		case 2019: [property.ETLSummary = this.ToString] MPSSVC_WFMMStartupRuleAddEvent WFMMStartupRuleAddEvent;
		case 2020: [property.ETLSummary = this.ToString] MPSSVC_WFPhase1CryptoSetAddEvent WFPhase1CryptoSetAddEvent;
		case 2021: [property.ETLSummary = this.ToString] MPSSVC_WFPhase1CryptoSetChangeEvent WFPhase1CryptoSetChangeEvent;
		case 2022: [property.ETLSummary = this.ToString] MPSSVC_WFPhase1CryptoSetDeleteEvent WFPhase1CryptoSetDeleteEvent;
		case 2023: [property.ETLSummary = this.ToString] MPSSVC_WFPhase1CryptoSetStartupAddEvent WFPhase1CryptoSetStartupAddEvent;
		case 2024: [property.ETLSummary = this.ToString] MPSSVC_WFPhase2CryptoSetAddEvent WFPhase2CryptoSetAddEvent;
		case 2025: [property.ETLSummary = this.ToString] MPSSVC_WFPhase2CryptoSetChangeEvent WFPhase2CryptoSetChangeEvent;
		case 2026: [property.ETLSummary = this.ToString] MPSSVC_WFPhase2CryptoSetDeleteEvent WFPhase2CryptoSetDeleteEvent;
		case 2027: [property.ETLSummary = this.ToString] MPSSVC_WFPhase2CryptoSetStartupAddEvent WFPhase2CryptoSetStartupAddEvent;
		case 2028: [property.ETLSummary = this.ToString] MPSSVC_WFAuthenticationSetAddEvent WFAuthenticationSetAddEvent;
		case 2029: [property.ETLSummary = this.ToString] MPSSVC_WFAuthenticationSetChangeEvent WFAuthenticationSetChangeEvent;
		case 2030: [property.ETLSummary = this.ToString] MPSSVC_WFAuthenticationSetDeleteEvent WFAuthenticationSetDeleteEvent;
		case 2031: [property.ETLSummary = this.ToString] MPSSVC_WFAuthenticationSetStartupAddEvent WFAuthenticationSetStartupAddEvent;
		case 2032: [property.ETLSummary = this.ToString] MPSSVC_WFRestoreDefaultsEvent WFRestoreDefaultsEvent;
		case 2033: [property.ETLSummary = this.ToString] MPSSVC_WFAllFirewallRulesDeletedEvent WFAllFirewallRulesDeletedEvent;
		case 2034: [property.ETLSummary = this.ToString] MPSSVC_WFAllCSRulesDeletedEvent WFAllCSRulesDeletedEvent;
		case 2035: [property.ETLSummary = this.ToString] MPSSVC_WFAllMMRulesDeletedEvent WFAllMMRulesDeletedEvent;
		case 2036: [property.ETLSummary = this.ToString] MPSSVC_WFAllAuthenticationSetsDeletedEvent WFAllAuthenticationSetsDeletedEvent;
		case 2037: [property.ETLSummary = this.ToString] MPSSVC_WFAllCryptoSetsDeletedEvent WFAllCryptoSetsDeletedEvent;
		default: [property.ETLSummary = "Not exist EventID"]struct{};
	}
}
Table MPSSVC_WFProfileConfigurationType_ValueMap(value)
{
	switch(value)
	{
		case 1: "Enable Windows Firewall";
		case 2: "Disable Stealth Mode";
		case 3: "Windows Firewall Shielded Mode";
		case 4: "Disable Unicast Responses to Multicast";
		case 5: "Log Dropped Packets";
		case 6: "Log Successful Connections";
		case 7: "Log Ignored Rules";
		case 8: "Maximum Log File Size";
		case 9: "Log File Path";
		case 10: "Disable Inbound Notifications";
		case 11: "Allow User preferred merge of Authorized Applications";
		case 12: "Allow User preferred merge of Globally open ports";
		case 13: "Allow Local Policy Merge";
		case 14: "Allow Local IPsec Policy Merge";
		case 15: "Disabled Interfaces";
		case 16: "Default Outbound Action";
		case 17: "Default Inbound Action";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table MPSSVC_WFGlobalConfigurationType_ValueMap(value)
{
	switch(value)
	{
		case 2: "Current Profile";
		case 3: "Disable Stateful FTP";
		case 4: "Ignored Disable Stateful PPTP";
		case 5: "IPsec SA Idle time";
		case 6: "IPsec preshared key encoding";
		case 7: "IPsec Exempt";
		case 8: "IPsec CRL Check";
		case 9: "IPsec Through NAT";
		case 10: "Policy Version";
		case 11: "Binary Version Supported";
		case 12: "Remote Machine Authorization List";
		case 13: "Remote User Authorization List";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table MPSSVC_WFOrigin_ValueMap(value)
{
	switch(value)
	{
		case 1: "Local";
		case 2: "Group Policy";
		case 3: "Dynamic";
		case 4: "AutoGenerated";
		case 5: "Hardcoded";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table MPSSVC_WFAllowBlock_ValueMap(value)
{
	switch(value)
	{
		case 0: "Allow";
		case 1: "Block";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table MPSSVC_YesNo_ValueMap(value)
{
	switch(value)
	{
		case 1: "Yes";
		case 0: "No";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table MPSSVC_WFStoreType_ValueMap(value)
{
	switch(value)
	{
		case 1: "Group policy RSOP";
		case 2: "Local";
		case 3: "WSH Static";
		case 4: "WSH Configurable";
		case 5: "Dynamic";
		case 6: "Group policy";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table MPSSVC_Enabled_Disabled_ValueMap(value)
{
	switch(value)
	{
		case 1: "Enabled";
		case 0: "Disabled";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table MPSSVC_Enabled_Disabled_Inv_ValueMap(value)
{
	switch(value)
	{
		case 0: "Enabled";
		case 1: "Disabled";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table MPSSVC_EdgeTraversal_ValueMap(value)
{
	switch(value)
	{
		case 0: "None";
		case 1: "Allow";
		case 2: "Defer to application";
		case 3: "Defer to user";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table MPSSVC_SecurityOptions_ValueMap(value)
{
	switch(value)
	{
		case 0: "None";
		case 1: "Require Authentication";
		case 2: "Require Encryption";
		case 3: "Require Authentication, Negotiate Encryption";
		case 4: "Require Authentication, Allow no encapsulation";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table MPSSVC_IPSecThroughNAT_ValueMap(value)
{
	switch(value)
	{
		case 0: "Never";
		case 1: "Server behind NAT";
		case 2: "Server and client behind NAT";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table MPSSVC_WFDir_ValueMap(value)
{
	switch(value)
	{
		case 1: "Inbound";
		case 2: "Outbound";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table MPSSVC_WFAction_ValueMap(value)
{
	switch(value)
	{
		case 1: "Authenticated IPSec Bypass";
		case 2: "Block";
		case 3: "Allow";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table MPSSVC_WFProfileType_ValueMap(value)
{
	switch(value)
	{
		case 0x80000001: "None";
		case 2: "Private";
		case 4: "Public";
		case 1: "Domain";
		case 3: "Private,Domain";
		case 5: "Public, Domain";
		case 6: "Public, Private";
		case 7: "Private,Domain, Public";
		case 0x7FFFFFFF: "Private,Domain, Public";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table MPSSVC_QU_NotShown_Reason_ValueMap(value)
{
	switch(value)
	{
		case 1: "The application is a system service";
		case 2: "The application is non interactive";
		case 4: "The firewall is off and the application is allowed";
		case 8: "The image is block listed";
		case 16: "The session is inactive";
		case 32: "An unknown error occurred";
		case 64: "Inbound notifications are not enabled";
		case 128: "All Inbound connections are disallowed";
		case 192: "All Inbound connections are disallowed, Inbound notifications are not enabled";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table MPSSVC_IPVersion_ValueMap(value)
{
	switch(value)
	{
		case 0: "IPv4";
		case 1: "IPv6";
		case 2: "Any";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table MPSSVC_Protocol_ValueMap(value)
{
	switch(value)
	{
		case 6: "TCP";
		case 17: "UDP";
		case 1: "ICMP V4";
		case 58: "ICMP V6";
		case 256: "Any";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table MPSSVC_WFCRL_ValueMap(value)
{
	switch(value)
	{
		case 0: "Disabled";
		case 1: "Check";
		case 2: "Enforce";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table MPSSVC_WFPSK_ValueMap(value)
{
	switch(value)
	{
		case 0: "None";
		case 1: "UTF8";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table MPSSVC_WFIPSecExempt_ValueMap(value)
{
	switch(value)
	{
		case 0: "None";
		case 1: "NeighborDiscovery";
		case 2: "ICMP";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table MPSSVC_WFCSAction_ValueMap(value)
{
	switch(value)
	{
		case 1: "Require authentication for inbound connections and request authentication for outbound connections";
		case 2: "Request authentication for inbound and outbound connections";
		case 3: "Require authentication for inbound and outbound connections";
		case 4: "Do not authenticate";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table MPSSVC_WFPhase1CryptoSetFlag_ValueMap(value)
{
	switch(value)
	{
		case 0: "None";
		case 1: "Do Not Skip DH";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table MPSSVC_WFPhase2CryptoSetPfs_ValueMap(value)
{
	switch(value)
	{
		case 0: "Invalid";
		case 1: "None";
		case 2: "MainMode";
		case 3: "DHGroup1";
		case 4: "DHGroup1";
		case 5: "DHGroup14";
		case 6: "ECDHP256";
		case 7: "ECDHP384";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table MPSSVC_WFIPsecPhase_ValueMap(value)
{
	switch(value)
	{
		case 0: "Invalid";
		case 1: "Phase 1";
		case 2: "Phase 2";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Struct MPSSVC_WFStartupConfigurationInfo = FormatString("The following settings were applied to the Windows Firewall at startup   Current Profile: %s  IPsec SA Idle time: %s  IPsec preshared key encoding: %s  IPsec Exempt: %s  IPsec CRL Check: %s  IPsec Through NAT: %s  Policy Version Supported: %s  Policy Version: %s  Binary Version Supported: %s  Stateful FTP: %s  Group Policy Applied: %s  Remote Machine Authorization List: %s  Remote UserAuthorization List: %s", CurrentProfile.ToString, SAIdleTime.ToString, PresharedKeyEncoding.ToString, IPSecExempt.ToString, CrlCheck.ToString, IPSecThroughNAT.ToString, PolicyVersionSupported.ToString, PolicyVersion.ToString, BinaryVersionSupported.ToString, DisableStatefulFTP.ToString, GroupPolicyApplied.ToString, RemoteMachineAuthorizationList.ToString, RemoteUserAuthorizationList.ToString)
{
	UINT32 CurrentProfile = MPSSVC_WFProfileType_ValueMap(this);
	UINT32 SAIdleTime;
	UINT32 PresharedKeyEncoding = MPSSVC_WFPSK_ValueMap(this);
	UINT32 IPSecExempt = MPSSVC_WFIPSecExempt_ValueMap(this);
	UINT32 CrlCheck = MPSSVC_WFCRL_ValueMap(this);
	UINT32 IPSecThroughNAT = MPSSVC_IPSecThroughNAT_ValueMap(this);
	UINT32 PolicyVersionSupported;
	UINT32 PolicyVersion;
	UINT32 BinaryVersionSupported;
	UINT32 DisableStatefulFTP = MPSSVC_Enabled_Disabled_Inv_ValueMap(this);
	UINT32 GroupPolicyApplied = MPSSVC_YesNo_ValueMap(this);
	UnicodeString RemoteMachineAuthorizationList;
	UnicodeString RemoteUserAuthorizationList;
}
Struct MPSSVC_WFStartupProfileConfigurationInfo = FormatString("The following per profile settings were applied by Windows Firewall    Profile: %s  Operational Mode: %s  Stealth Mode: %s  Block all Incoming Connections: %s  Unicast response to multicast broadcast: %s  Log dropped packets: %s  Log successful connections: %s  Log ignored rules: %s  Inbound Notifications: %s  Allow Local Policy Merge: %s  Allow Local IPsec Policy Merge: %s  Default Outbound Action: %s  Default Inbound Action: %s  Remote Administration: %s  Maximum Log file size: %s  Log File path: %s  Allow User preferred merge of Authorized Applications: %s  Allow User preferred merge of Globally open ports: %s", Profile.ToString, OpMode.ToString, DisableStealthMode.ToString, BlockAllInbound.ToString, DisableUnicastResponseToMultiCastBroadCast.ToString, LogDroppedPackets.ToString, LogSuccessfulConnections.ToString, LogIgnoredRules.ToString, DisableInboundNotifications.ToString, AllowLocalPolicyMerge.ToString, AllowIPSecPolicyMerge.ToString, DefaultOutboundAction.ToString, DefaultInboundAction.ToString, RemoteAdministrationEnabled.ToString, MaxLogFileSize.ToString, LogFilePath.ToString, AllowUserPrefMergeForApps.ToString, AllowUserPrefMergeForGlobalPorts.ToString)
{
	UINT32 Profile = MPSSVC_WFProfileType_ValueMap(this);
	UINT32 OpMode = MPSSVC_Enabled_Disabled_ValueMap(this);
	UINT32 DisableStealthMode = MPSSVC_Enabled_Disabled_Inv_ValueMap(this);
	UINT32 BlockAllInbound = MPSSVC_YesNo_ValueMap(this);
	UINT32 DisableUnicastResponseToMultiCastBroadCast = MPSSVC_Enabled_Disabled_Inv_ValueMap(this);
	UINT32 LogDroppedPackets = MPSSVC_YesNo_ValueMap(this);
	UINT32 LogSuccessfulConnections = MPSSVC_YesNo_ValueMap(this);
	UINT32 LogIgnoredRules = MPSSVC_YesNo_ValueMap(this);
	UINT32 DisableInboundNotifications = MPSSVC_Enabled_Disabled_Inv_ValueMap(this);
	UINT32 AllowUserPrefMergeForApps = MPSSVC_YesNo_ValueMap(this);
	UINT32 AllowUserPrefMergeForGlobalPorts = MPSSVC_YesNo_ValueMap(this);
	UINT32 AllowLocalPolicyMerge = MPSSVC_YesNo_ValueMap(this);
	UINT32 AllowIPSecPolicyMerge = MPSSVC_YesNo_ValueMap(this);
	UINT32 DefaultOutboundAction = MPSSVC_WFAllowBlock_ValueMap(this);
	UINT32 DefaultInboundAction = MPSSVC_WFAllowBlock_ValueMap(this);
	UINT32 RemoteAdministrationEnabled = MPSSVC_Enabled_Disabled_ValueMap(this);
	UINT32 MaxLogFileSize;
	UnicodeString LogFilePath;
	UINT32 DisabledInterfacesSize;
	BLOB(DisabledInterfacesSize) DisabledInterfaces;
}
Struct MPSSVC_WFGlobalConfigurationChangedEvent = FormatString("A Windows Firewall setting has changed.  New Setting:  Type: %s  Value: %s  Modifying User: %s  Modifying Application: %s", SettingType.ToString, SettingValueDisplay.ToString, ModifyingUser.ToString, ModifyingApplication.ToString)
{
	UINT32 SettingType = MPSSVC_WFGlobalConfigurationType_ValueMap(this);
	UINT32 SettingValueSize;
	BLOB(SettingValueSize) SettingValue;
	UnicodeString SettingValueDisplay;
	UINT32 Origin = MPSSVC_WFOrigin_ValueMap(this);
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
}
Struct MPSSVC_WFProfileConfigurationChangedEvent = FormatString("A Windows Firewall setting in the %s profile has changed. New Setting:  Type: %s  Value: %s  Modifying User: %s  Modifying Application: %s", Profiles.ToString, SettingType.ToString, SettingValueString.ToString, ModifyingUser.ToString, ModifyingApplication.ToString)
{
	UINT32 Profiles = MPSSVC_WFProfileType_ValueMap(this);
	UINT32 SettingType = MPSSVC_WFProfileConfigurationType_ValueMap(this);
	UINT32 SettingValueSize;
	BLOB(SettingValueSize) SettingValue;
	UnicodeString SettingValueString;
	UINT32 Origin = MPSSVC_WFOrigin_ValueMap(this);
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
}
Struct MPSSVC_WFRuleAddEvent = FormatString("A rule has been added to the Windows Firewall exception list.  Added Rule:  Rule ID: %s  Rule Name: %s  Origin: %s  Active: %s  Direction: %s  Profiles: %s  Action: %s  Application Path: %s  Service Name: %s  Protocol: %s  Security Options: %s  Edge Traversal: %s  Modifying User: %s  Modifying Application: %s", RuleId.ToString, RuleName.ToString, Origin.ToString, Active.ToString, Direction.ToString, Profiles.ToString, Action.ToString, ApplicationPath.ToString, ServiceName, Protocol.ToString, SecurityOptions.ToString, EdgeTraversal.ToString, ModifyingUser.ToString, ModifyingApplication.ToString)
{
	UnicodeString RuleId;
	UnicodeString RuleName;
	UINT32 Origin = MPSSVC_WFOrigin_ValueMap(this);
	UnicodeString ApplicationPath;
	UnicodeString ServiceName;
	UINT32 Direction = MPSSVC_WFDir_ValueMap(this);
	UINT16 Protocol = MPSSVC_Protocol_ValueMap(this);
	UnicodeString LocalPorts;
	UnicodeString RemotePorts;
	UINT32 Action = MPSSVC_WFAction_ValueMap(this);
	UINT32 Profiles = MPSSVC_WFProfileType_ValueMap(this);
	UnicodeString LocalAddresses;
	UnicodeString RemoteAddresses;
	UnicodeString RemoteMachineAuthorizationList;
	UnicodeString RemoteUserAuthorizationList;
	UnicodeString EmbeddedContext;
	UINT16 Flags;
	UINT16 Active = MPSSVC_YesNo_ValueMap(this);
	UINT16 EdgeTraversal = MPSSVC_EdgeTraversal_ValueMap(this);
	UINT16 LooseSourceMapped = MPSSVC_YesNo_ValueMap(this);
	UINT16 SecurityOptions = MPSSVC_SecurityOptions_ValueMap(this);
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
	UINT16 SchemaVersion;
	UINT32 RuleStatus;
}
Struct MPSSVC_WFRuleChangeEvent = FormatString("A rule has been modified in the Windows Firewall exception list.  Modified Rule:  Rule ID: %s  Rule Name: %s  Origin: %s  Active: %s  Direction: %s  Profiles: %s  Action: %s  Application Path: %s  Service Name: %s  Protocol: %s  Security Options: %s  Edge Traversal: %s  Modifying User: %s  Modifying Application: %s", RuleId.ToString, RuleName.ToString, Origin.ToString, Active.ToString, Direction.ToString, Profiles.ToString, Action.ToString, ApplicationPath.ToString, ServiceName, Protocol.ToString, SecurityOptions.ToString, EdgeTraversal.ToString, ModifyingUser.ToString, ModifyingApplication.ToString)
{
	UnicodeString RuleId;
	UnicodeString RuleName;
	UINT32 Origin = MPSSVC_WFOrigin_ValueMap(this);
	UnicodeString ApplicationPath;
	UnicodeString ServiceName;
	UINT32 Direction = MPSSVC_WFDir_ValueMap(this);
	UINT16 Protocol = MPSSVC_Protocol_ValueMap(this);
	UnicodeString LocalPorts;
	UnicodeString RemotePorts;
	UINT32 Action = MPSSVC_WFAction_ValueMap(this);
	UINT32 Profiles = MPSSVC_WFProfileType_ValueMap(this);
	UnicodeString LocalAddresses;
	UnicodeString RemoteAddresses;
	UnicodeString RemoteMachineAuthorizationList;
	UnicodeString RemoteUserAuthorizationList;
	UnicodeString EmbeddedContext;
	UINT16 Flags;
	UINT16 Active = MPSSVC_YesNo_ValueMap(this);
	UINT16 EdgeTraversal = MPSSVC_EdgeTraversal_ValueMap(this);
	UINT16 LooseSourceMapped = MPSSVC_YesNo_ValueMap(this);
	UINT16 SecurityOptions = MPSSVC_SecurityOptions_ValueMap(this);
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
	UINT16 SchemaVersion;
	UINT32 RuleStatus;
}
Struct MPSSVC_WFRuleDeleteEvent = FormatString("A rule has been deleted in the Windows Firewall exception list.  Deleted Rule:  Rule ID: %s  Rule Name: %s  Modifying User: %s  Modifying Application: %s", RuleId.ToString, RuleName.ToString, ModifyingUser.ToString, ModifyingApplication.ToString)
{
	UnicodeString RuleId;
	UnicodeString RuleName;
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
}
Struct MPSSVC_WFStartupRuleAddEvent = FormatString("A rule has been listed when the Windows Firewall started.  Added Rule:  Rule ID: %s  Rule Name: %s  Origin: %s  Active: %s  Direction: %s  Profiles: %s  Action: %s  Application Path: %s  Service Name: %s  Protocol: %s  Security Options: %s  Edge Traversal: %s", RuleId.ToString, RuleName.ToString, Origin.ToString, Active.ToString, Direction.ToString, Profiles.ToString, Action.ToString, ApplicationPath.ToString, ServiceName, Protocol.ToString, SecurityOptions.ToString, EdgeTraversal.ToString)
{
	UnicodeString RuleId;
	UnicodeString RuleName;
	UINT32 Origin = MPSSVC_WFOrigin_ValueMap(this);
	UnicodeString ApplicationPath;
	UnicodeString ServiceName;
	UINT32 Direction = MPSSVC_WFDir_ValueMap(this);
	UINT16 Protocol = MPSSVC_Protocol_ValueMap(this);
	UnicodeString LocalPorts;
	UnicodeString RemotePorts;
	UINT32 Action = MPSSVC_WFAction_ValueMap(this);
	UINT32 Profiles = MPSSVC_WFProfileType_ValueMap(this);
	UnicodeString LocalAddresses;
	UnicodeString RemoteAddresses;
	UnicodeString RemoteMachineAuthorizationList;
	UnicodeString RemoteUserAuthorizationList;
	UnicodeString EmbeddedContext;
	UINT16 Flags;
	UINT16 Active = MPSSVC_YesNo_ValueMap(this);
	UINT16 EdgeTraversal = MPSSVC_EdgeTraversal_ValueMap(this);
	UINT16 LooseSourceMapped = MPSSVC_YesNo_ValueMap(this);
	UINT16 SecurityOptions = MPSSVC_SecurityOptions_ValueMap(this);
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
	UINT16 SchemaVersion;
	UINT32 RuleStatus;
}
Struct MPSSVC_WFGroupPolicySuccessEvent = "Windows Firewall Group Policy settings have changed. The new settings have been applied" {}; // Empty Struct
Struct MPSSVC_WFGroupPolicyErrorEvent = FormatString("The Windows Firewall service failed to load Group Policy. Error: %s", ErrorCode.ToString)
{
	INT32 ErrorCode;
}
Struct MPSSVC_WFInterfaceProfileChanged = FormatString("Network profile changed on an interface.  Adapter GUID: %s Adapter Name: %s Old Profile: %s New Profile: %s", InterfaceGuid.ToString, InterfaceName.ToString, OldProfile.ToString, NewProfile.ToString)
{
	GUID(true) InterfaceGuid;
	UnicodeString InterfaceName;
	UINT32 OldProfile = MPSSVC_WFProfileType_ValueMap(this);
	UINT32 NewProfile = MPSSVC_WFProfileType_ValueMap(this);
}
Struct MPSSVC_WFUnableToShowQueryUserNotificationEvent = FormatString("Windows Firewall was unable to notify the user that it blocked an application from accepting incoming connections on the network.  Reason:  %s Application Path: %s IP Version: %s Protocol: %s Port:  %s Process Id: %s User:  %s", ReasonCode.ToString, ApplicationPath.ToString, IPVersion.ToString, Protocol.ToString, Port.ToString, ProcessId.ToString, ModifyingUser.ToString)
{
	UINT32 ReasonCode = MPSSVC_QU_NotShown_Reason_ValueMap(this);
	UnicodeString ApplicationPath;
	UINT8 IPVersion = MPSSVC_IPVersion_ValueMap(this);
	UINT16 Protocol = MPSSVC_Protocol_ValueMap(this);
	UINT16 Port;
	UINT32 ProcessId;
	SID(false) ModifyingUser;
}
Struct MPSSVC_WFCSRuleAddEvent = FormatString("A connection security rule was added to IPsec settings.   Rule ID: %s  Rule Name: %s  Origin: %s  Active: %s  Protocol: %s  EndPoint1Ports: %s  EndPoint2Ports: %s  LocalTunnelEndpointV4: %s  LocalTunnelEndpointV6: %s  RemoteTunnelEndpointV4: %s  RemoteTunnelEndpointV6: %s  Phase1AuthSetId: %s  Phase2AuthSetId: %s  Phase2CryptoSetId: %s  Action: %s  Profiles: %s  LocalAddresses: %s  RemoteAddresses: %s  EmbeddedContext: %s  IsDTM: %s  ApplyAuthZ: %s  BypassTunnelIfEncrypted: %s  NoIPSecOnOutbound: %s  ModifyingUser: %s  ModifyingApplication: %s", RuleId.ToString, RuleName.ToString, Origin.ToString, Active.ToString, Protocol.ToString, Endpoint1Ports.ToString, Endpoint2Ports.ToString, LocalTunnelEndpointV4.ToString, LocalTunnelEndpointV6.ToString, RemoteTunnelEndpointV4.ToString, RemoteTunnelEndpointV6.ToString, Phase1AuthSetId.ToString, Phase2AuthSetId.ToString, Phase2CryptoSetId.ToString, Action.ToString, Profiles.ToString, Endpoint1.ToString, Endpoint2.ToString, EmbeddedContext.ToString, IsDTM.ToString, ApplyAuthZ.ToString, BypassTunnelIfEncrypted.ToString, NoIPSecOnOutbound.ToString, ModifyingUser.ToString, ModifyingApplication.ToString)
{
	UnicodeString RuleId;
	UnicodeString RuleName;
	UINT32 Origin = MPSSVC_WFOrigin_ValueMap(this);
	UINT16 Active = MPSSVC_YesNo_ValueMap(this);
	UINT16 Protocol = MPSSVC_Protocol_ValueMap(this);
	UnicodeString Endpoint1Ports;
	UnicodeString Endpoint2Ports;
	[DataFieldByteOrder = BigEndian]IPv4Address LocalTunnelEndpointV4;
	[DataFieldByteOrder = BigEndian]IPv6Address LocalTunnelEndpointV6;
	[DataFieldByteOrder = BigEndian]IPv4Address RemoteTunnelEndpointV4;
	[DataFieldByteOrder = BigEndian]IPv6Address RemoteTunnelEndpointV6;
	UnicodeString Phase1AuthSetId;
	UnicodeString Phase2AuthSetId;
	UnicodeString Phase2CryptoSetId;
	UINT32 Action = MPSSVC_WFCSAction_ValueMap(this);
	UINT32 Profiles = MPSSVC_WFProfileType_ValueMap(this);
	UnicodeString Endpoint1;
	UnicodeString Endpoint2;
	UnicodeString MMParentRuleId;
	UnicodeString EmbeddedContext;
	UINT16 Flags;
	UINT16 IsDTM = MPSSVC_YesNo_ValueMap(this);
	UINT16 ApplyAuthZ = MPSSVC_YesNo_ValueMap(this);
	UINT16 BypassTunnelIfEncrypted = MPSSVC_YesNo_ValueMap(this);
	UINT16 NoIPSecOnOutbound = MPSSVC_YesNo_ValueMap(this);
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
	UINT16 SchemaVersion;
	UINT32 RuleStatus;
}
Struct MPSSVC_WFCSRuleChangeEvent = FormatString("A connection security rule was modified in IPsec settings.   Rule ID: %s  Rule Name: %s  Origin: %s  Active: %s  Protocol: %s  EndPoint1Ports: %s  EndPoint2Ports: %s  LocalTunnelEndpointV4: %s  LocalTunnelEndpointV6: %s  RemoteTunnelEndpointV4: %s  RemoteTunnelEndpointV6: %s  Phase1AuthSetId: %s  Phase2AuthSetId: %s  Phase2CryptoSetId: %s  Action: %s  Profiles: %s  LocalAddresses: %s  RemoteAddresses: %s  EmbeddedContext: %s  IsDTM: %s  ApplyAuthZ: %s  BypassTunnelIfEncrypted: %s  NoIPSecOnOutbound: %s  ModifyingUser: %s  ModifyingApplication: %s", RuleId.ToString, RuleName.ToString, Origin.ToString, Active.ToString, Protocol.ToString, Endpoint1Ports.ToString, Endpoint2Ports.ToString, LocalTunnelEndpointV4.ToString, LocalTunnelEndpointV6.ToString, RemoteTunnelEndpointV4.ToString, RemoteTunnelEndpointV6.ToString, Phase1AuthSetId.ToString, Phase2AuthSetId.ToString, Phase2CryptoSetId.ToString, Action.ToString, Profiles.ToString, Endpoint1.ToString, Endpoint2.ToString, EmbeddedContext.ToString, IsDTM.ToString, ApplyAuthZ.ToString, BypassTunnelIfEncrypted.ToString, NoIPSecOnOutbound.ToString, ModifyingUser.ToString, ModifyingApplication.ToString)
{
	UnicodeString RuleId;
	UnicodeString RuleName;
	UINT32 Origin = MPSSVC_WFOrigin_ValueMap(this);
	UINT16 Active = MPSSVC_YesNo_ValueMap(this);
	UINT16 Protocol = MPSSVC_Protocol_ValueMap(this);
	UnicodeString Endpoint1Ports;
	UnicodeString Endpoint2Ports;
	[DataFieldByteOrder = BigEndian]IPv4Address LocalTunnelEndpointV4;
	[DataFieldByteOrder = BigEndian]IPv6Address LocalTunnelEndpointV6;
	[DataFieldByteOrder = BigEndian]IPv4Address RemoteTunnelEndpointV4;
	[DataFieldByteOrder = BigEndian]IPv6Address RemoteTunnelEndpointV6;
	UnicodeString Phase1AuthSetId;
	UnicodeString Phase2AuthSetId;
	UnicodeString Phase2CryptoSetId;
	UINT32 Action = MPSSVC_WFCSAction_ValueMap(this);
	UINT32 Profiles = MPSSVC_WFProfileType_ValueMap(this);
	UnicodeString Endpoint1;
	UnicodeString Endpoint2;
	UnicodeString MMParentRuleId;
	UnicodeString EmbeddedContext;
	UINT16 Flags;
	UINT16 IsDTM = MPSSVC_YesNo_ValueMap(this);
	UINT16 ApplyAuthZ = MPSSVC_YesNo_ValueMap(this);
	UINT16 BypassTunnelIfEncrypted = MPSSVC_YesNo_ValueMap(this);
	UINT16 NoIPSecOnOutbound = MPSSVC_YesNo_ValueMap(this);
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
	UINT16 SchemaVersion;
	UINT32 RuleStatus;
}
Struct MPSSVC_WFCSRuleDeleteEvent = FormatString("A connection security rule was deleted from IPsec settings.  Deleted Rule:  Rule ID: %s  Rule Name: %s  Modifying User: %s  Modifying Application: %s", RuleId.ToString, RuleName.ToString, ModifyingUser.ToString, ModifyingApplication.ToString)
{
	UnicodeString RuleId;
	UnicodeString RuleName;
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
}
Struct MPSSVC_WFCSStartupRuleAddEvent = FormatString("A connection security rule was added to IPsec settings when Windows Firewall started.   Rule ID: %s  Rule Name: %s  Origin: %s  Active: %s  Protocol: %s  EndPoint1Ports: %s  EndPoint2Ports: %s  LocalTunnelEndpointV4: %s  LocalTunnelEndpointV6: %s  RemoteTunnelEndpointV4: %s  RemoteTunnelEndpointV6: %s  Phase1AuthSetId: %s  Phase2AuthSetId: %s  Phase2CryptoSetId: %s  Action: %s  Profiles: %s  LocalAddresses: %s  RemoteAddresses: %s  EmbeddedContext: %s  IsDTM: %s  ApplyAuthZ: %s  BypassTunnelIfEncrypted: %s  NoIPSecOnOutbound: %s  ModifyingUser: %s  ModifyingApplication: %s", RuleId.ToString, RuleName.ToString, Origin.ToString, Active.ToString, Protocol.ToString, Endpoint1Ports.ToString, Endpoint2Ports.ToString, LocalTunnelEndpointV4.ToString, LocalTunnelEndpointV6.ToString, RemoteTunnelEndpointV4.ToString, RemoteTunnelEndpointV6.ToString, Phase1AuthSetId.ToString, Phase2AuthSetId.ToString, Phase2CryptoSetId.ToString, Action.ToString, Profiles.ToString, Endpoint1.ToString, Endpoint2.ToString, EmbeddedContext.ToString, IsDTM.ToString, ApplyAuthZ.ToString, BypassTunnelIfEncrypted.ToString, NoIPSecOnOutbound.ToString, ModifyingUser.ToString, ModifyingApplication.ToString)
{
	UnicodeString RuleId;
	UnicodeString RuleName;
	UINT32 Origin = MPSSVC_WFOrigin_ValueMap(this);
	UINT16 Active = MPSSVC_YesNo_ValueMap(this);
	UINT16 Protocol = MPSSVC_Protocol_ValueMap(this);
	UnicodeString Endpoint1Ports;
	UnicodeString Endpoint2Ports;
	[DataFieldByteOrder = BigEndian]IPv4Address LocalTunnelEndpointV4;
	[DataFieldByteOrder = BigEndian]IPv6Address LocalTunnelEndpointV6;
	[DataFieldByteOrder = BigEndian]IPv4Address RemoteTunnelEndpointV4;
	[DataFieldByteOrder = BigEndian]IPv6Address RemoteTunnelEndpointV6;
	UnicodeString Phase1AuthSetId;
	UnicodeString Phase2AuthSetId;
	UnicodeString Phase2CryptoSetId;
	UINT32 Action = MPSSVC_WFCSAction_ValueMap(this);
	UINT32 Profiles = MPSSVC_WFProfileType_ValueMap(this);
	UnicodeString Endpoint1;
	UnicodeString Endpoint2;
	UnicodeString MMParentRuleId;
	UnicodeString EmbeddedContext;
	UINT16 Flags;
	UINT16 IsDTM = MPSSVC_YesNo_ValueMap(this);
	UINT16 ApplyAuthZ = MPSSVC_YesNo_ValueMap(this);
	UINT16 BypassTunnelIfEncrypted = MPSSVC_YesNo_ValueMap(this);
	UINT16 NoIPSecOnOutbound = MPSSVC_YesNo_ValueMap(this);
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
	UINT16 SchemaVersion;
	UINT32 RuleStatus;
}
Struct MPSSVC_WFMMRuleAddEvent = FormatString("A main mode rule has been added in the IPsec settings.   Rule ID: %s  Rule Name: %s  Profiles: %s  Endpoint1: %s  Endpoint2: %s  Phase1AuthSetId: %s  Phase1CryptoSetId: %s  Flags: %s  Active: %s  EmbeddedContext: %s  Origin: %s  ModifyingUser: %s  ModifyingApplication: %s", RuleId.ToString, RuleName.ToString, Profiles.ToString, Endpoint1.ToString, Endpoint2.ToString, Phase1AuthSetId.ToString, Phase1CryptoSetId.ToString, Flags.ToString, Active.ToString, EmbeddedContext.ToString, Origin.ToString, ModifyingUser.ToString, ModifyingApplication.ToString)
{
	UnicodeString RuleId;
	UnicodeString RuleName;
	UINT32 Profiles = MPSSVC_WFProfileType_ValueMap(this);
	UnicodeString Endpoint1;
	UnicodeString Endpoint2;
	UnicodeString Phase1AuthSetId;
	UnicodeString Phase1CryptoSetId;
	UINT16 Flags;
	UINT16 Active = MPSSVC_YesNo_ValueMap(this);
	UnicodeString EmbeddedContext;
	UINT32 Origin = MPSSVC_WFOrigin_ValueMap(this);
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
	UINT16 SchemaVersion;
	UINT32 RuleStatus;
}
Struct MPSSVC_WFMMRuleChangeEvent = FormatString("A main mode rule has been modified in the IPsec settings.   Rule ID: %s  Rule Name: %s  Profiles: %s  Endpoint1: %s  Endpoint2: %s  Phase1AuthSetId: %s  Phase1CryptoSetId: %s  Flags: %s  Active: %s  EmbeddedContext: %s  Origin: %s  ModifyingUser: %s  ModifyingApplication: %s", RuleId.ToString, RuleName.ToString, Profiles.ToString, Endpoint1.ToString, Endpoint2.ToString, Phase1AuthSetId.ToString, Phase1CryptoSetId.ToString, Flags.ToString, Active.ToString, EmbeddedContext.ToString, Origin.ToString, ModifyingUser.ToString, ModifyingApplication.ToString)
{
	UnicodeString RuleId;
	UnicodeString RuleName;
	UINT32 Profiles = MPSSVC_WFProfileType_ValueMap(this);
	UnicodeString Endpoint1;
	UnicodeString Endpoint2;
	UnicodeString Phase1AuthSetId;
	UnicodeString Phase1CryptoSetId;
	UINT16 Flags;
	UINT16 Active = MPSSVC_YesNo_ValueMap(this);
	UnicodeString EmbeddedContext;
	UINT32 Origin = MPSSVC_WFOrigin_ValueMap(this);
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
	UINT16 SchemaVersion;
	UINT32 RuleStatus;
}
Struct MPSSVC_WFMMRuleDeleteEvent = FormatString("A main mode rule has been deleted in the IPsec settings.  Deleted Rule:  Rule ID: %s  Rule Name: %s  Modifying User: %s  Modifying Application: %s", RuleId.ToString, RuleName.ToString, ModifyingUser.ToString, ModifyingApplication.ToString)
{
	UnicodeString RuleId;
	UnicodeString RuleName;
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
}
Struct MPSSVC_WFMMStartupRuleAddEvent = FormatString("A main mode rule was added to the IPsec settings when Windows Firewall started.   Rule ID: %s  Rule Name: %s  Profiles: %s  Endpoint1: %s  Endpoint2: %s  Phase1AuthSetId: %s  Phase1CryptoSetId: %s  Flags: %s  Active: %s  EmbeddedContext: %s  Origin: %s  ModifyingUser: %s  ModifyingApplication: %s", RuleId.ToString, RuleName.ToString, Profiles.ToString, Endpoint1.ToString, Endpoint2.ToString, Phase1AuthSetId.ToString, Phase1CryptoSetId.ToString, Flags.ToString, Active.ToString, EmbeddedContext.ToString, Origin.ToString, ModifyingUser.ToString, ModifyingApplication.ToString)
{
	UnicodeString RuleId;
	UnicodeString RuleName;
	UINT32 Profiles = MPSSVC_WFProfileType_ValueMap(this);
	UnicodeString Endpoint1;
	UnicodeString Endpoint2;
	UnicodeString Phase1AuthSetId;
	UnicodeString Phase1CryptoSetId;
	UINT16 Flags;
	UINT16 Active = MPSSVC_YesNo_ValueMap(this);
	UnicodeString EmbeddedContext;
	UINT32 Origin = MPSSVC_WFOrigin_ValueMap(this);
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
	UINT16 SchemaVersion;
	UINT32 RuleStatus;
}
Struct MPSSVC_WFPhase1CryptoSetAddEvent = FormatString("A phase 1 crypto set was added to IPsec settings.   Set ID: %s  Set Name: %s  Origin: %s  Flags: %s  NumSuites: %s  TimeOutMinutes: %s  TimeOutSessions: %s  ModifyingUser: %s  ModifyingApplication: %s", SetId.ToString, SetName.ToString, Origin.ToString, Flags.ToString, NumSuites.ToString, TimeOutMinutes.ToString, TimeOutSessions.ToString, ModifyingUser.ToString, ModifyingApplication.ToString)
{
	UnicodeString SetId;
	UnicodeString SetName;
	UnicodeString EmbeddedContext;
	UINT32 Origin = MPSSVC_WFOrigin_ValueMap(this);
	UINT32 CryptoSetFlags;
	UINT16 Flags = MPSSVC_WFPhase1CryptoSetFlag_ValueMap(this);
	UINT32 NumSuites;
	UINT32 SuitesBinaryLength;
	BLOB(SuitesBinaryLength) CryptoSuites;
	UINT32 TimeOutMinutes;
	UINT32 TimeOutSessions;
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
	UINT16 SchemaVersion;
	UINT32 RuleStatus;
}
Struct MPSSVC_WFPhase1CryptoSetChangeEvent = FormatString("A phase 1 crypto set was modified in IPsec settings.   Set ID: %s  Set Name: %s  Origin: %s  Flags: %s  NumSuites: %s  TimeOutMinutes: %s  TimeOutSessions: %s  ModifyingUser: %s  ModifyingApplication: %s", SetId.ToString, SetName.ToString, Origin.ToString, Flags.ToString, NumSuites.ToString, TimeOutMinutes.ToString, TimeOutSessions.ToString, ModifyingUser.ToString, ModifyingApplication.ToString)
{
	UnicodeString SetId;
	UnicodeString SetName;
	UnicodeString EmbeddedContext;
	UINT32 Origin = MPSSVC_WFOrigin_ValueMap(this);
	UINT32 CryptoSetFlags;
	UINT16 Flags = MPSSVC_WFPhase1CryptoSetFlag_ValueMap(this);
	UINT32 NumSuites;
	UINT32 SuitesBinaryLength;
	BLOB(SuitesBinaryLength) CryptoSuites;
	UINT32 TimeOutMinutes;
	UINT32 TimeOutSessions;
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
	UINT16 SchemaVersion;
	UINT32 RuleStatus;
}
Struct MPSSVC_WFPhase1CryptoSetDeleteEvent = FormatString("A phase 1 crypto set was deleted from IPsec settings.  Deleted Rule:  Rule ID: %s  Rule Name: %s  Modifying User: %s  Modifying Application: %s", RuleId.ToString, RuleName.ToString, ModifyingUser.ToString, ModifyingApplication.ToString)
{
	UnicodeString RuleId;
	UnicodeString RuleName;
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
}
Struct MPSSVC_WFPhase1CryptoSetStartupAddEvent = FormatString("A phase 1 crypto set was added to IPsec settings when Windows Firewall started.   Set ID: %s  Set Name: %s  Origin: %s  Flags: %s  NumSuites: %s  TimeOutMinutes: %s  TimeOutSessions: %s  ModifyingUser: %s  ModifyingApplication: %s", SetId.ToString, SetName.ToString, Origin.ToString, Flags.ToString, NumSuites.ToString, TimeOutMinutes.ToString, TimeOutSessions.ToString, ModifyingUser.ToString, ModifyingApplication.ToString)
{
	UnicodeString SetId;
	UnicodeString SetName;
	UnicodeString EmbeddedContext;
	UINT32 Origin = MPSSVC_WFOrigin_ValueMap(this);
	UINT32 CryptoSetFlags;
	UINT16 Flags = MPSSVC_WFPhase1CryptoSetFlag_ValueMap(this);
	UINT32 NumSuites;
	UINT32 SuitesBinaryLength;
	BLOB(SuitesBinaryLength) CryptoSuites;
	UINT32 TimeOutMinutes;
	UINT32 TimeOutSessions;
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
	UINT16 SchemaVersion;
	UINT32 RuleStatus;
}
Struct MPSSVC_WFPhase2CryptoSetAddEvent = FormatString("A phase 2 crypto set was added to IPsec settings.   Set ID: %s  Set Name: %s  Origin: %s  Pfs: %s  NumSuites: %s  ModifyingUser: %s  ModifyingApplication: %s", SetId.ToString, SetName.ToString, Origin.ToString, Pfs.ToString, NumSuites.ToString, ModifyingUser.ToString, ModifyingApplication.ToString)
{
	UnicodeString SetId;
	UnicodeString SetName;
	UnicodeString EmbeddedContext;
	UINT32 Origin = MPSSVC_WFOrigin_ValueMap(this);
	UINT32 CryptoSetFlags;
	UINT32 Pfs = MPSSVC_WFPhase2CryptoSetPfs_ValueMap(this);
	UINT32 NumSuites;
	UINT32 SuitesBinaryLength;
	BLOB(SuitesBinaryLength) CryptoSuites;
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
	UINT16 SchemaVersion;
	UINT32 RuleStatus;
}
Struct MPSSVC_WFPhase2CryptoSetChangeEvent = FormatString("A phase 2 crypto set was modified in IPsec settings.   Set ID: %s  Set Name: %s  Origin: %s  Pfs: %s  NumSuites: %s  ModifyingUser: %s  ModifyingApplication: %s", SetId.ToString, SetName.ToString, Origin.ToString, Pfs.ToString, NumSuites.ToString, ModifyingUser.ToString, ModifyingApplication.ToString)
{
	UnicodeString SetId;
	UnicodeString SetName;
	UnicodeString EmbeddedContext;
	UINT32 Origin = MPSSVC_WFOrigin_ValueMap(this);
	UINT32 CryptoSetFlags;
	UINT32 Pfs = MPSSVC_WFPhase2CryptoSetPfs_ValueMap(this);
	UINT32 NumSuites;
	UINT32 SuitesBinaryLength;
	BLOB(SuitesBinaryLength) CryptoSuites;
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
	UINT16 SchemaVersion;
	UINT32 RuleStatus;
}
Struct MPSSVC_WFPhase2CryptoSetDeleteEvent = FormatString("A phase 2 crypto set was deleted from IPsec settings.  Deleted Rule:  Rule ID: %s  Rule Name: %s  Modifying User: %s  Modifying Application: %s", RuleId.ToString, RuleName.ToString, ModifyingUser.ToString, ModifyingApplication.ToString)
{
	UnicodeString RuleId;
	UnicodeString RuleName;
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
}
Struct MPSSVC_WFPhase2CryptoSetStartupAddEvent = FormatString("A phase 2 crypto set was added to IPsec settings when Windows Firewall started.   Set ID: %s  Set Name: %s  Origin: %s  Pfs: %s  NumSuites: %s  ModifyingUser: %s  ModifyingApplication: %s", SetId.ToString, SetName.ToString, Origin.ToString, Pfs.ToString, NumSuites.ToString, ModifyingUser.ToString, ModifyingApplication.ToString)
{
	UnicodeString SetId;
	UnicodeString SetName;
	UnicodeString EmbeddedContext;
	UINT32 Origin = MPSSVC_WFOrigin_ValueMap(this);
	UINT32 CryptoSetFlags;
	UINT32 Pfs = MPSSVC_WFPhase2CryptoSetPfs_ValueMap(this);
	UINT32 NumSuites;
	UINT32 SuitesBinaryLength;
	BLOB(SuitesBinaryLength) CryptoSuites;
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
	UINT16 SchemaVersion;
	UINT32 RuleStatus;
}
Struct MPSSVC_WFAuthenticationSetAddEvent = FormatString("An authentication set has been added to IPsec settings.   Set ID: %s  Set Name: %s  IPsec Phase: %s  Origin: %s  NumSuites: %s  ModifyingUser: %s  ModifyingApplication: %s", SetId.ToString, SetName.ToString, IPsecPhase.ToString, Origin.ToString, NumSuites.ToString, ModifyingUser.ToString, ModifyingApplication.ToString)
{
	UnicodeString SetId;
	UnicodeString SetName;
	UINT32 IPsecPhase = MPSSVC_WFIPsecPhase_ValueMap(this);
	UnicodeString EmbeddedContext;
	UINT32 Origin = MPSSVC_WFOrigin_ValueMap(this);
	UINT32 AuthSetFlags;
	UINT32 NumSuites;
	UINT32 SuitesBinaryLength;
	BLOB(SuitesBinaryLength) AuthenticationSuites;
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
	UINT16 SchemaVersion;
	UINT32 RuleStatus;
}
Struct MPSSVC_WFAuthenticationSetChangeEvent = FormatString("An authentication set has been modified in IPsec settings.   Set ID: %s  Set Name: %s  IPsec Phase: %s  Origin: %s  NumSuites: %s  ModifyingUser: %s  ModifyingApplication: %s", SetId.ToString, SetName.ToString, IPsecPhase.ToString, Origin.ToString, NumSuites.ToString, ModifyingUser.ToString, ModifyingApplication.ToString)
{
	UnicodeString SetId;
	UnicodeString SetName;
	UINT32 IPsecPhase = MPSSVC_WFIPsecPhase_ValueMap(this);
	UnicodeString EmbeddedContext;
	UINT32 Origin = MPSSVC_WFOrigin_ValueMap(this);
	UINT32 AuthSetFlags;
	UINT32 NumSuites;
	UINT32 SuitesBinaryLength;
	BLOB(SuitesBinaryLength) AuthenticationSuites;
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
	UINT16 SchemaVersion;
	UINT32 RuleStatus;
}
Struct MPSSVC_WFAuthenticationSetDeleteEvent = FormatString("An authentication set has been deleted from IPsec settings.  Deleted Rule:  Rule ID: %s  Rule Name: %s  Modifying User: %s  Modifying Application: %s", RuleId.ToString, RuleName.ToString, IPsecPhase.ToString, ModifyingUser.ToString)
{
	UnicodeString RuleId;
	UnicodeString RuleName;
	UINT32 IPsecPhase = MPSSVC_WFIPsecPhase_ValueMap(this);
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
}
Struct MPSSVC_WFAuthenticationSetStartupAddEvent = FormatString("An authentication set has been added to IPsec settings when Windows Firewall started.   Set ID: %s  Set Name: %s  IPsec Phase: %s  Origin: %s  NumSuites: %s  ModifyingUser: %s  ModifyingApplication: %s", SetId.ToString, SetName.ToString, IPsecPhase.ToString, Origin.ToString, NumSuites.ToString, ModifyingUser.ToString, ModifyingApplication.ToString)
{
	UnicodeString SetId;
	UnicodeString SetName;
	UINT32 IPsecPhase = MPSSVC_WFIPsecPhase_ValueMap(this);
	UnicodeString EmbeddedContext;
	UINT32 Origin = MPSSVC_WFOrigin_ValueMap(this);
	UINT32 AuthSetFlags;
	UINT32 NumSuites;
	UINT32 SuitesBinaryLength;
	BLOB(SuitesBinaryLength) AuthenticationSuites;
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
	UINT16 SchemaVersion;
	UINT32 RuleStatus;
}
Struct MPSSVC_WFRestoreDefaultsEvent = FormatString("Windows Firewall has been reset to its default configuration.   ModifyingUser: %s  ModifyingApplication: %s", ModifyingUser.ToString, ModifyingApplication.ToString)
{
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
}
Struct MPSSVC_WFAllFirewallRulesDeletedEvent = FormatString("All rules have been deleted from the Windows Firewall configuration on this computer.   Store Type: %s  ModifyingUser: %s  ModifyingApplication: %s", StoreType.ToString, ModifyingUser.ToString, ModifyingApplication.ToString)
{
	UINT32 StoreType = MPSSVC_WFStoreType_ValueMap(this);
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
}
Struct MPSSVC_WFAllCSRulesDeletedEvent = FormatString("All connection security rules have been deleted from the IPsec configuration on this computer.   Store Type: %s  ModifyingUser: %s  ModifyingApplication: %s", StoreType.ToString, ModifyingUser.ToString, ModifyingApplication.ToString)
{
	UINT32 StoreType = MPSSVC_WFStoreType_ValueMap(this);
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
}
Struct MPSSVC_WFAllMMRulesDeletedEvent = FormatString("All main mode rules have been deleted from the IPsec configuration on this computer.   Store Type: %s  ModifyingUser: %s  ModifyingApplication: %s", StoreType.ToString, ModifyingUser.ToString, ModifyingApplication.ToString)
{
	UINT32 StoreType = MPSSVC_WFStoreType_ValueMap(this);
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
}
Struct MPSSVC_WFAllAuthenticationSetsDeletedEvent = FormatString("All authentication sets have been deleted from the IPsec configuration on this computer.   IPsec Phase: %s  Store Type: %s  ModifyingUser: %s  ModifyingApplication: %s", IPsecPhase.ToString, StoreType.ToString, ModifyingUser.ToString, ModifyingApplication.ToString)
{
	UINT32 IPsecPhase = MPSSVC_WFIPsecPhase_ValueMap(this);
	UINT32 StoreType = MPSSVC_WFStoreType_ValueMap(this);
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
}
Struct MPSSVC_WFAllCryptoSetsDeletedEvent = FormatString("All crypto sets have been deleted from the IPsec configuration on this computer.   IPsec Phase: %s  Store Type: %s  ModifyingUser: %s  ModifyingApplication: %s", IPsecPhase.ToString, StoreType.ToString, ModifyingUser.ToString, ModifyingApplication.ToString)
{
	UINT32 IPsecPhase = MPSSVC_WFIPsecPhase_ValueMap(this);
	UINT32 StoreType = MPSSVC_WFStoreType_ValueMap(this);
	SID(false) ModifyingUser;
	UnicodeString ModifyingApplication;
}
[RegisterBefore(NetEvent.UserData, MicrosoftWindowsMPSDRV, "{50bd1bfd-936b-4db3-86be-e25b96c25898}")]
Protocol MPSSVC_MicrosoftWindowsMPSDRV = property.ETLSummary
{
	[BuildConversationWithParent, conversation.ConversationDescription = ""]
	switch(property.EventID)
	{
		case 1: [property.ETLSummary = this.ToString] MPSSVC_MPS_DRV_Start_Begin MPS_DRV_Start_Begin;
		case 2: [property.ETLSummary = this.ToString] MPSSVC_MPS_DRV_Start_End MPS_DRV_Start_End;
		case 3: [property.ETLSummary = this.ToString] MPSSVC_MPS_DRV_Stop_Begin MPS_DRV_Stop_Begin;
		case 4: [property.ETLSummary = this.ToString] MPSSVC_MPS_DRV_Stop_End MPS_DRV_Stop_End;
		default: [property.ETLSummary = "Not exist EventID"]struct{};
	}
}
Struct MPSSVC_MPS_DRV_Start_Begin {}; // Empty Struct
Struct MPSSVC_MPS_DRV_Start_End {}; // Empty Struct
Struct MPSSVC_MPS_DRV_Stop_Begin {}; // Empty Struct
Struct MPSSVC_MPS_DRV_Stop_End {}; // Empty Struct
[RegisterBefore(NetEvent.UserData, MicrosoftWindowsFirewall, "{e595f735-b42a-494b-afcd-b68666945cd3}")]
Protocol MPSSVC_MicrosoftWindowsFirewall = property.ETLSummary
{
	[BuildConversationWithParent, conversation.ConversationDescription = ""]
	switch(property.EventID)
	{
		case 0x1900: [property.ETLSummary = this.ToString] MPSSVC_SYS_AUDITID_ETW_MPSFIREWALL_CALL_UNSUPPORTED SYS_AUDITID_ETW_MPSFIREWALL_CALL_UNSUPPORTED;
		default: [property.ETLSummary = "Not exist EventID"]struct{};
	}
}
Struct MPSSVC_SYS_AUDITID_ETW_MPSFIREWALL_CALL_UNSUPPORTED = FormatString("An attempt to programmatically disable the Windows Firewall using a call to INetFwProfile.FirewallEnabled(FALSE) interface was rejected because this API is not supported on Windows Vista. This has most likely occurred due to an application which is incompatible with Windows Vista. Please contact the application's vendor to make sure you have a Windows Vista compatible application version.  Error Code:  E_NOTIMPL Caller Process Name: %s Process Id:  %s Publisher:  %s", CallerProcessName.ToString, ProcessId.ToString, Publisher.ToString)
{
	UnicodeString CallerProcessName;
	UINT32 ProcessId;
	UnicodeString Publisher;
}
[RegisterBefore(EventDescriptor.DefaultKeyword, MicrosoftWindowsMPSSRV_Keyword, "{5444519f-2484-45a2-991e-953e4b54c8e0}")]
struct MPSSVC_MicrosoftWindowsMPSSRV_Keyword
{
	UINT64 Reserved1:16 = FormatString("(%s)", this.ToBitString);
	UINT64 Service:1 = FormatString("  (%s) %s", this.ToBitString, this? "NA": "");
	UINT64 Reserved2:47 = FormatString("(%s)", this.ToBitString);
}
[RegisterBefore(EventDescriptor.DefaultKeyword, MicrosoftWindowsMPSCLNT_Keyword, "{37945dc2-899b-44d1-b79c-dd4a9e57ff98}")]
struct MPSSVC_MicrosoftWindowsMPSCLNT_Keyword
{
	UINT64 Reserved1:16 = FormatString("(%s)", this.ToBitString);
	UINT64 Client:1 = FormatString("   (%s) %s", this.ToBitString, this? "NA": "");
	UINT64 Reserved2:47 = FormatString("(%s)", this.ToBitString);
}
[RegisterBefore(EventDescriptor.DefaultKeyword, MicrosoftWindowsWindowsFirewallWithAdvancedSecurity_Keyword, "{d1bc9aff-2abf-4d71-9146-ecb2a986eb85}")]
struct MPSSVC_MicrosoftWindowsWindowsFirewallWithAdvancedSecurity_Keyword
{
	UINT64 Reserved1:41 = FormatString("   (%s)", this.ToBitString);
	UINT64 utPiiPresent:1 = FormatString("(%s) %s", this.ToBitString, this? "KW_PII_PRESENT": "");
	UINT64 Reserved2:22 = FormatString("   (%s)", this.ToBitString);
}
[RegisterBefore(EventDescriptor.DefaultKeyword, MicrosoftWindowsMPSDRV_Keyword, "{50bd1bfd-936b-4db3-86be-e25b96c25898}")]
struct MPSSVC_MicrosoftWindowsMPSDRV_Keyword
{
	UINT64 Reserved1:17 = FormatString("(%s)", this.ToBitString);
	UINT64 Driver:1 = FormatString("   (%s) %s", this.ToBitString, this? "NA": "");
	UINT64 Reserved2:46 = FormatString("(%s)", this.ToBitString);
}
[RegisterBefore(EventDescriptor.DefaultKeyword, MicrosoftWindowsFirewall_Keyword, "{e595f735-b42a-494b-afcd-b68666945cd3}")]
struct MPSSVC_MicrosoftWindowsFirewall_Keyword
{
	UINT64 Reserved1:64 = FormatString("(%s)", this.ToBitString);
}

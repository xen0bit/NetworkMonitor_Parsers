//#  (c) 2009 CodePlex Foundation
//#
//#  Title:                  Real-Time Transport Protocol (RTP/RTCP): Redundant Audio Data Extensions
//#
//#  Details:                
//#
//#  Microsoft References:   [MS-RTPRAD]: Real-Time Transport Protocol (RTP/RTCP): Redundant Audio Data Extensions (0.1.1)
//#
//#  Comments:               
//#
//#  Revision Class and Date:Minor, 11/26/2009
//#
//####

[ RegisterBefore(RTP.RTPPayloadNotEncrypted.Payload, RTPRAD ,Global.RTPRADPayloadFlag$[property.RTPPayloadType]) ]
struct RTPRAD
{
	switch
	{
		case (UINT8( Framedata, Offset ) & 0x80) == 0x80:
			UINT32 BlockRedundant = FormatString("%s, length = %d|%d", "Redundant encoding data", local.BlockRedundantLegnth, local.BlockRedundantLegnth & 0x7F)
			{
				[local.BlockRedundantF]
				UINT32 F:1 = FormatString("              (%s)",this.ToBitString);
				UINT32 PT:7 = FormatString("             (%s) %s",this.ToBitString, RTPPayloadTypeTable(this));
				UINT32 TimestampOffset:14	= FormatString("(%s)", this.ToBitString);
				[local.BlockRedundantLegnth]
				UINT32 Length:10 = FormatString("         (%s)", this.ToBitString);
			};
	}
	UINT8 BlockPrimary = FormatString("%s", "Primary encoding data")
	{
		UINT8 F:1 = FormatString("              (%s)",this.ToBitString);
		UINT8 PT:7 = FormatString("             (%s) %s",this.ToBitString, RTPPayloadTypeTable(this));
	};
	switch(local.BlockRedundantF)
	{
		case true:
			BLOB(local.BlockRedundantLegnth) BlockRedundantData;
	}
	BLOB(FrameLength - FrameOffset) BlockPrimaryData;
};
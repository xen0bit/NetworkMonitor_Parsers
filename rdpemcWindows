//#  (c) 2009 CodePlex Foundation
//#
//#  Title:                  RDP - Remote Desktop Protocol:Multiparty Virtual Channel Extension
//#
//#  Details:                
//#
//#  Microsoft References:   [MS-RDPEMC]: Remote Desktop Protocol: Multiparty Virtual Channel Extension
//#
//#  Comments:               
//#
//#  Revision Class and Date:Minor, 6/2/2009
//#
//####

const ODTYPEFILTERSTATEUPDATED = 0x0001;
const ODTYPEAPPREMOVED = 0x0002;
const ODTYPEAPPCREATED = 0x0003;
const ODTYPEWNDREMOVED = 0x0004;
const ODTYPEWNDCREATED = 0x0005;
const ODTYPEWNDSHOW = 0x0006;
const ODTYPEPARTICIPANTREMOVED = 0x0007;
const ODTYPEPARTICIPANTCREATED = 0x0008;
const ODTYPEPARTICIPANTCTRLCHANGED = 0x0009;
const ODTYPEGRAPHICSSTREAMPAUSED = 0x000A;
const ODTYPEGRAPHICSSTREAMRESUMED = 0x000B;

Protocol RDPEMC = FormatString ("Type = %s, Length = %s", RDPEMCTypeTable(RDPEMCType),RDPEMCLength)
{
	UINT16 RDPEMCType=RDPEMCTypeTable(this);
	UINT16 RDPEMCLength;
	switch(RDPEMCType)
	{
		case ODTYPEFILTERSTATEUPDATED:
		     	[DataFieldByteOrder = LittleEndian]
		     	UINT8 FSUFlags
		     	{
		     		UINT8 FILTERENABLED:1 = FormatString("(%s) %s",this.ToBitString,this ? "The filter is enabled." : "The filter isn't enabled.");
		     		UINT8 Reserved:7 = FormatString("     (%s) %s",this.ToBitString,this );
		     	};
		case ODTYPEAPPREMOVED:
			    UINT32 ARAppId;
		case ODTYPEAPPCREATED:
					struct ODAPPCREATED
					{
						[DataFieldByteOrder = LittleEndian]
						UINT16 ACFlags
						{
		     			UINT16 APPLICATIONSHARED:1 = FormatString("(%s) %s",this.ToBitString,this ? "The application is shared." : "The application isn't shared.");
		     			UINT16 Reserved:15 = FormatString("        (%s) %s",this.ToBitString,this );
		     		};
		     		UINT32 ACAppId;
		     			[DataFieldByteOrder = LittleEndian]
						UnicodeString ACName;
						switch
						{
							case CurrentProtocolOffset % 4:
											Align4 ACpad;
						}
					}
		case ODTYPEWNDREMOVED:
			     UINT32 WRWndId;
		case ODTYPEWNDCREATED:
			     struct ODWNDCREATED
					{
						[DataFieldByteOrder = LittleEndian]
						UINT16 WCFlags
						{
		     			UINT16 WINDOWSHARED:1 = FormatString("(%s) %s",this.ToBitString,this ? "The window is shared." : "The window isn't shared.");
		     			UINT16 Reserved:15 = FormatString("   (%s) %s",this.ToBitString,this );
		     		};
		     		UINT32 WCAppId;
		     		UINT32 WCWndId;
		     		[DataFieldByteOrder = LittleEndian]
		     		UnicodeString WCName;
						switch
						{
							case CurrentProtocolOffset % 4:
											Align4 WCpad;
						}
					}
		case ODTYPEWNDSHOW:
			     UINT32 WSWndId;
		case ODTYPEPARTICIPANTREMOVED:
					 struct ODWNDCREATED
					{
					 UINT32 PRParticipantId;
					 UINT32 PRDiscType=PRDiscTypetable(this);
			     UINT32 PRDiscCode=PRDiscCodtable(this);
			    }
		case ODTYPEPARTICIPANTCREATED:     
			    struct ODPARTICIPANTCREATED
					{
					 UINT32 PCParticipantId;
					 UINT32 PCGroupId;
			     [DataFieldByteOrder = LittleEndian]
			     UINT16 PCFlags
						{
		     			UINT16 MAYVIEW:1 = FormatString("      (%s) %s",this.ToBitString,this ? "The participant has permission to view the shared desktop." 
		     																																						: "The participant hasn't permission to view the shared desktop.");
		     			UINT16 MAYINTERACT:1 = FormatString("  (%s) %s",this.ToBitString,this ? "The participant has permission to interact with the shared desktop." 
		     																																						: "The participant hasn't permission to interact with the shared desktop.");
							UINT16 ISPARTICIPANT:1 = FormatString("(%s) %s",this.ToBitString,this ? "The participant has permission to interact with the shared desktop." 
		     																																						: "The participant hasn't permission to interact with the shared desktop.");
							UINT16 Reserved:13 = FormatString("    (%s) %s",this.ToBitString,this );
		     		};
		     		[DataFieldByteOrder = LittleEndian]
		     		UnicodeString PCFriendlyName;
		     		switch
						{
							case CurrentProtocolOffset % 4:
											Align4 PCpad;
						}
			    }
		case ODTYPEPARTICIPANTCTRLCHANGED:     
					struct ODPARTICIPANTCTRLCHANGE
					{
						[DataFieldByteOrder = LittleEndian]
						UINT16 PCCFlags
						{
		     			UINT16 REQUESTVIEW:1 = FormatString("    (%s) %s",this.ToBitString,this ? "The participant is requesting view permission."
																																											: "The participant isn't requesting view permission.");
		     			UINT16 REQUESTINTERACT:1 = FormatString("(%s) %s",this.ToBitString,this ? "The participant is requesting interact permission."
																																											: "The participant isn't requesting interact permission.");
		     			UINT16 Reserved:14 = FormatString("      (%s) %s",this.ToBitString,this );
		     		};
		     		UINT32 PCCParticipantId;
					}
		case ODTYPEGRAPHICSSTREAMPAUSED: 
					_struct ODGRAPHICSSTREAMPAUSED{};
		case ODTYPEGRAPHICSSTREAMRESUMED: 
			    _struct ODGRAPHICSSTREAMRESUMED{};                                             
		default:                                                          
			Blob(FrameLength - FrameOffset) UnknownTypeData;
	}             
}	  



Table RDPEMCTypeTable(Value)
{
	switch(value)
	{
		case 0x0001: "ODTYPE_FILTER_STATE_UPDATED";
		case 0x0002: "ODTYPE_APP_REMOVED";
		case 0x0003: "ODTYPE_APP_CREATED";
		case 0x0004: "ODTYPE_WND_REMOVED";
		case 0x0005: "ODTYPE_WND_CREATED";
		case 0x0006: "ODTYPE_WND_SHOW";
		case 0x0007: "ODTYPE_PARTICIPANT_REMOVED";
		case 0x0008: "ODTYPE_PARTICIPANT_CREATED";
		case 0x0009: "ODTYPE_PARTICIPANT_CTRL_CHANGE";
		case 0x000A: "ODTYPE_GRAPHICS_STREAM_PAUSED";
		case 0x000B: "ODTYPE_GRAPHICS_STREAM_RESUMED";
		default    : "Unknown Type";
	}
}

Table PRDiscTypetable(Value)
{
	switch(value)
	{
		case 0x00000000: "Indicates that the disconnect was initiated by the host.";
		case 0x00000001: "Indicates this was a participant-initiated disconnect.";
		default        : "Unknown DisType";
	}
}

Table PRDiscCodtable(Value)
{
	switch(value)
	{
		case 0x00000000: "The participant was not disconnected because of an error.";
		case 0xD0000001: "The disconnect was the result of an error on the host's side.";
		case 0xD000A006: "The disconnect occurred.This particular code could be sent as a result of the participant disconnecting.";
		default        : "Unknown DiscCode";
	}
}
                                                               
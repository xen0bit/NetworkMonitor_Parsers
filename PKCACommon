//#  (c) 2009 CodePlex Foundation
//#
//#  Title:                  Kerberos Network Authentication Service v5
//#
//#  Details:                
//#
//#  Public References:      RFC 4120 (1510) Kerberos v5
//#                          RFC 3961 Encryption & Checksums
//#                          RFC 4556 Public Key Cryptography for Initial Authentication in Kerberos (PKINIT)
//#  Microsoft References:   [MS-PKCA]: Public Key Cryptography for Initial Authentication (PKINIT) in Kerberos Protocol Specification (1.5.2)
//#
//#  Comments:               
//#
//#  Revision Class and Date:Major, 4/20/2009
//#                          Minor, 5/6/2009
//#
//####

//
// 2.2.2 PA-PK-AS-REQ
//

Struct PKCAPaPkAsReq
{
	AsnBerInfo SequenceHeader;
	[ PKCAPaPkAsReqSequenceEnd = FrameOffset + LengthValue ]
	AsnBerInfo Tag0;
	CmsContentInfo SignedAuthPack;
	Switch
	{
		Case FrameOffset < PKCAPaPkAsReqSequenceEnd:
			Struct
			{
				Switch (UINT8(FrameData,FrameOffset))
				{
					Case 0xA1:
						Struct
						{
							AsnBerInfo Tag1;
							AsnBerInfo SequenceOfHeader;
							[PkInittrustedCAsSequenceEnd = FrameOffset + LengthValue]
							While TrustedCAs[ FrameOffset < PkInittrustedCAsSequenceEnd ] 
							{
								ExternalPrincipalIdentifier TrustedCertifiers;
								//TrustedCAs TrustedCertifiers;
							}
						}
				}
	
				Switch (UINT8(FrameData,FrameOffset))
				{
					Case 0x82:
						Struct
						{
							AsnBerInfo Tag2;
							CmsSignerIdentifier kdcPkId;
							//CmsIssuerAndSerialNumber KdcCert;
						}
				}
			}
	}
}

//
// 2.2.3 PA-PK-AS-REP
//

Struct PKCAPaPkAsRep
{
	Switch (UINT8(FrameData,FrameOffset))
	{
		Case 0xA0:
			Struct
			{
				AsnBerInfo Tag0;
				DHRepInfo dhInfo;
			}
		Case 0x81:
			Struct
			{
				AsnBerInfo Tag1;
				CmsContentInfo EncKeyPack;
			}
	}
}

//#  (c) 2009 CodePlex Foundation
//#
//#  Title:                  Windows Security Health
//#
//#  Details:                
//#
//#  Microsoft References:   [MS-WSH]: Windows Security Health Agent (WSHA) and Windows Security Health Validator (WSHV) Protocol Specification (6.0)
//#
//#  Comments:               The messages in WSH are included in MS-SOH implemented in nap.npl
//#
//#  Revision Class and Date:Minor, 12/12/2008
//#
//####

Table WSHHealthClassIDTable(value)
{
	switch(value)
	{
		case 0x00: "Firewall";
		case 0x01: "Antivirus";
		case 0x02: "Antispyware";
		case 0x03: "Automatic Updates";
		case 0x04: "Security Updates";
		default:FormatString("0x%x,Undefined Health Class",value);
	}
}
Table WSHVersionTable(value)
{
	switch(value)
	{
		case 0x00050001: "Windows XP WSHA";
		case 0x00060000: "Windows Vista WSHA";
		case 0x00060001: "Windows Vista SP1 WSHA";
		default:FormatString("0x%x,Undefined system",value);
	}
}
//including the server and the client's status code
Table WSHStatusCodeTable(value)
{
	switch(value)
	{
		case 0x00000000: "S_OK";
		case 0x00FF0005: "S_MSSHA_NO_MISSING_UPDATES";
		case 0x00FF0006: "S_MSSHA_ MISSING_UPDATES";
		case 0x00FF0008: "E_MSSHAV_WUA_SERVICE_NOT_STARTED_SINCE_BOOT";//also an error code status
		case 0xC0FF000C: "E_MSSHAV_NO_WUS_SERVER";
		case 0xC0FF000D: "E_MSSHAV_NO_CLIENT_ID";
		case 0xC0FF000E: "E_MSSHAV_WUA_SERVICE_DISABLED";
		case 0xC0FF000F: "E_MSSHAV_WUA_COMM_FAILURE";
		case 0xC0FF0010: "E_MSSHAV_UPDATES_INSTALLED_REQUIRE_REBOOT";
		case 0xC0FF0002: "E_MSSHAV_PRODUCT_NOT_INSTALLED";
		case 0xC0FF0003: "E_MSSHAV_WSC_SERVICE_DOWN";
		case 0xC0FF0018: "E_MSSHAV_WSC_SERVICE_NOT_STARTED_SINCE_BOOT";
		
		case 0xC0FF0004: "E_MSSHV_PRODUCT_NOT_UPTODATE";
		case 0xC0FF0048: "E_MSSHV_THIRD_PARTY_PRODUCT_NOT_UPTODATE";
		case 0xC0FF0001: "E_MSSHV_PRODUCT_NOT_ENABLED";
		case 0xC0FF0047: "E_MSSHV_THIRD_PARTY_PRODUCT_NOT_ENABLED";
		case 0xC0FF0015: "E_MSSHV_SHC_FAILURE";
		case 0xC0FF0007: "E_MSSHV_SYNC_AND_INSTALL_UPDATES";
		case 0xC0FF0012: "E_MSSHV_WUS_SHC_FAILURE";
		case 0xC0FF0017: "E_MSSHV_INVALID_SOH";
		case 0xC0FF004E: "E_MSSHAV_ BAD_UPDATE_SOURCE_MU";
		case 0xC0FF004F: "E_MSSHAV_BAD_UPDATE_SOURCE_WUMU";
		case 0xC0FF0050: "E_MSSHAV_BAD_UPDATE_SOURCE_MUWSUS";
		case 0xC0FF0051: "E_MSSHAV_NO_UPDATE_SOURCE";
		default:FormatString("Undefined Code(0x%x)",value);
	}
}

//WSHA SoH
[RegisterBefore(SoHAttribute.VendorSpecific.VendorSpecificSOHValue,WSHASOHValue,79744)]
struct WSHASOHValue
{
	[Property.NAPSoHAttributeCount = Property.NAPSoHAttributeCount + 1]
	switch
	{
		case Property.NAPSoHAttributeCount == 1:
			[DataFieldByteOrder = LittleEndian]
			UINT32 Flag2;
		case Property.NAPSoHAttributeCount == 2:
			[DataFieldByteOrder = LittleEndian]
			UINT32 Version = WSHVersionTable(this);
		case Property.NAPSoHAttributeCount == 3:
			[DataFieldByteOrder = LittleEndian]
			UINT32 DurationSinceLastSynch;
		case Property.NAPSoHAttributeCount == 4:
			AsciiString(Property.SohAttributeLength) WSUSServerName;
		case Property.NAPSoHAttributeCount == 5:
			[DataFieldByteOrder = LittleEndian]
			UINT32 UpdateFlag
			{
				UINT32 Reserved1:6   = FormatString("  (%s) %s", this.ToBitString,this );
				UINT32 Unspecified:1 = FormatString("(%s) %s", this.ToBitString, this ? "Unspecified" : " ");
				UINT32 Low:1         = FormatString("        (%s) %s", this.ToBitString, this ? "Low" : " " );
				UINT32 Moderate:1    = FormatString("   (%s) %s", this.ToBitString, this ? "Moderate" : " ");
				UINT32 Important:1   = FormatString("  (%s) %s", this.ToBitString, this? "Important": " ");
				UINT32 Critical:1    = FormatString("   (%s) %s", this.ToBitString, this ? "Critical" : " ");
				UINT32 Reserved2:3   = FormatString("  (%s) %s", this.ToBitString,this );
				UINT32 Windows:1     = FormatString("    (%s) %s", this.ToBitString, this ? "Windows Update" : " ");
				UINT32 Reserved3:1   = FormatString("  (%s) %s", this.ToBitString,this );
				UINT32 WSUS:1        = FormatString("       (%s) %s", this.ToBitString, this? "WSUS":" ");
				UINT32 Microsoft:1   = FormatString("  (%s) %s", this.ToBitString, this? "Microsoft Update":" ");
				UINT32 Reserved4:14  = FormatString("  (%s) %s", this.ToBitString,this );
			};
	}
}



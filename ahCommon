//#  (c) 2009 CodePlex Foundation
//#
//#  Title:                  IP Authentication Header
//#
//#  Details:                
//#
//#  Public References:      RFC 2402, 1700
//#
//#  Comments:               
//#
//#  Revision Class and Date:Minor, 6/17/2009
//#
//####

Protocol AH = FormatString("Next Protocol = %s, SPI = 0x%X, Seq = 0x%X ",
							ProtocolTypeAbbreviationTable( NextHeader ),
							SecurityParametersIndex,
							SequenceNumber
							)
{
	[ Property.AHNextProtocol ]
	// [rfc 1700 page7  PROTOCOL NUMBERS]
	UINT8 NextHeader = FormatString("%s, %d(%#x)",ProtocolTypeTable( this ),this,this);
	// [rfc2402  Page3  2.2  Payload Length]
	// Payload Length
	// note: this 8-bit field specifies the length of AH in 32-bit words (4-UINT8 units), minus "2".
	UINT8 PayloadLength = FormatString("%d bytes",(this+2)*4);
	UINT16 Reserved;
	UINT32 SecurityParametersIndex;
	UINT32 SequenceNumber;
	AsciiString((PayloadLength+2)*4-12) AuthenticationData = FormatString("%d UINT8(s)",(PayloadLength+2)*4-12);
	switch
	{
		case offset < frameLength:
		
			switch(NextHeader)
			{
				case 0x00:IPv6ExtensionHopbyHopHeader HopbyHopHeader;
				case 0x01:ICMP Icmp;
				case 0x02:IGMP Igmp;
				case 0x04:IPv4 IPinIP;
				case 0x06:TCP Tcp;
				case 0x11:UDP Udp;
				case 0x25:DDP DdP;
				case 0x29:IPv6 Ipv6;
				case 0x2B:IPv6ExtensionRoutingHeader RoutingHeader;
				case 0x2C:IPv6ExtensionFragmentHeader FragmentHeader;
				case 0x2E:RSVP Rsvp;
				case 0x2F:GRE Gre;
				case 0x32:ESP Esp;
				case 0x33:AH Ah;
				case 0x3A:ICMPv6 Icmpv6;
				case 0x3C:IPv6ExtensionDestOptionsHeader DestOptionsHeader;
				case 0x59:OSPF Ospf;
				case 0x5A:SunRPC SunRPC;
				//case 0x5B:ARP LocusARP;
				case 0x5B:ARP Arp;
				case 0x5E:IPv4 IPwhithinIP;
				case 0x6F:IPX Ipx;
				case 0x87:IPv6ExtensionMobilityHeader MobilityHeader;
			}
	}
}

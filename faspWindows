//#  (c) 2009 CodePlex Foundation
//#
//#  Title:                  Firewall and Advanced Security Protocol
//#
//#  Details:                
//#
//#  Microsoft References:   [MS-FASP]: Firewall and Advanced Security Protocol Specification
//#
//#  Comments:               Parser Framework: PAC v2.1.1577.0
//#
//#  Revision Class and Date:Major, 5/21/2009
//#
//####

Protocol FASP = FormatString( "%s %s%s%s%s%s", 
	Property.FASPMethodName,
	Property.MSRPCPType ? "Response" : "Request",
	Property.MSRPCPfcFlags & 0x03 == 0x01 ? ", RPC first fragment" : "",
	Property.MSRPCCompleteFrag == 0 ? ", partial" : "",
	Property.MSRPCEncrypted == ConstEncTypeEncrypted ? ", *Encrypted*" : Property.MSRPCEncrypted == ConstEncTypeUnknown ? "*Un-Interpreted*" : "",
	Property.FASPSummary && Property.MSRPCEncrypted == ConstEncTypeClearData ? ", " + Property.FASPSummary : "" )
{
	[Property.FASPSummary = ""]
	[Property.FASPMethodName = FASPMethodNameTable( Property.MSRPCOpnum )]
	Switch( Property.MSRPCOpnum )
	{
		Case 0:
			_Struct RrpcFWOpenPolicyStore
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{							
							Blob( FrameLength - FrameOffset ) EncryptedData;								
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 1:
			_Struct RrpcFWClosePolicyStore
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 2:
			_Struct RrpcFWRestoreDefaults
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 3:
			_Struct RrpcFWGetGlobalConfig
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 4:
			_Struct RrpcFWSetGlobalConfig
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 5:
			_Struct RrpcFWAddFirewallRule
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 6:
			_Struct RrpcFWSetFirewallRule
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 7:
			_Struct RrpcFWDeleteFirewallRule
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 8:
			_Struct RrpcFWDeleteAllFirewallRules
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 9:
			_Struct RrpcFWEnumFirewallRules
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 10:
			_Struct RrpcFWGetConfig
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 11:
			_Struct RrpcFWSetConfig
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 12:
			_Struct RrpcFWAddConnectionSecurityRule
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 13:
			_Struct RrpcFWSetConnectionSecurityRule
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 14:
			_Struct RrpcFWDeleteConnectionSecurityRule
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 15:
			_Struct RrpcFWDeleteAllConnectionSecurityRules
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 16:
			_Struct RrpcFWEnumConnectionSecurityRules
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 17:
			_Struct RrpcFWAddAuthenticationSet
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 18:
			_Struct RrpcFWSetAuthenticationSet
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 19:
			_Struct RrpcFWDeleteAuthenticationSet
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 20:
			_Struct RrpcFWDeleteAllAuthenticationSets
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 21:
			_Struct RrpcFWEnumAuthenticationSets
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 22:
			_Struct RrpcFWAddCryptoSet
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 23:
			_Struct RrpcFWSetCryptoSet
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 24:
			_Struct RrpcFWDeleteCryptoSet
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 25:
			_Struct RrpcFWDeleteAllCryptoSets
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 26:
			_Struct RrpcFWEnumCryptoSets
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 27:
			_Struct RrpcFWEnumPhase1SAs
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 28:
			_Struct RrpcFWEnumPhase2SAs
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 29:
			_Struct RrpcFWDeletePhase1SAs
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 30:
			_Struct RrpcFWDeletePhase2SAs
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 31:
			_Struct RrpcFWEnumProducts
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 32:
			_Struct RrpcFWAddMainModeRule
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 33:
			_Struct RrpcFWSetMainModeRule
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 34:
			_Struct RrpcFWDeleteMainModeRule
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 35:
			_Struct RrpcFWDeleteAllMainModeRules
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 36:
			_Struct RrpcFWEnumMainModeRules
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 37:
			_Struct RrpcFWQueryFirewallRules
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 38:
			_Struct RrpcFWQueryConnectionSecurityRules
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 39:
			_Struct RrpcFWQueryMainModeRules
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 40:
			_Struct RrpcFWQueryAuthenticationSets
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 41:
			_Struct RrpcFWQueryCryptoSets
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 42:
			_Struct RrpcFWEnumNetworks
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 43:
			_Struct RrpcFWEnumAdapters
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 44:
			_Struct RrpcFWGetGlobalConfig210
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 45:
			_Struct RrpcFWGetConfig210
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 46:
			_Struct RrpcFWAddFirewallRule210
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 47:
			_Struct RrpcFWSetFirewallRule210
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 48:
			_Struct RrpcFWEnumFirewallRules210
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 49:
			_Struct RrpcFWAddConnectionSecurityRule210
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 50:
			_Struct RrpcFWSetConnectionSecurityRule210
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 51:
			_Struct RrpcFWEnumConnectionSecurityRules210
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 52:
			_Struct RrpcFWAddAuthenticationSet210
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 53:
			_Struct RrpcFWSetAuthenticationSet210
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 54:
			_Struct RrpcFWEnumAuthenticationSets210
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 55:
			_Struct RrpcFWAddCryptoSet210
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 56:
			_Struct RrpcFWSetCryptoSet210
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Case 57:
			_Struct RrpcFWEnumCryptoSets210
			{
				Switch( Property.MSRPCPType )
				{
					Case 0x00: //REQUEST
						_Struct Request
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
					
					Case 0x02: //RESPONSE
						_Struct Response
						{
							Blob( FrameLength - FrameOffset ) EncryptedData;
						}
				}
			}
		
		Default:
			Switch
			{
				case IsValueNone(Property.MSRPCOpnum):
					struct
					{
						Blob( FrameLength - Offset ) data;
						ReportParserWarning("FASP", "Property MSRPCOpnum is missing") ParserWarning;
					}
				default:
					ReportParserError( ParserErrorProtocolClassWindows, "FASP", "Unknown RemoteFW method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
			}
	}
}

Table FASPMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 0: "RRPC_FWOpenPolicyStore";
		Case 1: "RRPC_FWClosePolicyStore";
		Case 2: "RRPC_FWRestoreDefaults";
		Case 3: "RRPC_FWGetGlobalConfig";
		Case 4: "RRPC_FWSetGlobalConfig";
		Case 5: "RRPC_FWAddFirewallRule";
		Case 6: "RRPC_FWSetFirewallRule";
		Case 7: "RRPC_FWDeleteFirewallRule";
		Case 8: "RRPC_FWDeleteAllFirewallRules";
		Case 9: "RRPC_FWEnumFirewallRules";
		Case 10: "RRPC_FWGetConfig";
		Case 11: "RRPC_FWSetConfig";
		Case 12: "RRPC_FWAddConnectionSecurityRule";
		Case 13: "RRPC_FWSetConnectionSecurityRule";
		Case 14: "RRPC_FWDeleteConnectionSecurityRule";
		Case 15: "RRPC_FWDeleteAllConnectionSecurityRules";
		Case 16: "RRPC_FWEnumConnectionSecurityRules";
		Case 17: "RRPC_FWAddAuthenticationSet";
		Case 18: "RRPC_FWSetAuthenticationSet";
		Case 19: "RRPC_FWDeleteAuthenticationSet";
		Case 20: "RRPC_FWDeleteAllAuthenticationSets";
		Case 21: "RRPC_FWEnumAuthenticationSets";
		Case 22: "RRPC_FWAddCryptoSet";
		Case 23: "RRPC_FWSetCryptoSet";
		Case 24: "RRPC_FWDeleteCryptoSet";
		Case 25: "RRPC_FWDeleteAllCryptoSets";
		Case 26: "RRPC_FWEnumCryptoSets";
		Case 27: "RRPC_FWEnumPhase1SAs";
		Case 28: "RRPC_FWEnumPhase2SAs";
		Case 29: "RRPC_FWDeletePhase1SAs";
		Case 30: "RRPC_FWDeletePhase2SAs";
		Case 31: "RRPC_FWEnumProducts";
		Case 32: "RRPC_FWAddMainModeRule";
		Case 33: "RRPC_FWSetMainModeRule";
		Case 34: "RRPC_FWDeleteMainModeRule";
		Case 35: "RRPC_FWDeleteAllMainModeRules";
		Case 36: "RRPC_FWEnumMainModeRules";
		Case 37: "RRPC_FWQueryFirewallRules";
		Case 38: "RRPC_FWQueryConnectionSecurityRules";
		Case 39: "RRPC_FWQueryMainModeRules";
		Case 40: "RRPC_FWQueryAuthenticationSets";
		Case 41: "RRPC_FWQueryCryptoSets";
		Case 42: "RRPC_FWEnumNetworks";
		Case 43: "RRPC_FWEnumAdapters";
		Case 44: "RRPC_FWGetGlobalConfig2_10";
		Case 45: "RRPC_FWGetConfig2_10";
		Case 46: "RRPC_FWAddFirewallRule2_10";
		Case 47: "RRPC_FWSetFirewallRule2_10";
		Case 48: "RRPC_FWEnumFirewallRules2_10";
		Case 49: "RRPC_FWAddConnectionSecurityRule2_10";
		Case 50: "RRPC_FWSetConnectionSecurityRule2_10";
		Case 51: "RRPC_FWEnumConnectionSecurityRules2_10";
		Case 52: "RRPC_FWAddAuthenticationSet2_10";
		Case 53: "RRPC_FWSetAuthenticationSet2_10";
		Case 54: "RRPC_FWEnumAuthenticationSets2_10";
		Case 55: "RRPC_FWAddCryptoSet2_10";
		Case 56: "RRPC_FWSetCryptoSet2_10";
		Case 57: "RRPC_FWEnumCryptoSets2_10";
		Default: "unknown";
	}
}


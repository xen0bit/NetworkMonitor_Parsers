//#  (c) 2009 CodePlex Foundation
//#
//#  Title:                  XDR
//#
//#  Details:                
//#
//#  Public References:      RFC 4506
//#
//#  Comments:               
//#
//#  Revision Class and Date:
//#
//####

Number XDRInteger
{
	Size = 4;
	DisplayFormat = FormatString( "%d", this );
}

UnsignedNumber XDRUnsignedInteger
{
	Size = 4;
	DisplayFormat = FormatString( "%u", this );
}

UnsignedNumber XDREnumeration
{
	Size = 4;
	DisplayFormat = FormatString( "%u", this );
}

UnsignedNumber XDRBoolean
{
	Size = 4;
	DisplayFormat = FormatString( "%s", this == 0 ? "FALSE" : (this == 1 ? "TRUE" : "Invalid Value") );
}

Number XDRHyperInteger 
{
	Size = 8;
	DisplayFormat = FormatString( "%d", this );
}

UnsignedNumber XDRUnsignedHyperInteger
{
	Size = 8;
	DisplayFormat = FormatString( "%u", this );
}

struct XDRFixedLenOpaqueData(Len)
{
	BLOB(Len) Data;
	switch 
	{
		case Len % 4:
			BLOB(4 - (Len % 4)) Padding;
	}
}

struct XDRVarLenOpaqueData = Formatstring("Length = %u", Length)
{
	XDRUnsignedInteger Length;
	BLOB(Length) Data;
	switch 
	{
		case Length % 4:
			BLOB(4 - (Length % 4)) Padding;
	}
}

struct XDRString = Data
{
	XDRUnsignedInteger Length;
	AsciiString(Length) Data;
	switch 
	{
		case Length % 4:
			BLOB(4 - (Length % 4)) Padding;
	}
}

// Not defined in standard
struct XDRUnicodeString = Data
{
	XDRUnsignedInteger Length;
	[DataFieldByteOrder = LittleEndian]
	UnicodeString(Length / 2) Data;
	switch 
	{
		case Length % 4:
			BLOB(4 - (Length % 4)) Padding;
	}
}

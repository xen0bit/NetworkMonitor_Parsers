//#  (c) 2009 CodePlex Foundation
//#
//#  Title:                  CallBack Control Protocol
//#
//#  Details:                
//#
//#  Public References:      draft-ietf-pppext-callback-cp-02
//#                          http://msdn.microsoft.com/library/default.asp?url=/library/en-us/randz/protocol/cbcp.asp
//#
//#  Comments:               
//#
//#  Revision Class and Date:
//#
//####

Protocol CBCP = FormatString("%s, Identifier = 0x%02X",CBCPCodesTable(CBCPCode),Identifier)
{
	UINT8 CBCPCode = FormatString("%s, %d(0x%02X)",CBCPCodesTable(this),this,this);
	UINT8 Identifier;
	[CBCPEndOffset = offset + this - 2]
	UINT16 Length;
	while condition1[ Offset < CBCPEndOffset ]
	{
		struct CallbackOption
		{
			UINT8 CallbackType = FormatString("%s, %d(0x%02X)",CBCPCallbackTyeTable(this),this,this);
			[CallbackOptionEndOffet = offset + this - 1]
			UINT8 CallbackLength;
			switch(CallbackType)
			{
				case 2:
					_struct SpecifiedCallback
					{
						UINT8 CallbackDelay;
						while condition5[ Offset < Property.CallbackOptionEndOffet ]
						{
							struct CallbackAddress
							{
								UINT8 AddressType = FormatString("%s, %d(0x%02X)",CBCPCallbackAddressTypeTable(this),this,this);
								AsciiStringTerm("\0") ASCIIZAddress;
							}
						}
					}
				case 3:
					UINT8 CallbackDelay;
				case 4:
					switch(CBCPCode)
					{
						case 1:
							_struct RequestCallback
							{
								UINT8 CallbackDelay;
								while condition3[ Offset < Property.CallbackOptionEndOffet ]
								{
									struct CallbackAddress
									{
										UINT8 AddressType = FormatString("%s, %d(0x%02X)",CBCPCallbackAddressTypeTable(this),this,this);
										AsciiStringTerm("\0") ASCIIZAddress;
									}
								}
							};
						case 2:
							_struct ResponseCallback
							{
								UINT8 CallbackDelay;
								while condition7[ Offset < Property.CallbackOptionEndOffet ]
								{
									struct CallbackAddress
									{
										UINT8 AddressType = FormatString("%s, %d(0x%02X)",CBCPCallbackAddressTypeTable(this),this,this);
										AsciiStringTerm("\0") ASCIIZAddress;
									}
								}
							};

					}
				default:
					switch
					{
						case offset < Property.CallbackOptionEndOffet:
							AsciiString(Property.CallbackOptionEndOffet - offset) CallbackOptionData;
					}
			}
		}
	}
	switch
	{
		case offset < CBCPEndOffset: AsciiString(Property.CallbackOptionEndOffet - offset) CBCPData;
	}
}
Table CBCPCodesTable(value)
{
	switch(value)
	{
		case 1: "Callback Request";
		case 2: "Callback Response";
		case 3: "Callback Ack";
		default: "Unknown Callback Code";
	}
}

Table CBCPCallbackTyeTable(value)
{
	switch(value)
	{
		case 1: "No callback";
		case 2: "Callback to a user-specifiable number";
		case 3: "Callback to a pre-specified or administrator specified number";
		case 4: "Callback to any of a list of numbers";
		default: "Unknown Callback Type";
	}
}

Table CBCPCallbackAddressTypeTable(value)
{
	switch(value)
	{
		case 1: "Address Type for PSTN/ISDN";
		default: "Other";
	}
}



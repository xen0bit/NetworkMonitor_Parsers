//#  (c) 2009 CodePlex Foundation
//#
//#  Title:                  Link Local Multicast Name Resolution
//#
//#  Details:                
//#
//#  Public References:      http://www.ietf.org/rfc/rfc4795.txt
//#                          http://www.microsoft.com/technet/community/columns/cableguy/cg1106.mspx
//#
//#  Comments:               
//#
//#  Revision Class and Date:Minor, 3/18/2009
//#
//####

Protocol LLMNR = FormatString("QueryId = 0x%X, %s, %s %s",
							QueryIdentifier,
							LLMNROpcodeTable(Flags.Opcode),
							Flags.QR ? "Response - " + DNSRcodeAbbrTable(Flags.Rcode) : "Query",
							Flags.QR == 0 && QuestionCount > 0 ? " for " + QRecord.ToString : ""
							)
{
	UINT16 QueryIdentifier;
	UINT16 Flags
	{
		UINT16 QR:1 = FormatString("      (%s) %s", this.ToBitString, this? "Response": "Query");
		UINT16 OPCode:4 = FormatString("  (%s) %s", this.ToBitString, LLMNROpcodeTable(this));
		UINT16 C:1 = FormatString("       (%s) %s", this.ToBitString, this? "Conflict": "");
		UINT16 TC:1 = FormatString("      (%s) %s", this.ToBitString, this? "TrunCation": "");
		UINT16 T:1 = FormatString("       (%s) %s", this.ToBitString, this? "Tentative": "");
		UINT16 Reserved:4 = FormatString("(%s)", this.ToBitString);
		UINT16 RCode:4 = FormatString("   (%s) %s", this.ToBitString, DNSRcodeTable(this));
	};
	UINT16 QuestionCount;
	UINT16 AnswerCount;
	UINT16 NameServerCount;
	UINT16 AdditionalCount;
	
	DNSQuestionRecord QRecord[QuestionCount];
	DNSResourceRecord ARecord[AnswerCount];
	DNSResourceRecord AuthorityRecord[NameServerCount];
	DNSResourceRecord AdditionalRecord[AdditionalCount];
	switch
	{
		case FrameOffset < FrameLength:
			BLOB(FrameLength - FrameOffset) DataLeft;
	}	
}
table LLMNROpcodeTable(value)
{
	switch(value)
	{
		case 0: "Standard";
		default:
			FormatString("Unknown value: %s", value);
	}
}



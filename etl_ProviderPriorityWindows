//#  (c) 2009 CodePlex Foundation
//#
//#  Title:                  Microsoft-Windows-Providers-Priority-list
//#
//#  Details:                
//#
//#  Public References:      Providers-Priority-list.man
//#
//#  Comments:               
//#
//#  Revision Class and Date:Minor, 4/1/2009
//#
//####
Table ETLProvidersPriorityTable(GUID)
{
	switch(GUID)
	{
		case "N/A_PNRPSvc" : 1;//PNRPSvc
		case "N/A_P2PIMSvc" : 1;//P2PIMSvc
		case "N/A_P2PMesh" : 1;//P2P-Mesh
		case "{5b0a651a-8807-45cc-9656-7579815b6af0}" : 2;//RemoteAssistance
		case "N/A" : 2;//Remotefs-UTProvider
		case "{50b3e73c-9370-461d-bb9f-26f32d68887d}" : 3;//WebIO
		case "{7D44233D-3055-4B9C-BA64-0D47CA40A232}" : 3;//WinHttp
		case "{43D1A55C-76D6-4f7e-995C-64C711E5CAFE}" : 3;//WinINet
		case "{E837619C-A2A8-4689-833F-47B48EBD2442}" : 4;//BranchCacheEventProvider
		case "{DD85457F-4E2D-44a5-A7A7-6253362E34DC}" : 4;//BranchCacheEventProvider
		case "{1c95126e-7eea-49a9-a3fe-a378b03ddb4d}" : 5;//DNS-Client
		case "{15A7A4F8-0072-4EAB-ABAD-F98A4D666AED}" : 5;//Dhcp-Client
		case "{6A1F2B00-6A90-4C38-95A5-5CAB3B056778}" : 5;//DHCPv6-Client
		case "{F6DA35CE-D312-41C8-9828-5A2E173C91B6}" : 5;//Dhcp-Nap-Enforcement-Client
		case "{e53c6823-7bb8-44bb-90dc-3f86090d48a6}" : 6;//Winsock-AFD
		case "{6ad52b32-d609-4be9-ae07-ce8dae937e39}" : 6;//RPC
		case "{dd5ef90a-6398-47a4-ad34-4dcecdef795f}" : 6;//HttpService
		case "{2F07E2EE-15DB-40F1-90EF-9D7BA282188A}" : 7;//TCPIP
		case "{d1bc9aff-2abf-4d71-9146-ecb2a986eb85}" : 8;//Windows-Firewall-With-Advanced-Security
		case "{0c478c5b-0351-41b1-8c58-4a6737da32e3}" : 8;//WFP
		case "{6600e712-c3b6-44a2-8a48-935c511f28c8}" : 8;//Iphlpsvc-Trace
		case "{C100BECF-D33A-4a4b-BF23-BBEF4663D017}" : 9;//WCN-Config-Registrar
		case "{3CB40AAA-1145-4FB8-B27B-7E30F0454316}" : 9;//WWAN-SVC-EVENTS
		case "{7839BB2A-2EA3-4ECA-A00F-B558BA678BEC}" : 9;//WWAN-MM-EVENTS
		case "N/A_WWAN-UI-EVENTS" : 9;//WWAN-UI-EVENTS
		case "N/A_WWAN-NDISUIO-EVENTS" : 9;//WWAN-NDISUIO-EVENTS
		case "{b92cf7fd-dc10-4c6b-a72d-1613bf25e597}" : 9;//Wired-AutoConfig
		case "{9580d7dd-0379-4658-9870-d5be7d52d6de}" : 9;//WLAN-AutoConfig
		case "{AB0D8EF9-866D-4d39-B83F-453F3B8F6325}" : 10;//OneX
		case "{6eb8db94-fe96-443f-a366-5fe0cee7fb1c}" : 10;//EapHost
		case "{85fe7609-ff4a-48e9-9d50-12918e43e1da}" : 10;//L2NACP
		case "{0BD3506A-9030-4f76-9B88-3E8FE1F7CFB6}" : 11;//NWiFi
		case "{CDEAD503-17F5-4a3e-B7AE-DF8CC2902EB9}" : 11;//NDIS
		case "N/A_VWiFi" : 11;//VWiFi
		case "{2ED6006E-4729-4609-B423-3EE7BCD678EF}" : 12;//NDIS-PacketCapture
		case "{83ED54F0-4D48-4E45-B16E-726FFD1FA4AF}" : 13;//Networking-Correlation
		default : 50;
	}
}
		
Table ETLCoversationContextTable(GUID)
{
	switch(GUID)
	{
		case "N/A_PNRPSvc" : "PNRPSvc";
		case "N/A_P2PIMSvc" : "P2PIMSvc";
		case "N/A_P2PMesh" : "P2P-Mesh";
		case "{5b0a651a-8807-45cc-9656-7579815b6af0}" : "RemoteAssistance";
		case "N/A" : "Remotefs-UTProvider";
		case "{50b3e73c-9370-461d-bb9f-26f32d68887d}" : "WebIO";
		case "{7D44233D-3055-4B9C-BA64-0D47CA40A232}" : "WinHttp";
		case "{43D1A55C-76D6-4f7e-995C-64C711E5CAFE}" : "WinINet";
		case "{E837619C-A2A8-4689-833F-47B48EBD2442}" : "BranchCacheEventProvider";
		case "{DD85457F-4E2D-44a5-A7A7-6253362E34DC}" : "BranchCacheEventProvider";
		case "{1c95126e-7eea-49a9-a3fe-a378b03ddb4d}" : "DNS-Client";
		case "{15A7A4F8-0072-4EAB-ABAD-F98A4D666AED}" : "Dhcp-Client";
		case "{6A1F2B00-6A90-4C38-95A5-5CAB3B056778}" : "DHCPv6-Client";
		case "{F6DA35CE-D312-41C8-9828-5A2E173C91B6}" : "Dhcp-Nap-Enforcement-Client";
		case "{e53c6823-7bb8-44bb-90dc-3f86090d48a6}" : "Winsock-AFD";
		case "{6ad52b32-d609-4be9-ae07-ce8dae937e39}" : "RPC";
		case "{dd5ef90a-6398-47a4-ad34-4dcecdef795f}" : "HttpService";
		case "{2F07E2EE-15DB-40F1-90EF-9D7BA282188A}" : "TCPIP";
		case "{d1bc9aff-2abf-4d71-9146-ecb2a986eb85}" : "Windows-Firewall-With-Advanced-Security";
		case "{0c478c5b-0351-41b1-8c58-4a6737da32e3}" : "WFP";
		case "{6600e712-c3b6-44a2-8a48-935c511f28c8}" : "Iphlpsvc-Trace";
		case "{C100BECF-D33A-4a4b-BF23-BBEF4663D017}" : "WCN-Config-Registrar";
		case "{3CB40AAA-1145-4FB8-B27B-7E30F0454316}" : "WWAN-SVC-EVENTS";
		case "{7839BB2A-2EA3-4ECA-A00F-B558BA678BEC}" : "WWAN-MM-EVENTS";
		case "N/A_WWAN-UI-EVENTS" : "WWAN-UI-EVENTS";
		case "N/A_WWAN-NDISUIO-EVENTS" : "WWAN-NDISUIO-EVENTS";
		case "{b92cf7fd-dc10-4c6b-a72d-1613bf25e597}" : "Wired-AutoConfig";
		case "{9580d7dd-0379-4658-9870-d5be7d52d6de}" : "WLAN-AutoConfig";
		case "{AB0D8EF9-866D-4d39-B83F-453F3B8F6325}" : "OneX";
		case "{6eb8db94-fe96-443f-a366-5fe0cee7fb1c}" : "EapHost";
		case "{85fe7609-ff4a-48e9-9d50-12918e43e1da}" : "L2NACP";
		case "{0BD3506A-9030-4f76-9B88-3E8FE1F7CFB6}" : "NWiFi";
		case "{CDEAD503-17F5-4a3e-B7AE-DF8CC2902EB9}" : "NDIS";
		case "N/A_VWiFi" : "VWiFi";
		case "{2ED6006E-4729-4609-B423-3EE7BCD678EF}" : "NDIS-PacketCapture";
		case "{83ED54F0-4D48-4E45-B16E-726FFD1FA4AF}" : "Networking-Correlation";
		default : "";
	}
}

struct ETLProcessProvidersContext(GUID)
{
	switch
	{
		case IsValueNone(Global.ETLContext$[property.UTActivityId]):
			struct
			{
				switch
				{
					case (Global.ETLProvidersPriority$[property.UTActivityId] == ETLProvidersPriorityTable(GUID) 
							|| IsValueNone(Global.ETLProvidersPriority$[property.UTActivityId])):
						[conversation.ProvidersList.AddToProperty(ETLCoversationContextTable(GUID), ADD_TO_PROPERTY_FLAG_NO_DUPLICATES)]
						[Global.ETLProvidersPriority$[property.UTActivityId] = ETLProvidersPriorityTable(GUID)]struct{}
					case Global.ETLProvidersPriority$[property.UTActivityId] >  ETLProvidersPriorityTable(GUID):
						[Property.InitialPro = Property.InitialPro]
						[conversation.ProvidersList = Property.InitialPro]
						[conversation.ProvidersList.AddToProperty(ETLCoversationContextTable(GUID), ADD_TO_PROPERTY_FLAG_NO_DUPLICATES)]
						[Global.ETLProvidersPriority$[property.UTActivityId] = ETLProvidersPriorityTable(GUID)]struct{}
				}
			}
	}
	
	[Global.ETLContext$[property.UTActivityId] = Global.ETLContext$[property.UTActivityId]]
	
	[MaxLoopCount = 20]
	[property.ProvidersCount = 0]
	[Conversation.ProvidesListArray = ""]
	while [!IsValueNone(conversation.ProvidersList[property.ProvidersCount])]
	{
		[Conversation.ProvidesListArray = contains(FormatString("%s",conversation.ProvidersList), "Array") ?
			(Conversation.ProvidesListArray + (property.ProvidersCount > 0 ? ", " : " ") + conversation.ProvidersList[property.ProvidersCount]) 
			: conversation.ProvidersList]
		[property.ProvidersCount = property.ProvidersCount + 1]
		struct{}
	}
}
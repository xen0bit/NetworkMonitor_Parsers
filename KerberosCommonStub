//#  (c) 2009 CodePlex Foundation
//#
//#  Title:   Kerberos Network Authentication Service v5
//#
//#  Details: [Stub Parser]
//#
//#  Comments:
//#
//####

const KrbAsReqType = 10;
const KrbAsRepType = 11;
const KrbTgsReqType = 12;
const KrbTgsRepType = 13;
const KrbApReqType = 14;
const KrbApRepType = 15;

[Property.KerberosSummary = ""]
[Property.KrbError = ""]
Protocol KerberosV5 = ConstStubNoticeCommon 
{
	Blob(FrameLength - FrameOffset) Blob;
}

Table KrbErrorCodeTable( ErrorCode )
{
	Switch( ErrorCode )
    {
		Case 0: FormatString("KDC_ERR_NONE (%d)", ErrorCode);
		Case 1: FormatString("KDC_ERR_NAME_EXP (%d)", ErrorCode);
		Case 2: FormatString("KDC_ERR_SERVICE_EXP (%d)", ErrorCode);
		Case 3: FormatString("KDC_ERR_BAD_PVNO (%d)", ErrorCode);
		Case 4: FormatString("KDC_ERR_C_OLD_MAST_KVNO (%d)", ErrorCode);
		Case 5: FormatString("KDC_ERR_S_OLD_MAST_KVNO (%d)", ErrorCode);
		Case 6: FormatString("KDC_ERR_C_PRINCIPAL_UNKNOWN (%d)", ErrorCode);
		Case 7: FormatString("KDC_ERR_S_PRINCIPAL_UNKNOWN (%d)", ErrorCode);
		Case 8: FormatString("KDC_ERR_PRINCIPAL_NOT_UNIQUE (%d)", ErrorCode);
		Case 9: FormatString("KDC_ERR_NULL_KEY (%d)", ErrorCode);
		Case 10: FormatString("KDC_ERR_CANNOT_POSTDATE (%d)", ErrorCode);
		Case 11: FormatString("KDC_ERR_NEVER_VALID (%d)", ErrorCode);
		Case 12: FormatString("KDC_ERR_POLICY (%d)", ErrorCode);
		Case 13: FormatString("KDC_ERR_BADOPTION (%d)", ErrorCode);
		Case 14: FormatString("KDC_ERR_ETYPE_NOSUPP (%d)", ErrorCode);
		Case 15: FormatString("KDC_ERR_SUMTYPE_NOSUPP (%d)", ErrorCode);
		Case 16: FormatString("KDC_ERR_PADATA_TYPE_NOSUPP (%d)", ErrorCode);
		Case 17: FormatString("KDC_ERR_TRTYPE_NOSUPP (%d)", ErrorCode);
		Case 18: FormatString("KDC_ERR_CLIENT_REVOKED (%d)", ErrorCode);
		Case 19: FormatString("KDC_ERR_SERVICE_REVOKED (%d)", ErrorCode);
		Case 20: FormatString("KDC_ERR_TGT_REVOKED (%d)", ErrorCode);
		Case 21: FormatString("KDC_ERR_CLIENT_NOTYET (%d)", ErrorCode);
		Case 22: FormatString("KDC_ERR_SERVICED_NOTYET (%d)", ErrorCode);
		Case 23: FormatString("KDC_ERR_KEY_EXPIRED (%d)", ErrorCode);
		Case 24: FormatString("KDC_ERR_PREAUTH_FAILED (%d)", ErrorCode);
		Case 25: FormatString("KDC_ERR_PREAUTH_REQUIRED (%d)", ErrorCode);
		Case 26: FormatString("KDC_ERR_SERVER_NOMATCH (%d)", ErrorCode);
		Case 27: FormatString("KDC_ERR_MUST_USE_USER2USER (%d)", ErrorCode);
		Case 28: FormatString("KDC_ERR_PATH_NOT_ACCEPTED (%d)", ErrorCode);
		Case 29: FormatString("KDC_ERR_SVC_UNAVAILABLE (%d)", ErrorCode);
		Case 31: FormatString("KRB_AP_ERR_BAD_INTEGRITY (%d)", ErrorCode);
		Case 32: FormatString("KRB_AP_ERR_TKT_EXPIRED (%d)", ErrorCode);
		Case 33: FormatString("KRB_AP_ERR_TKE_NYV (%d)", ErrorCode);
		Case 34: FormatString("KRB_AP_ERR_REPEAT (%d)", ErrorCode);
		Case 35: FormatString("KRB_AP_ERR_NOT_US (%d)", ErrorCode);
		Case 36: FormatString("KRB_AP_ERR_BADMATCH (%d)", ErrorCode);
		Case 37: FormatString("KRB_AP_ERR_SKEW (%d)", ErrorCode);
		Case 38: FormatString("KRB_AP_ERR_BADADDR (%d)", ErrorCode);
		Case 39: FormatString("KRB_AP_ERR_BADVERSION (%d)", ErrorCode);
		Case 40: FormatString("KRB_AP_ERR_MSG_TYPE (%d)", ErrorCode);
		Case 41: FormatString("KRB_AP_ERR_MODIFIED (%d)", ErrorCode);
		Case 42: FormatString("KRB_AP_ERR_BADORDER (%d)", ErrorCode);
		Case 44: FormatString("KRB_AP_ERR_BADKEYBER (%d)", ErrorCode);
		Case 45: FormatString("KRB_AP_ERR_NOKEY (%d)", ErrorCode);
		Case 46: FormatString("KRB_AP_ERR_MUT_FAIL (%d)", ErrorCode);
		Case 47: FormatString("KRB_AP_ERR_BADDIRECTION (%d)", ErrorCode);
		Case 48: FormatString("KRB_AP_ERR_METHOD (%d)", ErrorCode);
		Case 49: FormatString("KRB_AP_ERR_BADSEQ (%d)", ErrorCode);
		Case 50: FormatString("KRB_AP_ERR_INAPP_CKSUM (%d)", ErrorCode);
		Case 51: FormatString("KRB_AP_PATH_NOT_ACCEPTED (%d)", ErrorCode);
		Case 52: FormatString("KRB_ERR_RESPONSE_TOO_BIG (%d)", ErrorCode);
		Case 60: FormatString("KRB_ERR_GENERIC (%d)", ErrorCode);
		Case 61: FormatString("KRB_ERR_FIELD_TOOLONG (%d)", ErrorCode);
		Case 62: FormatString("KDC_ERROR_CLIENT_NOT_TRUSTED (%d)", ErrorCode);
		Case 63: FormatString("KDC_ERROR_KDC_NOT_TRUSTED (%d)", ErrorCode);
		Case 64: FormatString("KDC_ERROR_INVALID_SIG (%d)", ErrorCode);
		// RFC 4120
		Case 65: FormatString("KDC_ERR_KEY_TOO_WEAK (%d)", ErrorCode);
		// MCPP Docs
		//case 65: FormatString("KDC_ERR_DH_KEY_PARAMETERS_NOT_ACCEPTED (%d)", ErrorCode);
		Case 66: FormatString("KDC_ERR_CERTIFICATE_MISMATCH (%d)", ErrorCode);
		Case 67: FormatString("KRB_AP_ERR_NO_TGT (%d)", ErrorCode);
		Case 68: FormatString("KDC_ERR_WRONG_REALM (%d)", ErrorCode);
		Case 69: FormatString("KRB_AP_ERR_USER_TO_USER_REQUIRED (%d)", ErrorCode);
		Case 70: FormatString("KDC_ERR_CANT_VERIFY_CERTIFICATE (%d)", ErrorCode);
		Case 71: FormatString("KDC_ERR_INVALID_CERTIFICATE (%d)", ErrorCode);
		Case 72: FormatString("KDC_ERR_REVOKED_CERTIFICATE (%d)", ErrorCode);
		Case 73: FormatString("KDC_ERR_REVOCATION_STATUS_UNKNOWN (%d)", ErrorCode);
		Case 74: FormatString("KDC_ERR_REVOCATION_STATUS_UNAVAILABLE (%d)", ErrorCode);
		Case 75: FormatString("KDC_ERR_CLIENT_NAME_MISMATCH (%d)", ErrorCode);
		// RFC 4120
		Case 76: FormatString("KDC_ERR_KDC_NAME_MISMATCH (%d)", ErrorCode);
		// RFC 4556
		Case 77: FormatString("KDC_ERR_INCONSISTENT_KEY_PURPOSE (%d)", ErrorCode);
		Case 78: FormatString("KDC_ERR_DIGEST_IN_CERT_NOT_ACCEPTED (%d)", ErrorCode);
		Case 79: FormatString("KDC_ERR_PA_CHECKSUM_MUST_BE_INCLUDED (%d)", ErrorCode);
		Case 80: FormatString("KDC_ERR_DIGEST_IN_SIGNED_DATA_NOT_ACCEPTED (%d)", ErrorCode);
		Case 81: FormatString("KDC_ERR_PUBLIC_KEY_ENCRYPTION_NOT_SUPPORTED (%d)", ErrorCode);
		// MCPP Docs
		//case 76: FormatString("KDC_ERR_INCONSISTENT_KEY_PURPOSE (%d)", ErrorCode);
		Default: FormatString("%s (%d)","Unknown Error Code", ErrorCode);
	}
}

Struct KrbINT32 = ConstStubNoticeCommon { }

Struct KrbUINT32 = ConstStubNoticeCommon { }

Struct KrbMicroseconds = ConstStubNoticeCommon { }

Struct KerberosString = ConstStubNoticeCommon { }

Struct KrbRealm = ConstStubNoticeCommon { }

Struct KerberosTime = ConstStubNoticeCommon { }

Struct KrbPaData = ConstStubNoticeCommon { }

Struct KrbPaEncTimestamp = ConstStubNoticeCommon { }

Struct KrbPaPwSalt = ConstStubNoticeCommon { }



Struct KerberosV5_struct = ConstStubNoticeCommon { }

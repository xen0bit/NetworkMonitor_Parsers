//#  (c) 2009 CodePlex Foundation
//#
//#  Title:                  MSDTC Connection Manager: OleTx Multiplexing Protocol
//#
//#  Details:                
//#
//#  Microsoft References:   [MS-CMP]: MSDTC Connection Manager: OleTx Multiplexing Protocol Specification
//#
//#  Comments:               
//#
//#  Revision Class and Date:Major, 9/16/2009
//#                          Minor, 11/17/2009
//#
//####

//
//	BOX_CAR_HEADER
//
Struct CMPBoxCarHeader
{
	NdrConformant		Size;
	switch
	{
		case Size.MaxCount > 0:
			_struct
			{
				UINT32				SeqNumThisCar = CMPBoxCarHeaderSeqNumThisCarTable(this); //Set to 0.
				UINT32				AckSeqNum = CMPBoxCarHeaderAckSeqNumTable(this); //Set to 0.
				UINT32				cbTotal;
				UINT32				cMessages;
				CMPMtagUserMessage			Messages[ cMessages ];
			}
	}
}


Table CMPBoxCarHeaderAckSeqNumTable( Value )
{
	Switch( Value )
	{
		Case 0: "V1 - Possible value.";
		Default: "Unknown";
	}
}

Table CMPBoxCarHeaderSeqNumThisCarTable( Value )
{
	Switch( Value )
	{
		Case 0: "V1 - Possible value.";
		Default: "Unknown";
	}
}

//
//	MESSAGE_PACKET
//
Struct CMPMessagePacket
{
	UINT32		MsgTag = CMPMessagePacketMsgTagTable( this );
	UINT32		IsMaster = CMPMessagePacketIsMasterTable( this );
	UINT32		ConnectionId = CMPConnectionIdTable( MsgTag, this );
	UINT32		UserMsgType = CMPUserMsgTypeTable( this );
	UINT32		cbVarLenData;
	UINT32		Reserved1;	
}


Table CMPMessagePacketIsMasterTable( Value )
{
	Switch( Value )
	{
		Case 0x00000000: "V1 - Message is sent by the party that accepted the connection.";
		Case 0x00000001: "V2 - Message is sent by the party that initiated the connection, or message is not associated with a connection.";
		Default: "Unknown";
	}
}

Table CMPMessagePacketMsgTagTable( Value )
{
	Switch( Value )
	{
		Case 0x00000001: "MTAG_DISCONNECT - Indicates a request to disconnect the specified connection.";
		Case 0x00000002: "MTAG_DISCONNECTED - Indicates that the specified connection has been disconnected.";
		Case 0x00000003: "MTAG_CONNECTION_REQ_DENIED - Indicates that the connection request for the specified connection has been denied.";
		Case 0x00000004: "MTAG_PING - Indicates that the session should continue to be maintained.";
		Case 0x00000005: "MTAG_CONNECTION_REQ - Indicates that a new connection is being requested.";
		Case 0x00000FFF: "MTAG_USER_MESSAGE - Indicates that a user message should be delivered on the specified connection.";
		Default: "Unknown";
	}
}

table CMPConnectionIdTable( value, value2 )
{
	switch( value )
	{
	case 0x00000001: FormatString( "ID of the connection being disconnected: %u", value2 );
	case 0x00000002: FormatString( "ID of the connection that was just disconnected: %u", value2 );
	case 0x00000003: FormatString( "ID of the connection that was rejected: %u ", value2 );
	case 0x00000004: "Field set to zero";
	case 0x00000005: FormatString( "ID of the connection being requested: %u ", value2 );
	case 0x00000FFF: FormatString( "The ID of the connection that the message relates to: %u ", value2 );
	}
}

table CMPUserMsgTypeTable( value )
{
	switch( value )
	{
	case 0x00001010: "TxuserBeginnerMtagPromote";
	case 0x00001011: "TxuserBeginnerMtagBegin";
	case 0x00001012: "TxuserBeginnerMtagBegun";
	case 0x00001013: "TxuserBeginnerMtagAbort";
	case 0x00001014: "TxuserBeginnerMtagCommit";
	case 0x00001015: "TxuserBeginnerMtagRequestCompleted";
	case 0x00001016: "TxuserBeginnerMtagCommitTooLate";
	case 0x00001018: "TxuserBeginnerMtagBeginLogFull";
	case 0x00001019: "TxuserBeginnerMtagBeginNoMem";
	case 0x00001021: "TxuserImportMtagImport";
	case 0x00001022: "TxuserImportMtagImported";
	case 0x00001023: "TxuserImportMtagAbort";
	case 0x00001024: "TxuserImportMtagRequestCompleted";
	case 0x00001025: "TxuserImportMtagAbortTooLate";
	case 0x00001026: "TxuserImportMtagImportTxNotFound";
	case 0x00001031: "TxuserEnlistmentMtagEnlist";
	case 0x00001032: "TxuserEnlistmentMtagEnlisted";
	case 0x00001033: "TxuserEnlistmentMtagPreparereq";
	case 0x00001034: "TxuserEnlistmentMtagAbortreq";
	case 0x00001035: "TxuserEnlistmentMtagCommitreq";
	case 0x00001036: "TxuserenlistmentMtagPreparereqdone";
	case 0x00001037: "TxuserEnlistmentMtagAbortreqdone";
	case 0x00001038: "TxuserEnlistmentMtagCommitreqdone";
	case 0x00001041: "TxuserExportMtagCreate";
	case 0x00001042: "TxuserExportMtagCreated";
	case 0x00001043: "TxuserExportMtagExport";
	case 0x00001044: "TxuserExportMtagExported";
	case 0x00001046: "TxuserExportMtagCreateBadTmaddr";
	case 0x00001047: "TxuserExportMtagCreateNoMem";
	case 0x00001048: "TxuserExportMtagExportTxNotFound";
	case 0x00001049: "TxuserExportMtagExportTooLate";
	case 0x00001050: "TxuserExportMtagExportLogFull";
	case 0x00001051: "TxuserResourcemanagerMtagCreate";
	case 0x00001052: "TxuserResourcemanagerMtagReenlistmentcomplete";
	case 0x00001053: "TxuserResourcemanagerMtagRequestComplete";
	case 0x00001054: "TxuserResourcemanagerMtagDuplicate";
	case 0x00001055: "TxuserResourcemanagerinternalMtagDuplicateDetected";
	case 0x00001061: "TxuserReenlistMtagReenlist";
	case 0x00001071: "TxuserResolveMtagChildAbort";
	case 0x00001072: "TxuserResolveMtagChildCommit";
	case 0x00001073: "TxuserResolveMtagForgetCommitted";
	case 0x00001074: "TxuserResolveMtagRequestComplete";
	case 0x00001075: "TxuserResolveMtagTxNotFound";
	case 0x00001077: "TxuserResolveMtagChildNotPrepared";
	case 0x00001078: "TxuserResolveMtagForgetTxNotCommitted";
	case 0x0000107B: "TxuserSettxtimeoutMtagSettxtimeout";
	case 0x0000107C: "TxuserSettxtimeoutMtagRequestComplete";
	case 0x0000107D: "TxuserSettxtimeoutMtagTxNotFound";
	case 0x0000107E: "TxuserSettxtimeoutMtagTooLate";
	case 0x0000107F: "TxuserResolveMtagAccessdenied";
	case 0x00001062: "TxuserReenlistMtagReenlistAborted";
	case 0x00001063: "TxuserReenlistMtagReenlistCommitted";
	case 0x00001064: "TxuserReenlistMtagReenlistTimeout";
	case 0x00001076: "TxuserResolveMtagNotChild";
	case 0x00001093: "TxuserStatusMtagAborted";
	case 0x00001094: "TxuserStatusMtagCommitted";
	case 0x00001095: "TxuserStatusMtagIndoubt";
	case 0x00001801: "TxuserExportMtagExportTooMany";
	case 0x00001802: "TxuserExportMtagExportNoMem";
	case 0x00001803: "TxuserExportMtagCreateRemoteTmDown";
	case 0x00001804: "TxuserExportMtagCreate2";
	case 0x00001805: "TxuserExportMtagCreateNetTxDisabled";
	case 0x00001806: "TxuserExportMtagExportCommFailed";
	case 0x00001901: "TxuserEnlistmentMtagEnlistTxNotFound";
	case 0x00001902: "TxuserEnlistmentMtagEnlistTooLate";
	case 0x00001903: "TxuserEnlistmentMtagEnlistLogFull";
	case 0x00001905: "TxuserEnlistmentMtagEnlistTooMany";
	case 0x00001990: "TxuserBeginnerMtagCommitIndoubt";
	case 0x00002001: "PartnertmPropagateMtagPropagate";
	case 0x00002002: "PartnertmPropagateMtagPropagated";
	case 0x00002003: "PartnertmPropagateMtagPreparereq";
	case 0x00002004: "PartnertmPropagateMtagAbortreq";
	case 0x00002005: "PartnertmPropagateMtagCommitreq";
	case 0x00002006: "PartnertmPropagateMtagPreparereqdone";
	case 0x00002007: "PartnertmPropagateMtagAbortreqdone";
	case 0x00002008: "PartnertmPropagateMtagCommitreqdone";
	case 0x00002009: "PartnertmPropagateMtagProtocolError";
	case 0x00002010: "PartnertmPropagateMtagDuplicate";
	case 0x00002011: "PartnertmRedelivercommitMtagCommitreq";
	case 0x00002012: "PartnertmRedelivercommitMtagCommitreqdone";
	case 0x00002013: "PartnertmRedelivercommitMtagRetry";
	case 0x00002021: "PartnertmCheckabortMtagCheck";
	case 0x00002022: "PartnertmCheckabortMtagAborted";
	case 0x00002023: "PartnertmCheckabortMtagRetry";
	case 0x00002031: "TxuserAssociateMtagAssociate";
	case 0x00002032: "TxuserAssociateMtagAssociated";
	case 0x00002034: "TxuserAssociateMtagCommFailed";
	case 0x00002035: "TxuserAssociateMtagLogFullLocal";
	case 0x00002036: "TxuserAssociateMtagNoMemLocal";
	case 0x00002037: "TxuserAssociateMtagLogFullRemote";
	case 0x00002038: "TxuserAssociateMtagNoMemRemote";
	case 0x00002040: "TxuserAssociateMtagTooLate";
	case 0x00002041: "TxuserAssociateMtagTooManyLocal";
	case 0x00002042: "TxuserAssociateMtagTooManyRemote";
	case 0x00002043: "TxuserAssociateMtagTxNotFound";
	case 0x00002044: "TxuserAssociateMtagCreateBadTmaddr";
	case 0x00002051: "PartnertmBranchMtagBranching";
	case 0x00002052: "PartnertmBranchMtagBranched";
	case 0x00002054: "PartnertmBranchMtagBranchTxNotFound";
	case 0x00002055: "PartnertmBranchMtagBranchTooLate";
	case 0x00002056: "PartnertmBranchMtagBranchLogFull";
	case 0x00002057: "PartnertmBranchMtagBranchNoMem";
	case 0x00002059: "PartnertmBranchMtagBranchTooMany";
	case 0x00002091: "TxuserVoterMtagCreate";
	case 0x00002092: "TxuserVoterMtagCreated";
	case 0x00002093: "TxuserVoterMtagVotereq";
	case 0x00002094: "TxuserVoterMtagVotereqdone";
	case 0x00002095: "TxuserVoterMtagCreateTxNotFound";
	case 0x00002096: "TxuserVoterMtagCreateTooLate";
	case 0x00002100: "TxuserTraceMtagDumpTransaction";
	case 0x00002101: "TxuserTraceMtagRequestComplete";
	case 0x00002102: "TxuserTraceMtagTxNotFound";
	case 0x00002103: "TxuserTraceMtagRequestFailed";
	case 0x00002901: "PartnertmPropagateMtagNoMem";
	case 0x00002902: "PartnertmPropagateMtagLogFull";
	case 0x00002903: "PartnertmPropagateMtagAbortnotify";
	case 0x00002906: "PartnertmPropagateMtagPhase0Register";
	case 0x00002907: "PartnertmPropagateMtagPhase0Registered";
	case 0x00002908: "PartnertmPropagateMtagPhase0";
	case 0x00002909: "PartnertmPropagateMtagPhase0Complete";
	case 0x00002910: "PartnertmPropagateMtagPhase0Registrationrejected";
	case 0x00002FFF: "MsgDtcuicTrace";
	case 0x00003000: "MsgDtcuicTracestring";
	case 0x00003001: "MsgDtcuicStats";
	case 0x00003002: "MsgDtcuicTranslist";
	case 0x00003003: "MsgDtcuicTracelimit";
	case 0x00003004: "MsgDtcuicUpdatelimit";
	case 0x00003005: "MsgDtcuicShowlimit";
	case 0x00003006: "TXMtagHello";
	case 0x00004201: "TxuserDtclurmconfigureMtagAdd";
	case 0x00004202: "TxuserDtclurmconfigureMtagDelete";
	case 0x00004203: "TxuserDtclurmconfigureMtagRequestCompleted";
	case 0x00004204: "TxuserDtclurmconfigureMtagAddDuplicate";
	case 0x00004205: "TxuserDtclurmconfigureMtagDeleteNotFound";
	case 0x00004206: "TxuserDtclurmconfigureMtagDeleteUnrecoveredTrans";
	case 0x00004207: "TxuserDtclurmconfigureMtagDeleteInuse";
	case 0x00004208: "TxuserDtclurmconfigureMtagAddLogFull";
	case 0x00004301: "TxuserDtclurmrecoveryMtagAttach";
	case 0x00004303: "TxuserDtclurmrecoveryMtagRequestCompleted";
	case 0x00004304: "TxuserDtclurmrecoveryMtagAttachDuplicate";
	case 0x00004305: "TxuserDtclurmrecoveryMtagAttachNotFound";
	case 0x00004101: "TxuserDtclurmenlistmentMtagCreate";
	case 0x00004102: "TxuserDtclurmenlistmentMtagRequestCompleted";
	case 0x00004103: "TxuserDtclurmenlistmentMtagToDtcConversationlost";
	case 0x00004104: "TxuserDtclurmenlistmentMtagToDtcBackedout";
	case 0x00004105: "TxuserDtcclurmenlistmentMtagToDtcBackout";
	case 0x00004106: "TxuserDtclurmenlistmentMtagToDtcCommitted";
	case 0x00004107: "TxuserDtclurmenlistmentMtagToDtcForget";
	case 0x00004108: "TxuserDtclurmenlistmentMtagToDtcRequestcommit";
	case 0x00004109: "TxuserDtcclurmenlistmentMtagToLuBackedout";
	case 0x00004110: "TxuserDtclurmenlistmentMtagToLuBackout";
	case 0x00004111: "TxuserDtclurmenlistmentMtagToLuCommitted";
	case 0x00004113: "TxuserDtclurmenlistmentMtagToLuPrepare";
	case 0x00004116: "TxuserDtclurmenlistmentMtagCreateTxNotFound";
	case 0x00004117: "TxuserDtclurmenlistmentMtagCreateTooLate";
	case 0x00004118: "TxuserDtclurmenlistmentMtagCreateLogFull";
	case 0x00004119: "TxuserDtclurmenlistmentMtagCreateTooMany";
	case 0x00004120: "TxuserDtclurmenlistmentMtagCreateLuNotFound";
	case 0x00004122: "TxuserDtclurmenlistmentMtagUnplug";
	case 0x00004123: "TxuserDtclurmenlistmentMtagCreateDuplicateLuTransid";
	case 0x00004124: "TxuserDtclurmenlistmentMtagCreateLuNoRecoveryProcess";
	case 0x00004125: "TxuserDtclurmenlistmentMtagCreateLuDown";
	case 0x00004126: "TxuserDtclurmenlistmentMtagCreateLuRecovering";
	case 0x00004127: "TxuserDtclurmenlistmentMtagCreateLuRecoveryMismatch";
	case 0x00004401: "TxuserDtclurecoveryinitiatedbydtcMtagGetwork";
	case 0x00004402: "TxuserDtclurecoveryinitiatedbydtcMtagGetworkNotFound";
	case 0x00004403: "TxuserDtclurecoveryinitiatedbydtcMtagWorkChecklustatus";
	case 0x00004404: "TxuserDtclurecoveryinitiatedbydtcMtagWorkTrans";
	case 0x00004407: "TxuserDtclurecoveryinitiatedbydtcMtagLustatus";
	case 0x00004408: "TxuserDtclurecoveryinitiatedbydtcMtagRequestcomplete";
	case 0x00004409: "TxuserDtclurecoveryinitiatedbydtcMtagConfirmationFromOurXln";
	case 0x00004410: "TxuserDtclurecoveryinitiatedbydtcMtagTheirXlnResponse";
	case 0x00004411: "TxuserDtclurecoveryinitiatedbydtcMtagConfirmationForTheirXln";
	case 0x00004412: "TxuserDtclurecoveryinitiatedbydtcMtagErrorFromOurXln";
	case 0x00004413: "TxuserDtclurecoveryinitiatedbydtcMtagCheckForComparestates";
	case 0x00004414: "TxuserDtclurecoveryiniitatedbydtcMtagComparestatesInfo";
	case 0x00004415: "TxuserDtclurecoveryinitiatedbydtcMtagNoComparestates";
	case 0x00004416: "TxuserDtclurecoveryinitiatedbydtcMtagTheirComparestates";
	case 0x00004417: "TxuserDtclurecoveryinitiatedbydtcMtagConfirmationForTheirComparestates";
	case 0x00004418: "TxuserDtclurecoveryinitiatedbydtcMtagErrorFromOurComparestates";
	case 0x00004419: "TxuserDtclurecoveryinitiatedbydtcMtagConversationLost";
	case 0x00004420: "TxuserDtclurecoveryinitiatedbydtcMtagNewRecoverySeqNum";
	case 0x00004501: "TxuserDtclurecoveryinitiatedbyluMtagTheirXln";
	case 0x00004502: "TxuserDtclurecoveryiniitatedbyluMtagResponseForTheirXln";
	case 0x00004503: "TxuserDtclurecoveryinitiatedbyluMtagConfirmationOfOurXln";
	case 0x00004504: "TxuserDtclurecoveryiniitatedbyluMtagTheirComparestates";
	case 0x00004505: "TxuserDtclurecoveryinitiatedbyluMtagResponseForTheirComparestates";
	case 0x00004506: "TxuserDtclurecoveryinitiatedbyluMtagConfirmationOfOurComparestates";
	case 0x00004507: "TxuserDtclurecoveryiniatedbyluMtagErrorOfOurComparestates";
	case 0x00004508: "TxuserDtclurecoveryinitiatedbyluMtagConversationLost";
	case 0x00004509: "TxuserDtclurecoveryinitiatebyluMtagRequestcomplete";
	case 0x00004510: "TxuserDtclurecoveryinitiatedbyluMtagTheirXlnNotFound";
	case 0x00004701: "TxuserGettxdetailsMtagGet";
	case 0x00004702: "TxuserGettxdetailsMtagGotIt";
	case 0x00004703: "TxuserGettxdetailsMtagTxNotFound";
	case 0x00004901: "TxuserPhase0MtagCreate";
	case 0x00004902: "TxuserPhase0MtagCreated";
	case 0x00004903: "TxuserPhase0MtagPhase0req";
	case 0x00004904: "TxuserPhase0MtagPhase0reqdone";
	case 0x00004905: "TxuserPhase0MtagUnenlist";
	case 0x00004906: "TxuserPhase0MtagCreateTxNotFound";
	case 0x00004907: "TxuserPhase0MtagCreateTooLate";
	case 0x00004909: "TxuserPhase0MtagPhase0reqAbort";
	case 0x00005501: "TxuserGetsecurityflagsMtagGetsecurityflags";
	case 0x00005502: "TxuserGetsecurityflagsMtagFetched";
	case 0x00005A01: "TxuserExtendedwhereaboutsMtagGet";
	case 0x00005A02: "TxuserExtendedwhereaboutsMtagGot";
	case 0x00005A03: "TxuserExtendedwhereaboutsMtagNomem";
	case 0x00006001: "TxuserBegin2MtagAbort";
	case 0x00006002: "TxuserBegin2MtagBegin";
	case 0x00006003: "TxuserBegin2MtagCommit";
	case 0x00006005: "TxuserBegin2MtagSinkError";
	case 0x00006006: "TxuserBegin2MtagSinkBegun";
	case 0x00006101: "TxuserImport2MtagAbort";
	case 0x00006102: "TxuserImport2MtagImports";
	case 0x00006105: "TxuserImport2MtagSinkError";
	case 0x00006106: "TxuserImport2MtagSinkImported";
	case 0x00006107: "TxuserImport2MtagImportsWithSet";
	}
}

//
//	MTAG_CONNECTION_REQ
//
Struct CMPMtagConnectionReq
{
	CMPMessagePacket MsgHeader;
}


//
//	MTAG_CONNECTION_REQ_DENIED
//
Struct CMPMtagConnectionReqDenied
{
	CMPMessagePacket MsgHeader;
	UINT32		Reason;
}


//
//	MTAG_DISCONNECT
//
Struct CMPMtagDisconnect
{
	CMPMessagePacket MsgHeader;
}


//
//	MTAG_DISCONNECTED
//
Struct CMPMtagDisconnected
{
	CMPMessagePacket MsgHeader;
}


//
//	MTAG_PING
//
Struct CMPMtagPing
{
	CMPMessagePacket MsgHeader;
}


//
//	MTAG_USER_MESSAGE
//
Struct CMPMtagUserMessage
{
	switch( UINT32( FrameData, FrameOffset ) ) //switch on MessageTag in MessagePacket.
	{
	case 0x00000001: CMPMtagDisconnect				Disconnect;
	case 0x00000002: CMPMtagDisconnected				Disconnected;
	case 0x00000003: CMPMtagConnectionReqDenied		RequestDenied;
	case 0x00000004: CMPMtagPing						Ping;
	case 0x00000005: CMPMtagConnectionReq			ConnectionRequested;
	case 0x00000FFF: //CMPMessageMTagUserMessage
		switch( UINT32( FrameData, FrameOffset + 12 ) ) //switch on UserMessageType in MessagePacket.
		{
		case 0x00001010: DTCOTxuserBeginnerMtagPromote													TxuserBeginnerMtagPromote;
		case 0x00001011: DTCOTxuserBeginnerMtagBegin													TxuserBeginnerMtagBegin;
		case 0x00001012: DTCOTxuserBeginnerMtagBegun													TxuserBeginnerMtagBegun;
		case 0x00001013: DTCOTxuserBeginnerMtagAbort													TxuserBeginnerMtagAbort;
		case 0x00001014: DTCOTxuserBeginnerMtagCommit													TxuserBeginnerMtagCommit;
		case 0x00001015: DTCOTxuserBeginnerMtagRequestCompleted										    TxuserBeginnerMtagRequestCompleted;
		case 0x00001016: DTCOTxuserBeginnerMtagCommitTooLate											TxuserBeginnerMtagCommitTooLate;
		case 0x00001018: DTCOTxuserBeginnerMtagBeginLogFull											    TxuserBeginnerMtagBeginLogFull;
		case 0x00001019: DTCOTxuserBeginnerMtagBeginNoMem												TxuserBeginnerMtagBeginNoMem;
		case 0x00001021: DTCOTxuserImportMtagImport													    TxuserImportMtagImport;
		case 0x00001022: DTCOTxuserImportMtagImported													TxuserImportMtagImported;
		case 0x00001023: DTCOTxuserImportMtagAbort														TxuserImportMtagAbort;
		case 0x00001024: DTCOTxuserImportMtagRequestCompleted											TxuserImportMtagRequestCompleted;
		case 0x00001025: DTCOTxuserImportMtagAbortTooLate												TxuserImportMtagAbortTooLate;
		case 0x00001026: DTCOTxuserImportMtagImportTxNotFound											TxuserImportMtagImportTxNotFound;
		case 0x00001031: DTCOTxuserEnlistmentMtagEnlist												    TxuserEnlistmentMtagEnlist;
		case 0x00001032: DTCOTxuserEnlistmentMtagEnlisted												TxuserEnlistmentMtagEnlisted;
		case 0x00001033: DTCOTxuserEnlistmentMtagPreparereq											    TxuserEnlistmentMtagPreparereq;
		case 0x00001034: DTCOTxuserEnlistmentMtagAbortreq												TxuserEnlistmentMtagAbortreq;
		case 0x00001035: DTCOTxuserEnlistmentMtagCommitreq												TxuserEnlistmentMtagCommitreq;
		case 0x00001036: DTCOTxuserenlistmentMtagPreparereqdone										    TxuserenlistmentMtagPreparereqdone;
		case 0x00001037: DTCOTxuserEnlistmentMtagAbortreqdone											TxuserEnlistmentMtagAbortreqdone;
		case 0x00001038: DTCOTxuserEnlistmentMtagCommitreqdone											TxuserEnlistmentMtagCommitreqdone;
		case 0x00001041: DTCOTxuserExportMtagCreate													    TxuserExportMtagCreate;
		case 0x00001042: DTCOTxuserExportMtagCreated													TxuserExportMtagCreated;
		case 0x00001043: DTCOTxuserExportMtagExport													    TxuserExportMtagExport;
		case 0x00001044: DTCOTxuserExportMtagExported													TxuserExportMtagExported;
		case 0x00001046: DTCOTxuserExportMtagCreateBadTmaddr											TxuserExportMtagCreateBadTmaddr;
		case 0x00001048: DTCOTxuserExportMtagExportTxNotFound											TxuserExportMtagExportTxNotFound;
		case 0x00001049: DTCOTxuserExportMtagExportTooLate												TxuserExportMtagExportTooLate;
		case 0x00001050: DTCOTxuserExportMtagExportLogFull												TxuserExportMtagExportLogFull;
		case 0x00001051: DTCOTxuserResourcemanagerMtagCreate											TxuserResourcemanagerMtagCreate;
		case 0x00001052: DTCOTxuserResourcemanagerMtagReenlistmentcomplete								TxuserResourcemanagerMtagReenlistmentcomplete;
		case 0x00001053: DTCOTxuserResourcemanagerMtagRequestComplete									TxuserResourcemanagerMtagRequestComplete;
		case 0x00001054: DTCOTxuserResourcemanagerMtagDuplicate										    TxuserResourcemanagerMtagDuplicate;
		case 0x00001055: DTCOTxuserResourcemanagerinternalMtagDuplicateDetected							TxuserResourcemanagerinternalMtagDuplicateDetected;
		case 0x00001061: DTCOTxuserReenlistMtagReenlist													TxuserReenlistMtagReenlist;
		case 0x00001071: DTCOTxuserResolveMtagChildAbort												TxuserResolveMtagChildAbort;
		case 0x00001072: DTCOTxuserResolveMtagChildCommit												TxuserResolveMtagChildCommit;
		case 0x00001073: DTCOTxuserResolveMtagForgetCommitted											TxuserResolveMtagForgetCommitted;
		case 0x00001074: DTCOTxuserResolveMtagRequestComplete											TxuserResolveMtagRequestComplete;
		case 0x00001075: DTCOTxuserResolveMtagTxNotFound												TxuserResolveMtagTxNotFound;
		case 0x00001076: DCTOTxuserResolveMtagNotChild													TxuserResolveMtagNotChild;
		case 0x00001077: DTCOTxuserResolveMtagChildNotPrepared											TxuserResolveMtagChildNotPrepared;
		case 0x00001078: DTCOTxuserResolveMtagForgetTxNotCommitted										TxuserResolveMtagForgetTxNotCommitted;
		case 0x0000107B: DTCOTxuserSettxtimeoutMtagSettxtimeout										    TxuserSettxtimeoutMtagSettxtimeout;
		case 0x0000107C: DTCOTxuserSettxtimeoutMtagRequestComplete										TxuserSettxtimeoutMtagRequestComplete;
		case 0x0000107D: DTCOTxuserSettxtimeoutMtagTxNotFound											TxuserSettxtimeoutMtagTxNotFound;
		case 0x0000107E: DTCOTxuserSettxtimeoutMtagTooLate												TxuserSettxtimeoutMtagTooLate;
		case 0x0000107F: DTCOTxuserResolveMtagAccessdenied												TxuserResolveMtagAccessdenied;
		case 0x00001062: DTCOTxuserReenlistMtagReenlistAborted											TxuserReenlistMtagReenlistAborted;
		case 0x00001063: DTCOTxuserReenlistMtagReenlistCommitted										TxuserReenlistMtagReenlistCommitted;
		case 0x00001064: DTCOTxuserReenlistMtagReenlistTimeout											TxuserReenlistMtagReenlistTimeout;
		case 0x00001093: DTCOTxuserStatusMtagAborted													TxuserStatusMtagAborted;
		case 0x00001094: DTCOTxuserStatusMtagCommitted													TxuserStatusMtagCommitted;
		case 0x00001095: DTCOTxuserStatusMtagIndoubt													TxuserStatusMtagIndoubt;
		case 0x00001801: DTCOTxuserExportMtagExportTooMany												TxuserExportMtagExportTooMany;
		case 0x00001802: DTCOTxuserExportMtagExportNoMem												TxuserExportMtagExportNoMem;
		case 0x00001804: DTCOTxuserExportMtagCreate2													TxuserExportMtagCreate2;
		case 0x00001805: DTCOTxuserExportMtagCreateNetTxDisabled										TxuserExportMtagCreateNetTxDisabled;
		case 0x00001806: DTCOTxuserExportMtagExportCommFailed											TxuserExportMtagExportCommFailed;									
		case 0x00001901: DTCOTxuserEnlistmentMtagEnlistTxNotFound										TxuserEnlistmentMtagEnlistTxNotFound;
		case 0x00001902: DTCOTxuserEnlistmentMtagEnlistTooLate											TxuserEnlistmentMtagEnlistTooLate;
		case 0x00001903: DTCOTxuserEnlistmentMtagEnlistLogFull											TxuserEnlistmentMtagEnlistLogFull;
		case 0x00001905: DTCOTxuserEnlistmentMtagEnlistTooMany											TxuserEnlistmentMtagEnlistTooMany;
		case 0x00001990: DTCOTxuserBeginnerMtagCommitIndoubt											TxuserBeginnerMtagCommitIndoubt;
		case 0x00002001: DTCOPartnertmPropagateMtagPropagate											PartnertmPropagateMtagPropagate;
		case 0x00002002: DTCOPartnertmPropagateMtagPropagated											PartnertmPropagateMtagPropagated;
		case 0x00002003: DTCOPartnertmPropagateMtagPreparereq											PartnertmPropagateMtagPreparereq;
		case 0x00002004: DTCOPartnertmPropagateMtagAbortreq												PartnertmPropagateMtagAbortreq;
		case 0x00002005: DTCOPartnertmPropagateMtagCommitreq											PartnertmPropagateMtagCommitreq;
		case 0x00002006: DTCOPartnertmPropagateMtagPreparereqdone										PartnertmPropagateMtagPreparereqdone;
		case 0x00002007: DTCOPartnertmPropagateMtagAbortreqdone											PartnertmPropagateMtagAbortreqdone;
		case 0x00002008: DTCOPartnertmPropagateMtagCommitreqdone										PartnertmPropagateMtagCommitreqdone;
		case 0x00002009: DTCOPartnertmPropagateMtagProtocolError										PartnertmPropagateMtagProtocolError;
		case 0x00002010: DTCOPartnertmPropagateMtagDuplicate											PartnertmPropagateMtagDuplicate;
		case 0x00002011: DTCOPartnertmRedelivercommitMtagCommitreq										PartnertmRedelivercommitMtagCommitreq;
		case 0x00002012: DTCOPartnertmRedelivercommitMtagCommitreqdone									PartnertmRedelivercommitMtagCommitreqdone;
		case 0x00002013: DTCOPartnertmRedelivercommitMtagRetry											PartnertmRedelivercommitMtagRetry;
		case 0x00002021: DTCOPartnertmCheckabortMtagCheck												PartnertmCheckabortMtagCheck;
		case 0x00002022: DTCOPartnertmCheckabortMtagAborted												PartnertmCheckabortMtagAborted;
		case 0x00002023: DTCOPartnertmCheckabortMtagRetry												PartnertmCheckabortMtagRetry;
		case 0x00002031: DTCOTxuserAssociateMtagAssociate												TxuserAssociateMtagAssociate;
		case 0x00002032: DTCOTxuserAssociateMtagAssociated												TxuserAssociateMtagAssociated;
		case 0x00002034: DTCOTxuserAssociateMtagCommFailed												TxuserAssociateMtagCommFailed;
		case 0x00002035: DTCOTxuserAssociateMtagLogFullLocal											TxuserAssociateMtagLogFullLocal;
		case 0x00002036: DTCOTxuserAssociateMtagNoMemLocal												TxuserAssociateMtagNoMemLocal;
		case 0x00002037: DTCOTxuserAssociateMtagLogFullRemote											TxuserAssociateMtagLogFullRemote;
		case 0x00002038: DTCOTxuserAssociateMtagNoMemRemote												TxuserAssociateMtagNoMemRemote;
		case 0x00002040: DTCOTxuserAssociateMtagTooLate													TxuserAssociateMtagTooLate;
		case 0x00002041: DTCOTxuserAssociateMtagTooManyLocal											TxuserAssociateMtagTooManyLocal;
		case 0x00002042: DTCOTxuserAssociateMtagTooManyRemote											TxuserAssociateMtagTooManyRemote;
		case 0x00002043: DTCOTxuserAssociateMtagTxNotFound												TxuserAssociateMtagTxNotFound;
		case 0x00002044: DTCOTxuserAssociateMtagCreateBadTmaddr											TxuserAssociateMtagCreateBadTmaddr;
		case 0x00002051: DTCOPartnertmBranchMtagBranching												PartnertmBranchMtagBranching;
		case 0x00002052: DTCOPartnertmBranchMtagBranched												PartnertmBranchMtagBranched;
		case 0x00002054: DTCOPartnertmBranchMtagBranchTxNotFound										PartnertmBranchMtagBranchTxNotFound;
		case 0x00002055: DTCOPartnertmBranchMtagBranchTooLate											PartnertmBranchMtagBranchTooLate;
		case 0x00002056: DTCOPartnertmBranchMtagBranchLogFull											PartnertmBranchMtagBranchLogFull;
		case 0x00002057: DTCOPartnertmBranchMtagBranchNoMem												PartnertmBranchMtagBranchNoMem;
		case 0x00002059: DTCOPartnertmBranchMtagBranchTooMany											PartnertmBranchMtagBranchTooMany;
		case 0x00002091: DTCOTxuserVoterMtagCreate														TxuserVoterMtagCreate;
		case 0x00002092: DTCOTxuserVoterMtagCreated														TxuserVoterMtagCreated;
		case 0x00002093: DTCOTxuserVoterMtagVotereq														TxuserVoterMtagVotereq;
		case 0x00002094: DTCOTxuserVoterMtagVotereqdone													TxuserVoterMtagVotereqdone;
		case 0x00002095: DTCOTxuserVoterMtagCreateTxNotFound											TxuserVoterMtagCreateTxNotFound;
		case 0x00002096: DTCOTxuserVoterMtagCreateTooLate												TxuserVoterMtagCreateTooLate;
		case 0x00002100: DTCOTxuserTraceMtagDumpTransaction												TxuserTraceMtagDumpTransaction;
		case 0x00002101: DTCOTxuserTraceMtagRequestComplete												TxuserTraceMtagRequestComplete;
		case 0x00002102: DTCOTxuserTraceMtagTxNotFound													TxuserTraceMtagTxNotFound;
		case 0x00002103: DTCOTxuserTraceMtagRequestFailed												TxuserTraceMtagRequestFailed;
		case 0x00002901: DTCOPartnertmPropagateMtagNoMem												PartnertmPropagateMtagNoMem;
		case 0x00002902: DTCOPartnertmPropagateMtagLogFull												PartnertmPropagateMtagLogFull;
		case 0x00002903: DTCOPartnertmPropagateMtagAbortnotify											PartnertmPropagateMtagAbortnotify;
		case 0x00002906: DTCOPartnertmPropagateMtagPhase0Register										PartnertmPropagateMtagPhase0Register;
		case 0x00002907: DTCOPartnertmPropagateMtagPhase0Registered										PartnertmPropagateMtagPhase0Registered;
		case 0x00002908: DTCOPartnertmPropagateMtagPhase0												PartnertmPropagateMtagPhase0;
		case 0x00002909: DTCOPartnertmPropagateMtagPhase0Complete										PartnertmPropagateMtagPhase0Complete;
		case 0x00002910: DTCOPartnertmPropagateMtagPhase0Registrationrejected							PartnertmPropagateMtagPhase0Registrationrejected;
		case 0x00002FFF: CMOMMsgDtcuicTrace																MsgDtcuicTrace;
		case 0x00003000: CMOMMsgDtcuicTracestring														MsgDtcuicTracestring;
		case 0x00003001: CMOMMsgDtcuicStats																MsgDtcuicStats;
		case 0x00003002: CMOMMsgDtcuicTranlist															MsgDtcuicTranlist;
		case 0x00003003: CMOMMsgDtcuicTracelimit														MsgDtcuicTracelimit;
		case 0x00003004: CMOMMsgDtcuicUpdatelimit														MsgDtcuicUpdatelimit;
		case 0x00003005: CMOMMsgDtcuicShowlimit															MsgDtcuicShowlimit;
		case 0x00003006: CMOMMtagHello																	MtagHello;
		case 0x00004201: DTCLUTxuserDtclurmconfigureMtagAdd												TxuserDtclurmconfigureMtagAdd;
		case 0x00004202: DTCLUTxuserDtclurmconfigureMtagDelete											TxuserDtclurmconfigureMtagDelete;
		case 0x00004203: DTCLUTxuserDtclurmconfigureMtagRequestCompleted								TxuserDtclurmconfigureMtagRequestCompleted;
		case 0x00004204: DTCLUTxuserDtclurmconfigureMtagAddDuplicate									TxuserDtclurmconfigureMtagAddDuplicate;
		case 0x00004205: DTCLUTxuserDtclurmconfigureMtagDeleteNotFound									TxuserDtclurmconfigureMtagDeleteNotFound;
		case 0x00004206: DTCLUTxuserDtclurmconfigureMtagDeleteUnrecoveredTrans							TxuserDtclurmconfigureMtagDeleteUnrecoveredTrans;
		case 0x00004207: DTCLUTxuserDtclurmconfigureMtagDeleteInuse										TxuserDtclurmconfigureMtagDeleteInuse;
		case 0x00004208: DTCLUTxuserDtclurmconfigureMtagAddLogFull										TxuserDtclurmconfigureMtagAddLogFull;
		case 0x00004301: DTCLUTxuserDtclurmrecoveryMtagAttach											TxuserDtclurmrecoveryMtagAttach;
		case 0x00004303: DTCLUTxuserDtclurmrecoveryMtagRequestCompleted									TxuserDtclurmrecoveryMtagRequestCompleted;
		case 0x00004304: DTCLUTxuserDtclurmrecoveryMtagAttachDuplicate									TxuserDtclurmrecoveryMtagAttachDuplicate;
		case 0x00004305: DTCLUTxuserDtclurmrecoveryMtagAttachNotFound									TxuserDtclurmrecoveryMtagAttachNotFound;
		case 0x00004101: DTCLUTxuserDtclurmenlistmentMtagCreate											TxuserDtclurmenlistmentMtagCreate;
		case 0x00004102: DTCLUTxuserDtclurmenlistmentMtagRequestCompleted								TxuserDtclurmenlistmentMtagRequestCompleted;
		case 0x00004103: DTCLUTxuserDtclurmenlistmentMtagToDtcConversationlost							TxuserDtclurmenlistmentMtagToDtcConversationlost;
		case 0x00004104: DTCLUTxuserDtclurmenlistmentMtagToDtcBackedout									TxuserDtclurmenlistmentMtagToDtcBackedout;
		case 0x00004105: DTCLUTxuserDtclurmenlistmentMtagToDtcBackout									TxuserDtcclurmenlistmentMtagToDtcBackout;
		case 0x00004106: DTCLUTxuserDtclurmenlistmentMtagToDtcCommitted									TxuserDtclurmenlistmentMtagToDtcCommitted;
		case 0x00004107: DTCLUTxuserDtclurmenlistmentMtagToDtcForget									TxuserDtclurmenlistmentMtagToDtcForget;
		case 0x00004108: DTCLUTxuserDtclurmenlistmentMtagToDtcRequestcommit								TxuserDtclurmenlistmentMtagToDtcRequestcommit;
		case 0x00004109: DTCLUTxuserDtclurmenlistmentMtagToLuBackedout									TxuserDtcclurmenlistmentMtagToLuBackedout;
		case 0x00004110: DTCLUTxuserDtclurmenlistmentMtagToLuBackout									TxuserDtclurmenlistmentMtagToLuBackout;
		case 0x00004111: DTCLUTxuserDtclurmenlistmentMtagToLuCommitted									TxuserDtclurmenlistmentMtagToLuCommitted;
		case 0x00004113: DTCLUTxuserDtclurmenlistmentMtagToLuPrepare									TxuserDtclurmenlistmentMtagToLuPrepare;
		case 0x00004116: DTCLUTxuserDtclurmenlistmentMtagCreateTxNotFound								TxuserDtclurmenlistmentMtagCreateTxNotFound;
		case 0x00004117: DTCLUTxuserDtclurmenlistmentMtagCreateTooLate									TxuserDtclurmenlistmentMtagCreateTooLate;
		case 0x00004118: DTCLUTxuserDtclurmenlistmentMtagCreateLogFull									TxuserDtclurmenlistmentMtagCreateLogFull;
		case 0x00004119: DTCLUTxuserDtclurmenlistmentMtagCreateTooMany									TxuserDtclurmenlistmentMtagCreateTooMany;
		case 0x00004120: DTCLUTxuserDtclurmenlistmentMtagCreateLuNotFound								TxuserDtclurmenlistmentMtagCreateLuNotFound;
		case 0x00004122: DTCLUTxuserDtclurmenlistmentMtagUnplug											TxuserDtclurmenlistmentMtagUnplug;
		case 0x00004123: DTCLUTxuserDtclurmenlistmentMtagCreateDuplicateLuTransid						TxuserDtclurmenlistmentMtagCreateDuplicateLuTransid;
		case 0x00004124: DTCLUTxuserDtclurmenlistmentMtagCreateLuNoRecoveryProcess						TxuserDtclurmenlistmentMtagCreateLuNoRecoveryProcess;
		case 0x00004125: DTCLUTxuserDtclurmenlistmentMtagCreateLuDown									TxuserDtclurmenlistmentMtagCreateLuDown;
		case 0x00004126: DTCLUTxuserDtclurmenlistmentMtagCreateLuRecovering								TxuserDtclurmenlistmentMtagCreateLuRecovering;
		case 0x00004127: DTCLUTxuserDtclurmenlistmentMtagCreateLuRecoveryMismatch						TxuserDtclurmenlistmentMtagCreateLuRecoveryMismatch;
		case 0x00004401: DTCLUTxuserDtclurecoveryinitiatedbydtcMtagGetwork								TxuserDtclurecoveryinitiatedbydtcMtagGetwork;
		case 0x00004402: DTCLUTxuserDtclurecoveryinitiatedbydtcMtagGetworkNotFound						TxuserDtclurecoveryinitiatedbydtcMtagGetworkNotFound;
		case 0x00004403: DTCLUTxuserDtclurecoveryinitiatedbydtcMtagWorkChecklustatus					TxuserDtclurecoveryinitiatedbydtcMtagWorkChecklustatus;
		case 0x00004404: DTCLUTxuserDtclurecoveryinitiatedbydtcMtagWorkTrans							TxuserDtclurecoveryinitiatedbydtcMtagWorkTrans;
		case 0x00004407: DTCLUTxuserDtclurecoveryinitiatedbydtcMtagLustatus								TxuserDtclurecoveryinitiatedbydtcMtagLustatus;
		case 0x00004408: DTCLUTxuserDtclurecoveryinitiatedbydtcMtagRequestcomplete						TxuserDtclurecoveryinitiatedbydtcMtagRequestcomplete;
		case 0x00004409: DTCLUTxuserDtclurecoveryinitiatedbydtcMtagConfirmationFromOurXln				TxuserDtclurecoveryinitiatedbydtcMtagConfirmationFromOurXln;
		case 0x00004410: DTCLUTxuserDtclurecoveryinitiatedbydtcMtagTheirXlnResponse						TxuserDtclurecoveryinitiatedbydtcMtagTheirXlnResponse;
		case 0x00004411: DTCLUTxuserDtclurecoveryinitiatedbydtcMtagConfirmationForTheirXln				TxuserDtclurecoveryinitiatedbydtcMtagConfirmationForTheirXln;
		case 0x00004412: DTCLUTxuserDtclurecoveryinitiatedbydtcMtagErrorFromOurXln						TxuserDtclurecoveryinitiatedbydtcMtagErrorFromOurXln;
		case 0x00004413: DTCLUTxuserDtclurecoveryinitiatedbydtcMtagCheckForComparestates				TxuserDtclurecoveryinitiatedbydtcMtagCheckForComparestates;
		case 0x00004414: DTCLUTxuserDtclurecoveryinitiatedbydtcMtagComparestatesInfo					TxuserDtclurecoveryiniitatedbydtcMtagComparestatesInfo;
		case 0x00004415: DTCLUTxuserDtclurecoveryinitiatedbydtcMtagNoComparestates						TxuserDtclurecoveryinitiatedbydtcMtagNoComparestates;
		case 0x00004416: DTCLUTxuserDtclurecoveryinitiatedbydtcMtagTheirComparestates					TxuserDtclurecoveryinitiatedbydtcMtagTheirComparestates;
		case 0x00004417: DTCLUTxuserDtclurecoveryinitiatedbydtcMtagConfirmationForTheirComparestates	TxuserDtclurecoveryinitiatedbydtcMtagConfirmationForTheirComparestates;
		case 0x00004418: DTCLUTxuserDtclurecoveryinitiatedbydtcMtagErrorFromOurComparestates			TxuserDtclurecoveryinitiatedbydtcMtagErrorFromOurComparestates;
		case 0x00004419: DTCLUTxuserDtclurecoveryinitiatedbydtcMtagConversationLost						TxuserDtclurecoveryinitiatedbydtcMtagConversationLost;
		case 0x00004420: DTCLUTxuserDtclurecoveryinitiatedbydtcMtagNewRecoverySeqNum					TxuserDtclurecoveryinitiatedbydtcMtagNewRecoverySeqNum;
		case 0x00004501: DTCLUTxuserDtclurecoveryinitiatedbyluMtagTheirXln								TxuserDtclurecoveryinitiatedbyluMtagTheirXln;
		case 0x00004502: DTCLUTxuserDtclurecoveryinitiatedbyluMtagResponseForTheirXln					TxuserDtclurecoveryiniitatedbyluMtagResponseForTheirXln;
		case 0x00004503: DTCLUTxuserDtclurecoveryinitiatedbyluMtagConfirmationOfOurXln					TxuserDtclurecoveryinitiatedbyluMtagConfirmationOfOurXln;
		case 0x00004504: DTCLUTxuserDtclurecoveryinitiatedbyluMtagTheirComparestates					TxuserDtclurecoveryiniitatedbyluMtagTheirComparestates;
		case 0x00004505: DTCLUTxuserDtclurecoveryinitiatedbyluMtagResponseForTheirComparestates			TxuserDtclurecoveryinitiatedbyluMtagResponseForTheirComparestates;
		case 0x00004506: DTCLUTxuserDtclurecoveryinitiatedbyluMtagConfirmationOfOurComparestates		TxuserDtclurecoveryinitiatedbyluMtagConfirmationOfOurComparestates;
		case 0x00004507: DTCLUTxuserDtclurecoveryinitiatedbyluMtagErrorOfOurComparestates				TxuserDtclurecoveryiniatedbyluMtagErrorOfOurComparestates;
		case 0x00004508: DTCLUTxuserDtclurecoveryinitiatedbyluMtagConversationLost						TxuserDtclurecoveryinitiatedbyluMtagConversationLost;
		case 0x00004509: DTCLUTxuserDtclurecoveryinitiatedbyluMtagRequestcomplete						TxuserDtclurecoveryinitiatebyluMtagRequestcomplete;
		case 0x00004510: DTCLUTxuserDtclurecoveryinitiatedbyluMtagTheirXlnNotFound						TxuserDtclurecoveryinitiatedbyluMtagTheirXlnNotFound;
		case 0x00004701: DTCOTxuserGettxdetailsMtagGet													TxuserGettxdetailsMtagGet;
		case 0x00004702: DTCOTxuserGettxdetailsMtagGotIt												TxuserGettxdetailsMtagGotIt;
		case 0x00004703: DTCOTxuserGettxdetailsMtagTxNotFound											TxuserGettxdetailsMtagTxNotFound;
		case 0x00004901: DTCOTxuserPhase0MtagCreate													TxuserPhase0MtagCreate;
		case 0x00004902: DTCOTxuserPhase0MtagCreated													TxuserPhase0MtagCreated;
		case 0x00004903: DTCOTxuserPhase0MtagPhase0req													TxuserPhase0MtagPhase0req;
		case 0x00004904: DTCOTxuserPhase0MtagPhase0reqdone												TxuserPhase0MtagPhase0reqdone;
		case 0x00004905: DTCOTxuserPhase0MtagUnenlist													TxuserPhase0MtagUnenlist;
		case 0x00004906: DTCOTxuserPhase0MtagCreateTxNotFound											TxuserPhase0MtagCreateTxNotFound;
		case 0x00004907: DTCOTxuserPhase0MtagCreateTooLate												TxuserPhase0MtagCreateTooLate;
		case 0x00004909: DTCOTxuserPhase0MtagPhase0reqAbort											TxuserPhase0MtagPhase0reqAbort;
		case 0x00005101: DTCMTxuserTipproxygatewayMtagPull												TxuserTipproxygatewayMtagPull;
		case 0x00005102: DTCMTxuserTipproxygatewayMtagPulled											TxuserTipproxygatewayMtagPulled;
		case 0x00005103: DTCMTxuserTipproxygatewayMtagPullerror										TxuserTipproxygatewayMtagPullerror;
		case 0x00005104: DTCMTxuserTipproxygatewayMtagPullAsyncComplete						TipproxygatewayMtagPullAsyncComplete;
		case 0x00005105: DTCMTxuserTipproxygatewayMtagPush											TxuserTipproxygatewayMtagPush;		
		case 0x00005106: DTCMTxuserTipproxygatewayMtagPushed										TxuserTipproxygatewayMtagPushed;
		case 0x00005107: DTCMTxuserTipproxygatewayMtagPusherror										TxuserTipproxygatewayMtagPusherror;	
		case 0x00005108: DTCMTxuserTipproxygatewayMtagPull2											TxuserTipproxygatewayMtagPull2;
		case 0x00005109: DTCMTxuserTipproxygatewayMtagPush2											TxuserTipproxygatewayMtagPush2;		
		case 0x00005501: DTCOTxuserGetsecurityflagsMtagGetsecurityflags								TxuserGetsecurityflagsMtagGetsecurityflags;
		case 0x00005502: DTCOTxuserGetsecurityflagsMtagFetched											TxuserGetsecurityflagsMtagFetched;
		case 0x00005A01: DTCOTxuserExtendedwhereaboutsMtagGet											TxuserExtendedwhereaboutsMtagGet;
		case 0x00005A02: DTCOTxuserExtendedwhereaboutsMtagGot											TxuserExtendedwhereaboutsMtagGot;
		case 0x00005A03: DTCOTxuserExtendedwhereaboutsMtagNomem										TxuserExtendedwhereaboutsMtagNomem;
		case 0x00006001: DTCOTxuserBegin2MtagAbort														TxuserBegin2MtagAbort;
		case 0x00006002: DTCOTxuserBegin2MtagBegin														TxuserBegin2MtagBegin;
		case 0x00006003: DTCOTxuserBegin2MtagCommit													TxuserBegin2MtagCommit;
		case 0x00006005: DTCOTxuserBegin2MtagSinkError													TxuserBegin2MtagSinkError;
		case 0x00006006: DTCOTxuserBegin2MtagSinkBegun													TxuserBegin2MtagSinkBegun;
		case 0x00006101: DTCOTxuserImport2MtagAbort													TxuserImport2MtagAbort;
		case 0x00006102: DTCOTxuserImport2MtagImport													TxuserImport2MtagImports;
		case 0x00006105: DTCOTxuserImport2MtagSinkError												TxuserImport2MtagSinkError;
		case 0x00006106: DTCOTxuserImport2MtagSinkImported												TxuserImport2MtagSinkImported;
		case 0x00006107: DTCOTxuserImport2MtagImportWithSet											TxuserImport2MtagImportsWithSet;
		}
	}
	ALIGN8		Pad;
}
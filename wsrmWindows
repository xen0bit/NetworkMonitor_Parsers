//#  (c) 2009 CodePlex Foundation
//#
//#  Title:                  Windows System Resource Manager (WSRM) Protocol
//#
//#  Details:                
//#
//#  Microsoft References:   [MS-WSRM]: Windows System Resource Manager (WSRM) Protocol Specification (5.1.1)
//#
//#  Comments:               Parser Framework: PAC v2.1.1577.0
//#
//#  Revision Class and Date:Major, 6/22/2009
//#
//####

Protocol WSRM = FormatString( "%s %s%s%s%s%s", 
	Property.WSRMMethodName,
	Property.MSRPCPType ? "Response" : "Request",
	Property.MSRPCPfcFlags & 0x03 == 0x01 ? ", RPC first fragment" : "",
	Property.MSRPCCompleteFrag == 0 ? ", partial" : "",
	Property.MSRPCEncrypted == ConstEncTypeEncrypted ? ", *Encrypted*" : Property.MSRPCEncrypted == ConstEncTypeUnknown ? "*Un-Interpreted*" : "",
	Property.WSRMSummary && Property.MSRPCEncrypted == ConstEncTypeClearData ? ", " + Property.WSRMSummary : "" )
{
	[Property.WSRMSummary = ""]
	Switch( Property.MSRPCIfUuid )
	{
		Case "{2A3EB639-D134-422D-90D8-AAA1B5216202}":
			[Property.WSRMMethodName = "IResourceManager2:" + WSRMIResourceManager2MethodNameTable( Property.MSRPCOpnum )]
			_Struct IResourceManager2
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct ExportObject
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetImportConflicts
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct ImportXml
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct ExportXml
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("WSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "WSRM", "Unknown IResourceManager2 method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{21546AE8-4DA5-445E-987F-627FEA39C5E8}":
			[Property.WSRMMethodName = "IWRMConfig:" + WSRMIWRMConfigMethodNameTable( Property.MSRPCOpnum )]
			_Struct IWRMConfig
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetConfig
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct SetConfig
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct IsEnabled
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct EnableDisable
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct GetExclusionList
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct SetExclusionList
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct WSRMActivate
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct IsWSRMActivated
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct RestoreExclusionList
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("WSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "WSRM", "Unknown IWRMConfig method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{C5CEBEE2-9DF5-4CDD-A08C-C2471BC144B4}":
			[Property.WSRMMethodName = "IResourceManager:" + WSRMIResourceManagerMethodNameTable( Property.MSRPCOpnum )]
			_Struct IResourceManager
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct RetrieveEventList
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetSystemAffinity
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct ImportXMLFiles
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct ExportXMLFiles
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct RestoreXMLFiles
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct GetDependencies
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct GetServiceList
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct GetIISAppPoolNames
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct GetServerName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 16:
						_Struct GetCurrentMemory
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("WSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "WSRM", "Unknown IResourceManager method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{943991A5-B3FE-41FA-9696-7F7B656EE34B}":
			[Property.WSRMMethodName = "IWRMMachineGroup:" + WSRMIWRMMachineGroupMethodNameTable( Property.MSRPCOpnum )]
			_Struct IWRMMachineGroup
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct CreateMachineGroup
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetMachineGroupInfo
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct ModifyMachineGroup
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct DeleteMachineGroup
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct RenameMachineGroup
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct AddMachine
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct GetMachineInfo
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct ModifyMachineInfo
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct DeleteMachine
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("WSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "WSRM", "Unknown IWRMMachineGroup method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{59602EB6-57B0-4FD8-AA4B-EBF06971FE15}":
			[Property.WSRMMethodName = "IWRMPolicy:" + WSRMIWRMPolicyMethodNameTable( Property.MSRPCOpnum )]
			_Struct IWRMPolicy
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetPolicyInfo
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct CreatePolicy
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct ModifyPolicy
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct DeletePolicy
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct RenameAllocationPolicy
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct MoveBefore
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct MoveAfter
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct SetCalDefaultPolicyName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct GetCalDefaultPolicyName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 16:
						_Struct GetProcessList
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 17:
						_Struct GetCurrentPolicy
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 18:
						_Struct SetCurrentPolicy
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 19:
						_Struct GetCurrentStateAndActivePolicyName
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 20:
						_Struct GetConditionalPolicy
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 21:
						_Struct SetConditionalPolicy
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("WSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "WSRM", "Unknown IWRMPolicy method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{BC681469-9DD9-4BF4-9B3D-709F69EFE431}":
			[Property.WSRMMethodName = "IWRMResourceGroup:" + WSRMIWRMResourceGroupMethodNameTable( Property.MSRPCOpnum )]
			_Struct IWRMResourceGroup
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetResourceGroupInfo
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct ModifyResourceGroup
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct CreateResourceGroup
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct DeleteResourceGroup
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct RenameResourceGroup
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("WSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "WSRM", "Unknown IWRMResourceGroup method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{F31931A9-832D-481C-9503-887A0E6A79F0}":
			[Property.WSRMMethodName = "IWRMProtocol:" + WSRMIWRMProtocolMethodNameTable( Property.MSRPCOpnum )]
			_Struct IWRMProtocol
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetSupportedClient
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("WSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "WSRM", "Unknown IWRMProtocol method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{481E06CF-AB04-4498-8FFE-124A0A34296D}":
			[Property.WSRMMethodName = "IWRMCalendar:" + WSRMIWRMCalendarMethodNameTable( Property.MSRPCOpnum )]
			_Struct IWRMCalendar
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetCalendarInfo
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct CreateCalendar
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct ModifyCalendar
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct DeleteCalendar
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct RenameCalendar
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct ComputeEvents
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct GetScheduleInfo
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct CreateSchedule
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct ModifySchedule
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 16:
						_Struct DeleteSchedule
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 17:
						_Struct RenameSchedule
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 18:
						_Struct MoveBeforeCalendar
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 19:
						_Struct MoveAfterCalendar
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 20:
						_Struct GetServerTimeZone
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("WSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "WSRM", "Unknown IWRMCalendar method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{4F7CA01C-A9E5-45B6-B142-2332A1339C1D}":
			[Property.WSRMMethodName = "IWRMAccounting:" + WSRMIWRMAccountingMethodNameTable( Property.MSRPCOpnum )]
			_Struct IWRMAccounting
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct CreateAccountingDb
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct GetAccountingMetadata
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct ExecuteAccountingQuery
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 10:
						_Struct GetRawAccountingData
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 11:
						_Struct GetNextAccountingDataBatch
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 12:
						_Struct DeleteAccountingData
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 13:
						_Struct DefragmentDB
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 14:
						_Struct CancelAccountingQuery
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 15:
						_Struct RegisterAccountingClient
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 16:
						_Struct DumpAccountingData
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 17:
						_Struct GetAccountingClients
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 18:
						_Struct SetAccountingClientStatus
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 19:
						_Struct CheckAccountingConnection
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 20:
						_Struct SetClientPermissions
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("WSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "WSRM", "Unknown IWRMAccounting method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
		Case "{FC910418-55CA-45EF-B264-83D4CE7D30E0}":
			[Property.WSRMMethodName = "IWRMRemoteSessionMgmt:" + WSRMIWRMRemoteSessionMgmtMethodNameTable( Property.MSRPCOpnum )]
			_Struct IWRMRemoteSessionMgmt
			{
				Switch( Property.MSRPCOpnum )
				{
					Case 7:
						_Struct GetRemoteUserCategories
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 8:
						_Struct SetRemoteUserCategories
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Case 9:
						_Struct Opnum9RefreshRemoteSessionWeights
						{
							Switch( Property.MSRPCPType )
							{
								Case 0x00: //REQUEST
									_Struct Request
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
								
								Case 0x02: //RESPONSE
									_Struct Response
									{
										Blob( FrameLength - FrameOffset ) EncryptedData;
									}
							}
						}
					
					Default:
						Switch
						{
							case IsValueNone(Property.MSRPCOpnum):
								struct
								{
									Blob( FrameLength - Offset ) data;
									ReportParserWarning("WSRM", "Property MSRPCOpnum is missing") ParserWarning;
								}
							default:
								ReportParserError( ParserErrorProtocolClassWindows, "WSRM", "Unknown IWRMRemoteSessionMgmt method, Opnum:" + Property.MSRPCOpnum ) UnknownMethod;
						}
				}
			}
		
	}
}

Table WSRMIResourceManager2MethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 7: "ExportObject";
		Case 8: "GetImportConflicts";
		Case 9: "ImportXml";
		Case 10: "ExportXml";
		Default: "unknown";
	}
}

Table WSRMIWRMConfigMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 7: "GetConfig";
		Case 8: "SetConfig";
		Case 9: "IsEnabled";
		Case 10: "EnableDisable";
		Case 11: "GetExclusionList";
		Case 12: "SetExclusionList";
		Case 13: "WSRMActivate";
		Case 14: "IsWSRMActivated";
		Case 15: "RestoreExclusionList";
		Default: "unknown";
	}
}

Table WSRMIResourceManagerMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 7: "RetrieveEventList";
		Case 8: "GetSystemAffinity";
		Case 9: "ImportXMLFiles";
		Case 10: "ExportXMLFiles";
		Case 11: "RestoreXMLFiles";
		Case 12: "GetDependencies";
		Case 13: "GetServiceList";
		Case 14: "GetIISAppPoolNames";
		Case 15: "GetServerName";
		Case 16: "GetCurrentMemory";
		Default: "unknown";
	}
}

Table WSRMIWRMMachineGroupMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 7: "CreateMachineGroup";
		Case 8: "GetMachineGroupInfo";
		Case 9: "ModifyMachineGroup";
		Case 10: "DeleteMachineGroup";
		Case 11: "RenameMachineGroup";
		Case 12: "AddMachine";
		Case 13: "GetMachineInfo";
		Case 14: "ModifyMachineInfo";
		Case 15: "DeleteMachine";
		Default: "unknown";
	}
}

Table WSRMIWRMPolicyMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 7: "GetPolicyInfo";
		Case 8: "CreatePolicy";
		Case 9: "ModifyPolicy";
		Case 10: "DeletePolicy";
		Case 11: "RenameAllocationPolicy";
		Case 12: "MoveBefore";
		Case 13: "MoveAfter";
		Case 14: "SetCalDefaultPolicyName";
		Case 15: "GetCalDefaultPolicyName";
		Case 16: "GetProcessList";
		Case 17: "GetCurrentPolicy";
		Case 18: "SetCurrentPolicy";
		Case 19: "GetCurrentStateAndActivePolicyName";
		Case 20: "GetConditionalPolicy";
		Case 21: "SetConditionalPolicy";
		Default: "unknown";
	}
}

Table WSRMIWRMResourceGroupMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 7: "GetResourceGroupInfo";
		Case 8: "ModifyResourceGroup";
		Case 9: "CreateResourceGroup";
		Case 10: "DeleteResourceGroup";
		Case 11: "RenameResourceGroup";
		Default: "unknown";
	}
}

Table WSRMIWRMProtocolMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 7: "GetSupportedClient";
		Default: "unknown";
	}
}

Table WSRMIWRMCalendarMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 7: "GetCalendarInfo";
		Case 8: "CreateCalendar";
		Case 9: "ModifyCalendar";
		Case 10: "DeleteCalendar";
		Case 11: "RenameCalendar";
		Case 12: "ComputeEvents";
		Case 13: "GetScheduleInfo";
		Case 14: "CreateSchedule";
		Case 15: "ModifySchedule";
		Case 16: "DeleteSchedule";
		Case 17: "RenameSchedule";
		Case 18: "MoveBeforeCalendar";
		Case 19: "MoveAfterCalendar";
		Case 20: "GetServerTimeZone";
		Default: "unknown";
	}
}

Table WSRMIWRMAccountingMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 7: "CreateAccountingDb";
		Case 8: "GetAccountingMetadata";
		Case 9: "ExecuteAccountingQuery";
		Case 10: "GetRawAccountingData";
		Case 11: "GetNextAccountingDataBatch";
		Case 12: "DeleteAccountingData";
		Case 13: "DefragmentDB";
		Case 14: "CancelAccountingQuery";
		Case 15: "RegisterAccountingClient";
		Case 16: "DumpAccountingData";
		Case 17: "GetAccountingClients";
		Case 18: "SetAccountingClientStatus";
		Case 19: "CheckAccountingConnection";
		Case 20: "SetClientPermissions";
		Default: "unknown";
	}
}

Table WSRMIWRMRemoteSessionMgmtMethodNameTable( Opnum )
{
	Switch( Opnum )
	{
		Case 7: "GetRemoteUserCategories";
		Case 8: "SetRemoteUserCategories";
		Case 9: "Opnum 9RefreshRemoteSessionWeights";
		Default: "unknown";
	}
}

